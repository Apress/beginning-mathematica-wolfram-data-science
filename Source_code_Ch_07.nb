(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1563845,      31526]
NotebookOptionsPosition[   1549664,      31303]
NotebookOutlinePosition[   1550101,      31320]
CellTagsIndexPosition[   1550058,      31317]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Data Exploration", "Section",
 CellChangeTimes->{{3.8122113588074617`*^9, 
  3.812211362650461*^9}},ExpressionUUID->"d9c3cce5-6edc-4d13-98ff-\
ca5496d76db5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Wolfram Data Repository", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.8011006620113454`*^9, 3.8011006682501783`*^9}, {
  3.8025610251576295`*^9, 3.802561030112951*^9}, {3.8062603067411537`*^9, 
  3.806260309603479*^9}},ExpressionUUID->"29e87de7-0a5a-47db-b547-\
ba20b409e47b"],

Cell[BoxData["1"], "Input",
 CellChangeTimes->{
  3.8062582741703696`*^9},ExpressionUUID->"eecc3fda-5b1e-4e58-8064-\
eb0c1131ca5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLRead", "[", "\"\<https://datarepository.wolframcloud.com/\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.802632329231346*^9, 3.8026323369153805`*^9}, {
  3.8026323734417477`*^9, 3.802632424832693*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"923a7197-aac6-4fef-a24c-120c23a7b043"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"200\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"OK\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"text/html;charset=utf-8\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"200\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"OK\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"text/html;charset=utf-8\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[CompressedData["
1:eJzsvWuSG1l2Jqj+q1V4s83KJLNyEPfl7pAyc4xKlcQyI6UyVYk9/dPpRBKh
QkSQgQhkkb96D7ODWclYzwJmS3O+75x7/ToAZiZTSTLHbKqSHoC74z7PPe/H
f315+28v/8tf/dVf/T//13/5q6/+6z/+67d/+h9/+F2zu7/ef/PXX+FPsx9v
Xn/9aHvz6Ju/bpqvdtvxFT7Ix+vt/dhMu/HusL3/+tG//+mf2uFR81h+xge7
+/s37fbtw9Xx60f/e/vvT9pvb6/fjPdXL/fbR810e3O/vZFf/f53X29fvd5W
v7sZr7dfPzpebb9/c3t3X736/dWr+93Xr7bHq2nb8stvm6ubq/urcd8epnG/
/dqdNXM4XLX72/HV9lXV0P3dg3W4v7r5c3O33cuL9+/228Nuu5Ued3fb775+
hPEf/u7x4++//371/e3+u7vxenp1s5purx9/Jy0dHh9uH+5kJIfx5tC+ubt9
7Fbrx6/3ty/H/Wo6HB79jOb3tw+v2MHj25f/8fhuqz0c3h3ut9ePv9++LHes
n9Z+2B7+fHVz805G4GUMNw/7LzyC6/Hqxkbw118dprurN/fN4W76wTWV3TnI
7sjf2z9fbVv7uvoPaeSrx9qGgd391f1+q5+b5r9rK80/jrLn/7Z9c3u4ur+9
e/d3DaDt4X4UaGueTDLgQ3N/23z7cDfeb1/xbW3scdVaDTivttrn1e1NBTlP
H15v5dt+v53wpLn9Tr7lfn7bTNb8Kwzmu7vb6+bV9vr29d34Znc1cQA4Sw/j
a3n3MF1tb6Zt85vmegQkv7ndCyhPB3lyOwlIN9fbV1fjqnk+3rxrvru9k7cO
f9fcPFxv764E2H/b3F9db5uDfNvKb66u2ej48Orq9rfN6+3tAUdNIPGRTk3n
N0PD+ObNftve3z5Mu/ZqwhwPV++3h68fuWH9F/n3k2Dkx0AEqzxvyeO0Wgts
fDce0eHj0xGs3ty8tsFW49Sx3b97I1vCOT7Ga598cPa3Df4vwXNkeX1451c3
Ttf9xXWLcfLO+Tivx5ur77aHn4YD/lNDyz3JCb69uTSQw58N8j71SA7jd+Pd
VftGENT2VStHdXU4vsah3t/eff3ov8VXQzdO5yM87IT8TA/3zecZpf1dyeXR
OTrS03J9+/JK/kijrdxoiboq7PQBXPiB5gSLAIe1uPOzGrk+1M1IA99dva4a
+nRL9fLu9ntBfNrj6i/X+wuDu99tr0FFZI+rMf237/g/0KWCFZeb/jFsgFC4
xzfAzHs5c6R3YCr+Mw3/5PU5eabrc9hd3bze/xpGAiZxe9eON69aef6wvz98
3kFdBJ/ClVTD+Opx5me/enn76l1z9Up6vhXIeSM4PIPVq6sjH7z+/tDazN7s
x2m7u93LZ/An8ga4ZT47eVW5ZjQx7ceDYObvhR3ILe9c5mO+Gj88b075f9O5
fY2Wb8bjo/xD+enV9esPs1e/DEeXb+5vX98qnRn3FbL4t+1hO95Nu7K0WNnR
JvkYs9SPMvC8DLurV6+2N2Ua9QoZmpOX25cP9/fCCdaz1Vvle1PWWx/wZzoa
w5ePqneFEIzt9i9vBDK38rPvxv3h/DnQxd3t/qDN7q8O91Wj9dvg84SFeS2H
Tt8Fazi+WTapL413ryEk/bcfbPGb6mdfCZFqIAX9w+1fvn60btaNx39yPLZX
r3fSlNteP2pUJuLn+seFS/7XN9ubRrshE7ngd8u7wivuFneavBW38vtHJ49k
3a5dE/a+9fu+6eVf2+994/etfuv3rX2T+61957tt/37Z2OOfPBCB44MIcedD
eT40bpROGizRGt015Vuz/BZWQ2zdynXPXN+4DSbQppVLvDyZ33OpGeomZdjX
svZjapI+b5L9n9/ak29t9a2Rbz80ZxFtjq8FgZwA9Te/2d4c3vz9T4J1oLVf
CsRP2/rPAviyvU8E3uhEqP7x6jU5kV8IxJ8biCsECVwJTGfoavkZ/8dnvPOT
IPsElq0Xv0o7NxzDUwco6y59fnQJaGaMaNAzY16SI/vysC8vZuD5wPbk0Z1t
MSFmP77citz76uW7H4TAalj7q8WgawJ3gb69ubt99TDdH84I3WIdv/mDvdb8
Zrx+8/fNH7d3UAcdhNpU79VrU4/iI4d0v512N8JBvhYR+0eG9afq1U8ylsPt
/gHQ/WMD+WN+79OM4uENlHI/NgZ9y7bomVCfG2FMP8mAoH0ZhUs5446+1QeF
C7nYUwb5DMSZbzDYBqf2Rhg6aWi7XyCgc8T8Q2zIq+3hz/e3b5ar9GNo+mN5
kZ+IrD+KH1mi7P800v44ruQy0v5BtP2L8iZnOPxHBnSZQ/n/Jo9yTr+WJOec
6CxP11ePH/Y1Z/9hEnQKcj+bCH3orBHc34x3Kv9/kPxV8wBENiMVvLNIpc0v
cM+j5np7v7uVGf3z7/60RA9XN28e7k0T8fZhe/fuUVNJjF8/+qPC/rjfFwW2
iKrbw4LQf/UYI7lA1b96LKOnWGmCp8nbWcrK8uqrO0EB19eyQCa13h63d/tR
BnMig10QYE9/+2jemZt7WbcfEWyr29Y3NuWDwi426a7I6+eyay3/VU1DGm3x
5na5/EBT1SuPmr9c728OSyISVrd3rx/79Xr9mOrABVrbrJthKJgsphnDxXjK
iZKz45LJJB41313t96poUgbP+yb2u+7oh13bvX8efBOSfI1rfo2+SRv56jp+
TfJykK/B82snT/HV8+ujizwlesbSlZ5f9a+GV4N13gxhN0hvT/375/2y66Hp
+10f5dkg40iNeyb4IxzjbrM+tvH9c4evz+RBtw/ytJfhDI3f7Bx+0slv3Gl7
+eFwMtQzfrXiT5cber/9y/1yK3cuP8MBMZXnKVUSIlqA8Pbu1fV49+dH33xA
kSmDkdeXw5vVMLquZTjj672A+qNvfn9Na8z99rJZaTGCm9uXcjaypelb0O8r
wVNmdbLuv3r85gMLUulN7O784fxgz2LPhZOHA9mYMuV6e/Mwn78ZO59zXIpT
cz8LjqgggZO7F3mZU/5lbsxOLI/pTziZdgr9MJ9C+fyN8RKKSjMH8dV0dTfJ
3kxykJ1IVjLid/mT4N2Ev3pObm5lY5uDDO7P23xe9VubGRh5+fE3J5LbofUm
uAl57vZCRI9u17p9SyJan/7H3yyF+xNK+cPLDs3o4aPXV3/1iy7vc4Gbsrhc
Cky+Wwn7sXPpKIjJpff87sLpjeqNj1mZMx6iJn2VBrGiN8uzUS+DrpISOrP8
V93tfG7seHV4EHL8LpPEP9xdCRp51/xLpVfY+eqn9RE6O0Rn+2mMilou2pfv
2kmww2vYVX7y5l747Tf/wHvNy3fNt3bvlGOtSOF4J2//JFqYD0CsOPt4QiJd
bHDvpx4mX24Ao07jG6Fatw83rxa3/+P26ibf/6YirLff3+ihi7+Ne/5rYzma
JIAYpL7S/dbzlVYuBdJOeNlTsLMNLZv1oV36ABjNIPDRjE3u4PGT13dX08P+
/uFuK9xO9W0hwZ7gj/9Ed1j1m9vrd+gsf/40XX27214Lx32HrsrnT9SVEmec
1nHf/vvNlfC7B6zn4kGTH3zKQQjH+0faWA6le+Gs7dYn6riAz7efEnT+sXJp
kb7qr5+mw9+Nd/e79o/qLyM98ntj3z9RlxMOhE6wfP5EXb16UAs6usqfP01X
/7zVncJJLJ8/UVcQNW+u4dAlfZUvn6azp9txf7+TjvTDJ+pE8NYtkZh9+kTd
PFyPN+2T6f7qeHUPvbP0h1vNfOvTdPx7eC2hO/3waTp5Zu5v0k3++Ik6uvpu
W6EMfP20GOP5OO2Eg2mztls6tVu1AvyTdHzz8N04Cb7PvVbfP1WX8K4Z7xU/
Vt8+UXciek+ykOjLPn6qju63t3ew4rxjX+Xbp+nuD7t3B7hyZjjFYuZ7GVg/
0ZL+wZxN0aN9/DQd/ZG+rC32bZTO9GvDr5+uw7yD5fMn6goM5cGWcf7yaTr7
0/Yv9+2zK2EiR2PycCeb2Mr9T9T53XhzgEkvMyrLG79opyKEQybZ79Hq0mKn
DZ8I3hd0KT8ufcNR9+dI3vxdJXX/Sb7//xL3LylxVzvzy0vbaPzxv2QX+hb6
WIG1csMUtL8gMLPDP11dCy9CR30cHbjt67dfvivybpmH+wQzEZRjmOeXb/yf
S9BC3pj5zifamX+GBIRN0Q+/fAe/u7m/un/X/lFeoeTKrw2//vKdPUHwB3An
/v4KcfJpr/JlewcmZ2FVzREyj7+/vfvzd/vb7x//8eHl9dX9n27/tNuaTWfp
3rtClNqjYrDg2y3NvlAEP2qyr8Olh99o482/bL+/BGM/cSY/SkhhM53u24fD
o9l+k2/ZQL7VG82/n4JhHsNl28tluvdLmmku0bePoGhdRdG6RwsDTZftM93P
Nc8IMGp7HzbTCN1c/5CZBqY4+eklstU0alz6UVp24lhUOz8sTHuXjeWnjxbL
f2KH+wlGjR80a2RrWW3KyC4P2ZKcvQVyl/JMducWXkXZy/vUO+LHDoD+rvKY
kAN5CrrqM6EhVLkf9aC4ku4RSHq35Qj106mJufaVODOp/mTXCbiElJ/NtufT
Zfygbbl26D9cvdpqQMH27rZ9Od5kp4kf3aV/2pKZfwW/enXO/0jj08ciqDkI
4N9224PgpG8FM7+8E1L8rTD527+0JJCtwxl8B0B4OU5/fk22sWW429893O3/
5pcP2Xh6e71FJMZTWUFTUFFriRCEv72Amioz/Oma6sSaPLFGJ9ZwYo079wqo
LPH56y9CC+YZ/8v/+Lb9nbCer4UGvmtlq98g5rX9/c0kgHNzf/gVLPbNu+ln
LLVMrCkTa/LEmjKxL7HYz//l93/8069gRa9vrg73P2NNOf4vsXD//Px5aJ+P
dwfggCO42edCuX4FCylD+hnrKNNpQ4P5NDYf+fLmSyzst7evtu3td+3T8fr6
4W58edW2v7t5vb867H4Fq7vLg/oZS4yJITK+TKz5v//P//U//9f/0dj0vggU
b2/vx9evt6/aPzy83F9N7Z++327vD+3vHu5u32zbJ2/urvZt1w6tX4Nj/eLr
v+W4fg5854k2OtFGJ9r8jc70tw2n2shUG0z1b7/EZvzD9vb7h/13bds+F1C5
u/kVwf1LHdrPWHibVNM2OqmPhfYPiA/kIj9SgLiCLLeUCKqn0+2bd2c+rMVd
VrjhR9+IpP2hxBrN1aEZmzcKW3l9m/vdeN/sbg8CaLJCKmJe3bz+YKoMemUf
BC7nnBnyCwh4D5Nyvve3zcttc3i40veFu2+uihPmg3ATVze5PTT/20b34+q9
fR1vxv27gwxWN80A69XV4c1+fPd3VzdQfrYv97eTiN7o+vr2bru65Jyp6/PN
Pzxc7Tklmcq9LM+PxutSx0BxDYqMxycywz/lBwAFzv0nNbqf7ae5udqO+lu2
8qGde3N3exRgwv493FxR5NOjwtWFTRvzY+4Srsj4Z3y/up8Xfv+u3kO8JDvx
3cN+1fz3K3gG2qZir6+RtgTC3IHvMRkK79mJ/OGhyr69lAW/NzAYG41NngEO
IzYgLAPmigN1CPjoM8LC6nxZZd9fL9ZVUGH/eB3lryzxww3stq9bGWAJhmbb
M3bT7+zkYO+O9/IcCKHFtqpJaPtmt73Jk/zN3eHtw+3fH5onNzeC2qYtHCJ+
c/Py8Obvf3M34pFq194sUcPSV1q/Xjz1sr3Xt6ZMuqwMuOHjM/fpHwC6JYLd
/mW8frMH6/KvL37/j25TpNP/rJLI+8r3dCa/wuK9vrppaWr4u2bl0/b678+6
aprZLXXdrI9u2DvXDI1z7fBi/f5606RdPEb+a+Gdvjm28Wl6sdnF90X5c6Yp
vaAL+sfxSuD/4c0r8+u+u4Xz9Z3IlH/D9Wjd5m8VkBd0Qm1A35Qt/gnUYCHq
n+64PDRfz6sLaoHc63nc/C/roLicQD1fZkv5yc7HqlZ6I+daDoP6sS+NXiHK
fxpqUrbZhdWmcf0qTW6FeIpV37qmX4XQJgGSZli5oXWrGNqwWsurqe1WfWzk
WWzx7P112698aOSVbsLjuHLtqgvyGuOsvDBH8lyaCAHxWKsuNp30KE/6Bk+k
gYSO08pN7WrTNXEVe2lO+u5Xg9wOA95bDWi5l6Y7YS1xF+2+v5aR4vEwxdWQ
pJduEHYsrELX5L57+WHspMUeg+rRE+cW8bue45fhyc876X9I0r8MMtkgQ9LO
O5uXtLDGtEIq3Xude5SHDv1ifeTtHmOXActrHiPAEskDeYpmGYfGBUAsyarz
0m3wUytdCS+JoXr2v0H8zMo3uC/T6jt86rG4Q7NuNxiCS1g1N6zWGERYxSgL
18nvZSz9Cj1yCaQ/L1Nl85tePmEfvOzfaj20/eTxOMjGYek9pokmOukievkg
gKO7KPPoVmija/BIlq9bpUGeBgxeAIEBd9i6gHl4vCWfMPYoTbsoE9+gxd63
2oAMLTVOWMh+4hgxNewTOsNUIkAudFxSgCU6cxg/9igkmYCTFzZx4vgTxo8+
EvpAFzYs/FRa9GibS4yRIYRIfiofZfOlA9kZLI2sp/QRABk9OyFQrAmRaBcL
G7ALQVrwAw7Qqusn6T8BdHuud4MBYxCyy4OGInosgjzCIqyxlQAPDfDJTvwX
MFqNEDSmZ+HRfB6Bc1ng+GX8mz8frhJ0EU5x1RpLHXBUARErxPsLllkpZMmR
Hr2uq1w0NhMJV4KA5kreWgv2iPLfai1AluTn6yhnSN6VG3wdJ1xwHN5bSxuh
EYqHsygAIC1Iv469Obz8/rnsoxw7B8Dnu+hAPshzaXiPQ8SWHFqSU+p4gsZe
4AH/dHjSBtAX4ElQAC+IIXUAEoH0Vfce+FkwTBwFIQInapCpgPjKyxpIF4Mc
H+lM2l7hpR54VRsHjsRE0ipZnKtgx5WTtcPkcYjknSgr0qcdXpx0sFiYxBk1
61EOL86vxsUKupAjcy1YUjru+hFAT8i35/JRlypyd+SnvSyYvD0KAsuhttiJ
MOE0sjmZSIdhyjAGrFbLJcTO6CrL9jUyKt89kZZkZZIuv6xBD6QxjE62D9FD
uOqDyJawOT1+0dsv1iBUjZuAg6QDLCHm6ti3oAHpWpZYkCFvjXIwfcOL/lhe
EMQQsZMycHkS5BUH+lj20gH5DBPIgDwWbCC/6EALEqHJCVICspHxyZ56RXKC
MaTDjqAi64ENiNy14LkdXsFKdnCUbQZRKws5gDB7bAioKjAgphU6dCMz2bTE
ppydzFMQImj2aiN3CawK/Fy0g4CGLvn760ER1XoAOMjvEtFmx8YEteEceVsv
3Acyc8CQDlCD2LAB9DAAi4PgYfTYa4ed97otGI8cJcHcMuO1wnGXeEYHjFA6
G0ZZTvACrivANaz6CQfYETsnTh44tMOGdQq8A1ZRJ6IkoBs9l0+vulMd4AA7
60Eb7Zof9UAxHXkQXnW1I2imgGIQRkkv+b4ge0fWxevZkYeOYBxXxAUBIwYr
snKjnGU54XrV34OvcWSjBMJIQT04HKWJJGwDAEeAxONsg73iAq9BfUB2QngS
N+CR9Gqw4RAxJiCAYRG0Mu4S9JYwrEj4Wg/ElGMgxgwFbyJyHtu+BnAFPpNl
3essJoVImZYHDgHAubDXkwvk4EHsZKeIVPU0ezBN8nGvXQZyDT3B6P21fBJy
2IWdNLvneKMNFcC4aYAkrM8BJwqPB1yJpzGZoJCKA5MyYHsyi67TWx7/8TCA
nZUJCXgk4ONDa8gff0fBX13GsHoMdV5xwvPUKtfFQQwjG8/rxVamPFPgHM8x
cMUdu/YkCU4wusyo8UBE2m1ryBbEBjxy6KfWFow75fQa6hXtFU/3NnRBN+xA
+82/TbqQWAjOhgcl6hbob9m7oC2blDf6x3WSr0eSBX2ptZVrFXHqj4n8+Kqs
nc9gjXd7nY8MBUzZnsuAxbY2sDCJ+IojC/aPO7onYI1ycuS/sh3kb3W32kKw
1/6tTbdrC91OhsvGFRgv2x85lh5w44ZMzIjpS4vSO05qIBoGGLPVfip9rfMW
gb/YdKNyeEnpNRh8zLQnd6eXTIwieGfIGU7Z+ijUb83tAueRtNlWj2cnYOUH
Q2G62c36bZtpAoYCUi1Mr6N40IUR+K/PSFJGAeJKGOx4loj1sUODHhDdTBA4
YISyuriJloPuNkGkJaV0+ruggyBIB2XTyfOApKCT0GfYxLHmULrcDO8Sxox6
rA3WlHuTZdAxEQ69vuJHR7peyDpIxCpO81CcgpHnXKu91rsxn6FEsu5IsmTW
Tln01JcVBnYcpgJFgaPBmnXGGyo/lDjEfkQ7ocA5x7EqDB16F7DGAUiQmQHg
yYac/3UZ+NayeRtKeNwD5dYmRQaC13Ga5QgIdXJKybEbxMBRl1vH1be2u9Kj
bR0xn0rLXtnVzKAaGEXeGvL010mgLjMWLfdh0nejNZmPQ2kh5cYK1wuQTjok
dCrrtAoFvGQO4E5KOwV63haMg6uuXNeWloayzXhOSuoMeRQkGPSaERLfCRxB
GkAsbaeAgLjNxFgdqRcQsjfuM88sGDJJupQ+ywWYgoHXoPvh+UoNEPqqe1u4
KwLz1NqglQJ43VNlotZKpHwg48DNoLoE6B5/fHcoR4KnEa3xLPleFzIaX7fu
ectOeqc8vPZsfzqb2ZC3vtMjqGjTgUyBX9H9xQsUN5R7UyoCJg2d9Co3rHUV
sR6RU0uD0SiBvgwPiizWyuG6fCK1f75qLw15gjYuoxNhXsygFMDl02PzxkLK
+c/T0s1OeU4ztl85kLNALHeoYVXpihJBbbo3OpXPWDAqF8uyGffBdaRgqIc2
U6JOgbVvjWtolQdQSpO5CJ1Kp++5+WQUhOvDjCq7AvVxr2h8skPt7IS6+bA4
Q9baoBekJbizS3ktQmnFpUlX0vXlV/ncGZY3JktHbWwRaKlsh8/EE2w8OyLs
UOgjL7pKegoUfO0EB26V8hi6sIOJ4bL3YEyJD5JhpixRJ5WSUpZeBtvjmeTb
0ZUm3hJWgo11MrRgIIg3hGhSN5WhBXRoBzQIpNuEIg4QowSCh539gh6MrQVL
Ra5L4L9CojrEKfNJwQ6En5HwvPlCkqg0KtRLhEbyGPxnaEVWuKd0OeglczUi
T9kOko5BmI96kDrSsAQSIpMVCXQzUj3JS1YHQG0wcUsCXhHmplc443mJmBDl
GuUeIZ+GlYF+LHQnGKCTvSK4rJSRDF3Z+16R2kACprsDemVXghTeAdHoSYIJ
R1EhPyq+cET2wNfQyAgDRq1pEaVIaEVIgazqU2bcDETafHgDUQzkWmAx4Z8c
xahN1Qj2rVcMTLiXn0Twb9RqBJEbpxkl2XbyzO+NJE1ZfUGQ6zKnaiRSZ2/v
YvELhTFUnHl6QwcKcXv9tZ+UyvGYsVnVfypdcDPCQ/4yhcBMGHkesgycwZDj
J7cLjXJhhp2i4hXUTpmMK2weMgJMlIr04M4IWRkfN6NQ2VbhcuZ1WJd5GxAo
ms7LYtjMGFXFup6QGKJyAbrsZfFDZuJ0MeajsCaDRAwKetNxkqSMxuGGwjHh
bGaFlx1XCH6KfybbRl86gM4bSCpE22iCJPE70W/higPZZYqa8mmHBcsLnJGT
zzPvFMOZ+JgRSHn1lLwpvwUxszCeDXdSIRcjy+swFExjnLRhWu6Q/CDjyMTR
KEHLIJMKKSOnuRN5yUQXkAOVqfLZameETFELmANHN5Z9N15aIUtOMHlkclXK
GASv/7BpIsc428Ms0bohs7Jl57yxn3Fe0QTsXrhqhUjuVmFGnUpU87BDke51
KHot+20LQILZmjxc2Bf+0g5nyJjYV0CaMqi6zDpWrHg+6kYWg86IrCGhIUOj
yuxdRdozK+2qHu2nRiDzZsQMYj04H0B/l3Gh4ZHT80km40hFsbOzlBUZCbAP
JZ+XxlR4JronTQfTGWa2NxPMsRKPKJZMRS3ismqEaxNsRqqkCORsQUV6iPKZ
tDoD61gkFKf0tXScGS6vf40ILLQGSpcG4p5YS2Qx71PIK+Fj4TSdz9i4LeyG
jO3Y2snOSN9WHYc2FaWj7vPbGSIMXAu4iAyWFfUuS4xTfpg1JrUE6TPtUZ2A
r7ubGRBF/4kHQ1k1PRPeuDv5T5BADz4iM7uGaIjmqCMxOG5mbQWBcbI902Oh
T0wXMM3Dq4BV5r9WTU4i4SIhF15cz1qvZ2vI51K1qKk6IqbgM01YWwsvwLJE
ahknZ5G0m9twmZO2vtvVZjLpEwJZ5F4ruPRloXzQaQWD967QXpuvTGE4GELF
0bNDkYrQpPgqb7wpqR3PEoC/84csxBdZJJYpVyaRLL6lMg1fz8tVAJgZ4u5M
yUOiPYsyQ3XkfWZFCnHtq+0rbETHnerzprdFLlGtYiiLb2xjWFquSKcOJhUE
hdvCtejTqYL0agRF5ZeZpYz3nSl204LP0iWihWynxysPLx8PgTbXld8MBQ2n
MgVtwFGrLXcPbREigJGN/fF2vAqoDrmJvixEpc4YnZpGXK2uYhdApGnK0H/K
x808d6wO4Vpgz1B8InvYzkxjZkzhI7CCCr/rZ1yscqv8qEasQ8WRknNaZcK1
Nh07h5A1Jip+pqzEWAOTONi9NoFIsdYBFf6Ew9Tbpih0mZCatYenmSseaMFQ
qtcrAuiTospZtdOoLTdUVMzl7wtdqjOUqm+r5pq7zN5MPeQruTRkElZRBaxl
7FshP84Y9KC4gpR7MILokgpOMOw4umfI4qo2nXQaihTYjXpYfwLcIbBalQpT
ye4OxwPST5y1cxvY0PZtUaWEqJgetstOZ4WPoV6jzKWDhyFKHyHtpVlbr0R4
2ZOHUdEXC9JmWNF62EWzZqhWI/SmZ1DwgMMJ1jLlQ5oXmhc1hmdDBLfV8HrR
12StkKH/+bj1eQtVEBi018Z0m1SYymhGchixbLkym0Xtb3AIu2RfXlK7wTEf
n6xFIPyjtaYIGC7MzHk0kraq1bhcfOzJVNBy4YPe6tvs1tRYHZcvegq60WxX
WWTNTKThIvNVIC+08ASgvN9QXnKrYqyggo4inachxVwBfKZDWR3tDEu4jLsd
9ZEL2lEoxJR5zqRcF3jHeSldY5xFL0hmVmdQoHFqxxwKFx5UIYJTkt+EQnbK
agGV073KkzKeyNupzyg7tZkP6k+Qu+0xTKv8lzscoNU2bBVmfZVBF1EhyZun
UjorbtZZ2lfeVVGKnfYO2Ei+d3JLYAB4r8yaFHmxNqqsrIQ2Q/1TIQ/zNuce
4O6GG3bIosGuU+1v1rZWvPYSDKTXLqxi5tPnP4XRUdLRmVYsS2tZW6z8mkkq
k+G2CLVQ8PC2wec4b36/8rN+NqhoGLLibKgkuXmidu4HbjO1IlGJNRDHLLLJ
rbdtLVz5Q1uLcHF0TeYhyNtOdkRDIcTHVkl2RvHJ9BtFQlXZ70SbL+vwNqsw
uQRqdzCDgKoTDTo81xqXoHIscLsaZvghn7qsJ6CSf2/TCGbh9qZJ8NkNqTHF
l9mBVXQ3pASaG060ek5NmVlO51n21HgG+a8cNbWKVeZuyEHDXlWzE9RsHaG3
B6EYsj3EuNG+Lap66gHU3wOquJFcaVehIQ9nBwqdjlAW+CbPNHwwV9T3dr2B
NzadFM1n0TgYAR/NDaGSU6HsFNIN/Nb6fQaPqc3CmTMRDwwQvQ087NBgXqcs
PxVDT0vuRc0aqg/ABE2Yen8d6Ny5SYdZrpG1PC74iVkYJ29G2ad0VESWWX4z
03ealQWGnIpZuMkyqkkaIujlNk2vNdvg8ikreiUQtKiGZdhnKgm6OePBiSHC
qqhKjRKBd/EUkmZN6oJ42PGKmbvTJSsimHLBs/SQpYLyo9kKGQ3Jrotuh7ow
sL9YZl1SnOuVWZ6NG3BqxsBjkZ55GMBch0Lu4XOZmrPb8BuCACasoz+RDBpq
/QqmiTMznZfHFDjGhNuMTWlhjoO0MnFUdAnKeEe14/pnpvQFRIIewFm3YQZB
sj1kqXcLL4hQ79fbDGWNoZM83FkfFMqOm7tEMUzn9c+Ck1PIAc12nSEpN7w1
5UlZgNzDkleIp6QPErYyV35mOkjhIQMLgqAC422hxkEFn/VU0cTspdLUZ1cR
kltgfzp1c9Zj7fq4Nu3ATEOyAlz4f7i2hanai6wuygMLeXk6e8v8aaLqUHRz
il/HYNBZH+6MNPbWabVDrs/c8Nrv8rOUAYqKWfe2auLIFQe7VIuz/du8faDu
x9yOGV6zQjmzNalMcm/jKLbxvEDu/GDUrERoZ8VPPhhtTZR9Ae+gfe9VgTCb
GcyEzVU800Iqcs2IkB4CbqlSI9rDgsX9qihgu7rv1MwHuc/Mq1L0fK4Py3FX
Jz8sJzXDBWe/WBztMc39m3C27sq58mZV44bsDA9MNfcmf99mBRP4sr3Rp3pl
nPJsIUNIObK9qU2THS76/hxhOTKV2qFGvjBrZEuO6vvGJWO6DoV4ln5n4E1T
WZ3iJ+OG2X3OYNXDxy7NPHFxK+nU1TbSvLafZzSDWr1hxmwtfVT67JxV8Jdp
xul9kbldVcfN3K4hVXV3XmeKbar5AuXm+lwNPstghcs4807Lx60g1AKAb+dl
pHuj2tkyAc9EPLOSbbWyyh0fc8cUhAtH7lfFWatGx13R7SrHScNzJh3hkA0K
BuhFW2yNDhlUOQ51fuynCvVoP28roJ3mU74qnkFm3sx2qJjxZcYEmbL6Nkta
aZ54cWrSBrPKwCRofY8wJ8x7n110TUu68HbnUSvjm3UHxXBjW51Fi5jRjnFS
XaY65oCRKh2yKyte3K541rxBYCiHy2e6otjPnmV6psLkqvAaKWtj2qzgjLXQ
MdtXivcDPu8MniukZ+6dM25RsI2D/LcA23hUxiMZkPhD7h3zP+ou2hKGWYEN
iXeQ/wrd5SJMbeFB+1ntdHKg12lVTANZ2VkwZ5d5d9ul4tCa9d95p0J12Nps
qfIZZ2QDQa07MboJRX+N5/riL8LlGOnf74rikFJXqC2ZaoQ4ZISFv2/LYpsg
1xnmcl12nNGDUNT0C1Qz03IV7PYmW9YuJaYFrzR3xmup7Jjn2y/+zNxOl5XE
BAwFYp9VxXbyFGOAtMUyTG0n1ritsJxtHpMxsM48ORYks5010gqTfTnjdOfZ
23a+nbdrpjDzga+NgDYf6L5DwV2+ENMC9tlmtqINNRiXPbOQAY1WrlG0lLkw
Laea8dTbYgGbii/AbDFvM6m0pkc6tLoZx0KJ5Y2Ahtn1WdUvsZhR0jy2GbBs
qMWYkxGV2WJofAo+Y6eiwE4FITTz2qgH3MyEmRmSZNyPOOSNL7qX7Gc4mXNW
7CnoF7VhccMnvODo4OTkGYe8/hWfFDM7N9uEqZjTLe0MejHbymxM36GpyKAF
KlK2T+f7wExva9YzTqorgXY1UoVN7TnPggyX7lRlIAiqyjQzO535tzMIYB/2
rfErlQhhftat+eHxnrlNpjAPOBVzpAqO2dq3PITB+Nl2ZQYTHMkp03Z168N/
mYr1q+L3UrmUF0Y1y9kZhVaKQF3CWpI0hwmzL/ZFt2EYNYvttrQjsXRG1dRx
gr3JwWTZTSLjnk659PjWyCu3jHIm8He3M0wic+6gJ8pMBpUfvZ3wjFiyXPW2
sAjmRY8NjjVjUBQRVbhG3gQ7or3PKgszgs3SdRantE/VcLSrymM0u4ZnYjIb
n32lxTHUQr6xqxzwlO2DEAyldKesXkYg8KCPRavnsloiFLpqJkqjzbHg3uwj
MqORfoE9eOxN5WOAZ+A5i3bw8eHcfV8rQMnAVlxJVGVtyroyXUA35ROvq6eI
vjX7TrbcFCiMq+JDNmTLUHECN9XOUC+HARDceIv11U9ZZq55aO4YKPvuBHxM
X15TOkO0RsDNEJxhvRjlDOmpRopBKZkIKSOb7WxkZLLqyhvNKK7unRL3SoS3
QKP81Gf2oC1b4uyMkuSaIw70eJVmLbvVZTeGPKIM13n86riwXrhNVxRitRD6
s4Yg04yizUh6WpXXUMeiUJahYjszC9DxKANT2vp4NV6bdnC3yhYmUrDMQM1B
T13Rhx11Ek7TAGyGad3OPgRQ1zqG/48OJlWX7aoOgfsMZxwaWC7yVZ+BUWt5
goODJUev+XcC9Ahkmlr6jsJi66HWH6gXxtdBGYxNL9Qz0AaogfYQjBGAIl9T
tkwibnnjMe4V/ZAEWa02jBxUDI3IERE+qbeFB2+TZllTURzSG6DcJS56XxML
JKRxYITLGrkc6Ejs6SYL5fkGTs+M7191jNJs7eXQaVgagvvDqFa52jaHSHUZ
8WRmKFiDW0YIOvVzSTB+NEgT4IF36VwtFwye6Q76MngXmKSBYbRMlhDT6BHW
zUvuzSOotONP+c9QC1MIDMPEmEOEVcXI5AsIsFpRQApA//KirCM0/hsGx24i
8UgELMluxbctpcEBYfqMakXoLJrETuhY97RMyxLQBM6I1RViMDsmwwCcbJhi
wY+I82lSCZJueJ4igsg+Pqx/rh326YP660piny+oX4DSnwT1e69cmB8FJmUr
FQYY9U7D8cxRwtVDThyCboVsI/gu5NMEdNEN509Wg4L/6W3PFA4RHWaSEuha
4fVWV+C+R1aHJ2ctMIgzLRheWGsBe+FJNRF8QtT3WDcL+BkWHWmWiPBkHg9/
OlbfHSMCaEZHgVlcbDI9Tou38XGkOhy6cavlffkEFjqOoXtSDQKJRgI6rfcB
kcSaVuOkcUFf8KA7Gw2loZObim7cUC03QrgxkGqlbA0W985WqmEqjcUdhqeb
mWexG7E7BSC421GpM8+mswecyfn9boW4TuQaqUYlaKGlfbqaTwTCQHT3SQsN
zK5BMyUsQbm9BN7uBCwAfkNfwwUSztSAwfw1VGXV+6apRZb3qGwK/v3zDdIQ
QJ1+NlgSlIDo8/qHXueQTo4LT8vZdIUu9kwIcPYEgf3Id+M0f8p573RBlM7q
6cpHt66n6zVG7MKRZLMd23f13HLjA2HutFNAuL+w9Y1JB8zYsOxKWQjgrQtP
AprzF85LYtKXC/fJ/J6DHnMHwGHk0qOI1DIXEB6lVpiqLz1CQoT45HRhuFyM
bxEAOTn89Nw5ASzwC0/OVmuDrAPdhVUXrBoRyQ+D3IWnq4vL65ihZ3kUsCCL
W445KAZQ9iAcwFnrzAkSkNPpdNERcdkw8dWiOQ1WXxx1p+kYHA7NwGQiflwg
HyzQYqQNnJ8u4mMmcQKncGFr8LQXrgiQuD4/GWVFzpsU5jEuKI4nUtmMi2lg
oRiEHsCiRpz9GneFgbirmgVcrpgF6Xx7OtKEeA5i4L/6FXM6IN/TyTH2fknO
onoGXD5cDMu6CPbyxEqiL+pTC5un9Q8CPtzJnfOXvJVIQFq8y28gsszKXAv6
1EIK2MsLHXb2Xlzl18KFt2IeFrKJ/MB7/eW3LHneT2Qgq4qwn4GB/FB92C+a
Iip4oHOBzu4o0LITwpj6IwBnJ0dFP0BqxEM7DbyHy1He2OEv78CweZyf4fLU
r/PvPE2Dub34won4pg3nW1Vf9a0wXHpNen4h5DTNfemn0w+hq29JW22ezPLe
+S/54amAN995KoeIN1bpqP33J0N6fw35D7ElixHpRE8bLgNZrGCZp1BkWE+Q
PymvrV8urTSAfAWn6y1n0CaMzUPjLUcKtnz+mJ722G57POh4oDI6aQ5dDNbb
8uYLDI0iKQT00/VHb3mb+uFs4CdbgLfzwEOXRzQ/rH+g7S0WDbd0kZHHSZfv
owXJD1Vo/lxIYVGv+cuiA6hKhCCm3QYBw2CYuqFQxCjsgT7oVEUyP2jlAVTc
tWt3LwRreBFXtcM33DxXw1OQw9kLCX7yssOCy6H1C/2qAwMNafQ9RtQks6oH
zX+GvDCrbu+Z95GdzjYpxyhtdcFC5qjYSV/p/XNPfdIm7RG43bAfr/bvyMxr
Sc420z9Rc0mFUtS/qdvDnRFKcj+rj9QF3e+cznr5KAAf9ExDuRlGZoQraeHI
wUIlFfbMOQmOdaL2BGmywLSJAE5J0TMsgukbE5mZ/OGAJcCLyHb1Xqv0TAZI
Bkc/8wjUVcI/A/B/gYyuF2DeM8snYMUfkJMIWU1bpuxMExxcIwQxORIJ+UNV
dGzdWjjCWttGaZG5KRpI0V1x73NosP+WedBg/mfWp8HiD2i5heqOvDeFXk1U
JEcjjEgU1nTZtggWEBHECyUfbiZIyxO9gjdIANoDppBItCd32TDfAMQpJn5F
KteA2TK5UogjOQBeFDyj5uDbIMxno6C76UfPAfs5YqJlnA6yRSJzWq8XO/hM
LBsnmiYCI2GYSjURk2PtQqf8smOi1I4ZXikfIl7G+oXGRB3yLAtMZKJEQSbI
Flhiuz0zCNFFinpQrBGuy/dgTWboPz0066RR6svNnJeWCshbzgQ47Ffvqf9d
6CYzuOi7PeOZaDehbjWdd1tNImkAyw/OIugsaHsNkUnOMOgwATOsGBUC7dCG
eXSptG51KYESKGWrVt5zG5gppyjeNaUrpDYsf6uZNFQyplGLi9TiPU+/hktT
oe85ZtIxFCf486lEC8DDXDqdC0MbTCiMTHeXdMfCD+3YT+yPymoI66GvVonK
iJBhDMPCDlEjXZYJUEcZqaxTv1wnIICTZQq2TDhmSWYaO6roqZPN71BzQK+Y
esvKYFrLb3w6lB/cMQbhUjv6gZU6BbIP7cwlKEM2X544nbBOJ8/Gl9kEnU1f
ZpMBMJ5OB+aNdLg4j+dMMM3wpR+Y74cAtGGO2vMN/uAghFFdy9asYDHve3rE
RwabePIuadirvR62KugzTI3DPN6qPYbljIJ02uMeNKJvyRv0vQJMTHvojTWQ
LUHdCeaFc+GqMaqRAYwg+tiACFsbkmYOxSPPZurjnvpDJp2DmB4avWZ1HncC
4GBZPTcDGmXzbqS7WeN8yX7B7HtUAkqzG/APbmBiTebVLI1u6HsjgJBWTFDq
RycDqoiYYMk9lLhRqYbjIs0mcjW/DeDVBv7LOkykzUA2UeG69GpaWUbYilC4
QXppXrKeFMzdz+DhP19+53/cXt+yEpxW3/6yzAtT7oqA+AQydt/oVdeYq+rX
q/QMMj6+AbIsl7fQuA1SXZ3/DO57AgOb9+CMPBoIwquvEWOkV8IqoCJSo714
oiYNPgHQO6YV78cN859ngYGKXaSAfAHBbzQ76MxHJcKrWk9hLU0aMgzN6DAy
pVWyQFEzDCBLDbkv2pT7zv7spH/1CkfGZrggqjHXq2ZMzq76dQd1EEa0J/LH
aT5yarmZQDZNTEUFNTWY8I0xL8haeUDS0C7qdWo1uhFIRfEC/jxlGJXI1zKa
7rCCnRYUr+9V7Q3FZ/6ADNEdVahFlll1TPifhLcbjsBOI7aO+zerNBNwwkZP
U8pixoBFiLTT0A48h5cII7baHMwiT7s7kxLHNFkKXjz39me3QlJXphiu/S+4
MUCv+s8oTEKLkGzU7UdTQmg8DqavXtlwGjkwYJPWdKOobhF9IqINDeSkisWn
XhFz7OkOgQdhR4dI84GBaInYEEAUUx37Ep6ZmBU4Vfm+6UwMl21B4TLHA8jn
gCw7MG4jRVlDv1Gn9nn7tMg9RgsNvn08sqoxyOfAWL8b7+537R+nK1Q8/tIo
i9mWhZ8Hyx3VUqH/uZPlhSC+54NpTpMKdyjX5oQI9MAdFskzA70S6T6aUz8e
5WfUH5j+IWgWAv435Gt6JkeFnjGBTis97/ZPh5xBMlBKT5oU38YdbCzKhmqu
gvmFlH/R2RscekQpYL6jbU76LGqeSG2G/0fgcLdfkV3uCMX016DfaKIdrjB2
rqmRqJsbjnlkQILa7dIKr+8QHTclnhloGHn9mjC/hU4cbSRGXSANcr06xdpE
q1jrNKLkRVeSCWOp9hw6EYxvNDs5mb6azQAjstehi9gjGOy4ognEzYqmrkEw
ipcHh9aGtkIMmK/cX7n4R4SlNitzv4ItTQAOhpvcVVPPRprGzzsFEwWaOQEl
LxxWng5b2RlkHfLbYVrlVCD0BowvwnoHReUq7qxl7jkvRwucrW5VAUH0OO/m
DEekctKKf+F76wXbiktBZzqGXW4WP2DOPn0WbA7dCx/LON1KE5dHA02SLuyi
7WQ36XSiHT9z87G7bJkK4BXDYw3WbAkN5G3DDd7xSqlu4AjMerZ9OSG2NPOh
s0Z25m1c3x6VQy/0p2NzcXla50QhjjOp84YEZqnxNr0jA/LNEzO1uvxzj8HS
5nrrgj72VZyDjT3mNnjosE5joPan8u5gr3llXrgOhaE4RcSdKTRwmRXy0Clz
kVTjW+cGlpOlBnxa2wgHjKC4KxKr7AzhzKto6SLp/Njjhe6UzBEN+QLfZeBL
zo3nHG0nBZmI/nXs+NphIcrW8/dTOWdc272egnpPDdAOli8Wa7RijsF53IYF
ygtFrWxlP+o0YT7D0Iyj466l9By0SSSaIYYkH1Y4JiFBnCZTa6hPofWLzDWJ
Z8BXHIwCgxGTjEVeiKDGTcrArShf6UOZbChAFux3y9HoD6a2gk0lPN6oA1HC
rjUEiM3jzu5Wi4T9uDVVuC0sAkY4s4xDbZOiIvdDRarmmdihWOTE8PRcdZkC
pUKCqe8ZDFOFAiOh+rUivClvbKKDJ1dI//QnVFBfPMy9xWkBFjiYEALC083O
EBiedITMvGeptSVsZkpPWb0+5bGdl0VXz79IU55Zayh5t8pZm/IYTtBeI+Q2
f+0XWNBw2z4XreE4V1EJ/xy4bTGJGU7SAhkp5FQEDsRaqN9T3+uPnDJSq37O
P8+RryxgYeAOK1IgRaBawK/6gjcJFXts3w4FPQzWUt4gb6voK1KXgQWYtp8q
II8lwZWBIpfVNl4eHjPuKeCYT3umxvpLb2BYYzw9TSSmgaz+ZNDGvc6jU4Jr
LCUZitTM0Z7wSqvU2zDBKLq0U6dHD/jLHbCkq2G5G3Rot0EzNg5XjMnTl1nx
GFFJVyYZmozF8wmptlb/q1AdljdjsZABN9R0oqxrwgQgjsoBT9OMRMtqcYop
D6UgytIOdd7dTpctKniiVB3SnHJZGLsel6gY74kwMGMfIBIDI6P280DyEvAs
y1LO9ZCgumtOKAROcHUwvOINuv/w2MBYjJMUdf0h53VLzkGVCEqOmDV54AEE
cj7MNA/JUzztl7vWMn35MuD31zKEQ2Fi/FSvKvM25ENeIJxYApVsUATJ7vE/
CBZP3bIgR+TI51TULArVZO5WfoABkEmSvsjZLeLLiQLJYST9I3AwFhTUrCzW
QMdY4B4FpSIrSlV4SBNoRnZJ6YyLm0+kQqCOo9CYmYmsT0SNSMgIY4Gh4t21
umaqGE4vBtu7pNR8l5e3VdrbkDPOIyznsuIO5q4Kil+yQBUPmpmCcJjvZTbY
cBVG1q2GmTjqBsWCsDri9LbaoBcizEDr0Rlue/88UDk8jIu8W0C83J2Zz6sG
37dM7AfxsTDalTSbahLTQVxrSvyjVy4nsx1G21TaMpbI6XITscxprDMnwwVg
6ccmTytaY4iChBKr8D4zaepaHYoRZleTMDZ3qHmHqtPAoJdQLwS/nvJCnvBc
pAXjPJt1GaRglzFoQcH5N9SHNVUSeZGHmWwgVhwqcMFB38a+QqnUVOHFMgyu
CqgkDPIKbcR0/C1eNEaRxHbp+6789iKgkhS7WRThgdzMQZnaNiNPxyJ4Q0EH
ZEyNpjKpFgZxEq6JOUA/yH+ZkqG+W6E+AWsJTarRecc0UsyEmQc9tOWsq3yU
z5IyztCZUNKHA9BBRVRAG5WIsv1HqnJik+FNLntNIZ8l4TSzw8b0UczNKJjQ
+cJtKOEQhEFzWVQSSmF6bOIvnKkOGT9PRhaAQI3MdDWrkSpeD+qFuIicllee
+qGIVEWnY8PtafiVw/3xWkBq5RrTyn0WNeCEcJlfgdUikPoin+ERBrAR0WDD
zA7DIQNwotwGRQ2nFoAXrPMyKVQgzxrU23yyaAM+xavN++d07AZs7NlM371A
iJKWt6QBAOLxYI0PQ93GmnaEzXEDsam63eA2YqqiSs26/zoGyzoSMXjUD0xA
fyRutK0GgdOgnvOQ36IqEQc1uMHBEEmiaT4UHNBp7YpwOqyGNQVlIeSknI0X
k0ANSJjhuu5JrcHjsVAsvbzNulhQUVQ3EU5Eb+bTNnLTtIiqaEpxOOMlncvQ
zLfX1PbhWxjg1k4PJlQOcXRoMmtSG9TD3J8MjlV9AtJrEVku8pVZh4t/pT/1
owxae9bBQIoismiAxZdnMwZqX2oojF1yE9jTfRsZNBDOdKZBjfvNSXsNikkO
3d6x+G5ihIvWLAQskAhs6KydNVCeRodnjlzAGuOEtBVnOqR+9iuNxNNLvi33
nrHuyUCNxWmtE01LYCbyTRlg6tT5YNPrRW97ekhw5AyV2BzpFENBYEh2zJan
zKB/8wJeAcT6cdCyZNaxP5su4CdRUgLyPw7MKLlscaAPQtDPerYCO1mDtNBZ
gOGDba/BL3IM/aJe6oZxaiezZgZQeBbsHaN/aO7uyE4s9r1xyoycJGagPhS+
iNiCgGVAOOrcJ1SjqCfZKrYY5m1Qe+Yi2Slff6ZtoeDm8n10+zPM3wW1fxY6
8uphIqr/0nREVhalyhGeMtYcEb1A4XM5TCw/Da4CwAajBJzL4CYnNBsl/BwL
VeSsT/2kHLBHEe2BnjB8v0XKjJHV2HkpnSDYLe4HK8Se4Pa5ZjnzTmtzDiv1
99AKH+7sA2us6Gu8Z9lJymPBBsRgXgCmh+8Um01jMl+LwnM7s0CvkybWoH8K
3PDoquEb57LJfN1qoJaDrWCE6bpUX4TUDz/suLhNSwSWau+0wPu6P7CwPDm9
qMkRXC4gyswhRFmauVG5q161ckEZLvJ8VHO7nHeB3BdrOkKagHU3FeEVFnMe
3IFb5k9Gxzq5Hk7p8XQ6TG+xk/s9jMF9ZRHWgrhp4a3JnCZOg2his0hGTGHJ
HHt8m/OXuLPP3Qfu95fvu7Ofsjhzyyy5iP5R6BBOpmdQqTOVcuKsNZ48efg1
aFU8/k3MedTo50ZfIqni2z8Dt+Tj/jlwyz9v1TL+xYunC/j2cJRZJxQhp2Pt
bF2NNP0z6MqVkpRKjMghbbxe9H31V2MQtI92zU8czbI5RxRVVijBLMRBrwaA
sF16muMGprcA+cIBR6dj2NCRYpN9eFhfVVk4Bp3qtTyBTKoOgzRx067aMqLu
ctehRd97NQ9aYjrmivB0TcuZuDRLQOT0+a9MvjVnsZPVSnTnu7C44J6fsP5d
48KcbwTHFB5LJ6zLymqep3w1VmNtFpvTt1uVPZaNgwFtnQoNnYZECU2Ja1jG
10XOjppsWX6/YZj4pmRoB9mgW7YWCmQ91Q2wu2MFcXBU8gcHddOqIyPrjWuR
JB+foCnf6FXXx1HfoGOIjV7nUcCp8Dl1oRsoM+Wns5PM0HYMKF6TOK5LFhhg
NFYZ909QH883ejW2w7EpQhjXBu4y2KWgLnkRnuN0GAJppMeOCPlMSQsNSU9u
Txe7rDY3H+wWAtDJkXUzSwYnLfWMRbxJvs4cVWLl7g0ZyE3mICEo0IDaN3MX
QIRriiQ93WzhrA7/H1cS1zXMqtMjYN51einMliphqFaa9UpIbg/OAfQ8MTf+
pM4mTnMW0NeY/qo7eh1Ty8JjRPY3aKLdXrlgOpmSG+XP+Il+3dBogHFxHFg/
j0l9WNU3rGJONbPS5dGqpys910b4QDV9yTOFJRpw4nAoyjKuoeH3dMHyVYFf
5Y+7yxvW2lqd7zKZEVY/39DrTN2MB6WnxC1hBLjFRq9FjAKvdBlUe3X/XYI2
RoFiWzhfCNhv1Y+6U3Gnp7PcJqo/2awu13zy+0juD+4pEQ3FIittUKgwwgGE
GV0ac4FRc8z52z1TqUBfHoEzIM32rOKedW0BIqVqHfmhz3Wve+reLr2OvAUf
T5oLtfwspPn2uL27uRYa+sVp8wZMzhFBjd2xxa6HBtGM62Pc+bUqAXdtODq5
InTyJ32Rn8odBDD+jH0oS/M5NuLpdtzf7774JuA49khEwxw+c2IsupNrJHyM
TSl5YQk1GBcEj3Q6Vm6AsVi+FQf3WxDtQTmlQQmAfZhapeNrBls0DCyhG3CP
wwdZry/SDTR7fphYPz4AX0NJ7Ikl+PdbB61Jzwh+os5OU3UkoC3PQrBqI9Vc
iUDTTvUjQIfj6ax8Q+dmkS43pZQO0EnHUbRoSNA20iqho5aYBPoepu6QW+QV
E5UBPak2lCcY/MgMfF1NreDP1TcX7jMGLCqdWfumJ8vGxoSY4LlqeDoNyOmB
20LHsbQcy8eDvALhZwH3qwPe+NLwnpR/tZrarG4L12/s8yaush9op9n5Nlpn
LSUqvFCNGLwzLSKDqpMSombhdX3MudyMrx/AqERCMclqJzygdB3nEFp6vDfL
bJJQZVIyyOkkIY6zcJoFG0G82AQ48iO4Z13H9boV+RHfOPV9QgqVmR+xxMbM
/+c1dC8UNQsE98j8fcxDN1YmR80/MWnxeI2WS8zGh2bWOPxzTtME1kI4kip6
mEmtVVWPXHHkPHUZO8u0nRZOnxBuo+o19JJ1NPi9ladFCs5ogXP2s7W5MaGO
cmTBLu6O8KUMvmHsTUFfDItShmnT2bWgPHIF8FkFO9iq6zqD9xAbw0RvI/kQ
V2UQDOTDKu1goyikdllkWaCTdEitCvvI6QdwkYPcdVBdsQIS+L0+K8E165pj
dVi9GrSQfaXllFtoCWMsSZ38kHoYGgxmnTiTJh41xSFyDp7aNIlOWTTG5UpF
mlCefTC5HsWIBqFSTG8akGkS+4mcKohtYGzK7GrDvRxoP0Q9q3ju2k9NfF/X
sNVcaINdMqBq3r7TZex15Uqa0FVOTo5clANrffd6LHlaEcUkoKyJ6ccTWMNY
iMhNzJq9TBkk0R0S1tmvNI0fuNt44sOmpzTSqdIuhfPVjIKmZmN9HWquKYlF
zd63yjn/2DpPcWB7SjYR4dARDeEQZqsVkQPyqfY8nF2f/X9bZ4YL8FNCSKCB
APF26uHuGVVG1t7VaVqdVkrsGExXoBrFbrupuEgo4cGWS8vk/8s57unzgaOe
0/asTX241Mq3PDwldSizNOOAEdfNO4LIE1kwWC4w/fxbRpVsoFPblHTWLWvT
95U+nni+ZLZaFz9ShLPidh1Yo+6+jgMZlmXSad/rmqVXrRkdm9MjpGWszuCX
lawq9Bh0jYeMx9VBYw1JpfN6yf0E6l9PZ6EJENhVF/WSh4DUpzumO10U/vPJ
xFskJ1oVz0KqgAmLp9mNM1HjKtIZgFewbTTTB5pF4/ypqrfZMkCVehSXEwar
M86esMcDYemdma4hu80o2KtMHKkzXoNdS/RNWjPhJZF+z/IRDKTOwftqCuYH
dIIEDKOS8DwmVPFeQiaQ3DGXJrGE0Zq/eDipymYV0Wg2ntN6x1y4135myX9Z
8ZbxtppJvOzBwYijPCNKdMv05LmMds4461hERVN6a91tZ0mL4TcTtPAEQq9l
Ofo5+ACpUPd0j2SMLusTDcrTksUMEbnkgSw0Ux8zH1AjSRLJcPoE50ZUK1Ot
pyq6sfid8sbC2B8Ys9vwSjU/w98QADepWlHduzTxlaeBm6cCangwU1isA3MK
aIQ1aV94/xz4m2oeTU2ftKCywibJ+CJ3A0Eenihr5VEYTKYc3ROZAbLk2Xsb
+mr1Wq2SlhunrvpxpMqNF30ViD4CsW30kiX9LqqiMKWmABa9fsJELyIjHlTs
KjcoApHAIM8o6VdHhA0BRLW64LL06PVJM/drLkcsckhkuuAT5DE4LgVNAaqt
DcES6qkeios220zh6dBrNBwAiQVSeZAieEsATMuyI8hs6Vim2rOaRNKiWD1x
FsOVlfCqmMMsvziytA4xe4FyLpaRmyvKk41yd4qktNAci9qelNAEUYMzRdLI
bwAZ5hR1CLCDMQs/cgxAzln8mr7+dJtVsxRzFbRmURqIZjSokFRTnVAon6ok
yt1CEcPR0vl2sybcM+El4520DifUXklTSKTcDQzc5GgR3gl9ncq4sTFwDjE7
LPatBpQ6M0+qkykHHNTxI/Ujc1VUCSuc5iEY0gTaLiRAk3ZKyyPDfeeYX1PS
yzHMLrrUzakemEMZMlY3KuLpBsaMqYwBcfoHcA67OhcomKERxVQ71YWvzZkH
iCOeqM0wCvDCmmk9dWo0YS+wd25oWJjjK5jYZLKSuoqKDCElZYNx3QCMDszY
AvYIng0iTm2wzpvKJuBU4bogbPTNiKyZmJC/GcQW9QSx2UzjUti7IeHwOi3J
w4xEBFcyHiyoo0U/rPa6V85YwVqzo29UNNGkHq7Yjch0SjNPLHB/U9hEquch
skHhLZA/nHI3WonYKigIXo2D/RmXbiSqng1IoEBBJWQIZmVJql0AhGAMk9p6
9cxHpBAIzLAUMi9NSXIyICV3J0SYZ9sjuaoa2H1JLF8XfYFcQJTLGF2WiSWB
pA84EzGpHK0ZHoKmpIXrvFmwqCpuLX0vvLtrTgk1OJjwXO2tzgrjhHDCv1P3
rbVUyBzTbKr5QVaspRkZvE2vWuLaocvVYbSMRVKXdRUgknLpUBkNhueSuqC0
GuCuegIUgSXOUk59pBGkWELUJVeLOMLphSCjdRSiGZW77CcXtTqyFkRDljbc
Sax3AjcdJcFkgmCz68k+05jFAhD9UI5hAzLqVH8X7JLXJ3nLorIMU/dq32Ru
rVCV26E8vumPFty+kLxYH+kIFqt23nKkwKBec8QNqmQjbb+mm5ujrNQUTwZo
rrmU6w7iy2gSe1Z1NFxkP82F+FhN5aACq15PCn86q0Y1kK6SOVvULiZfJyuK
IHT4uketJq56F6V6GuyuqB96y0krEQxlcqxOENVskfwiboQllCu3f1YjH5oT
FY2SzvAUuVYXT5zSZab+V1mepBKKST0x/DuAmRxVS6jXInSSM2B5SMYV5rI3
rRYHisoJrIHJB5yQGQMxqUmA/BKyELNWrRg9r3q9VCe0oSTgi39bQ9xNAqT5
j+ZwD54qZpcg2YOzTRML96pkj+7AMerFeqdfCB3mKlWaZ9dLxJ9riyPHol7K
rFgpQf/lOclh2pMFArPB4j5j0GSwc8pxHF0WIx1ZXC/OOQ2IKOgEzQKo5GE1
xU9VaEmT++AspqQX/bGmqoIddt3ttMDRwGIDjqlz06CqIBYej2FOum/FSxaF
x604B4POozmMaJImYrVB6Rx8+GWpWU4DC8SqQFU0DtGsaoJcJTUxriQBNztl
nfTPInCfzi/Ihct0a7E789V0xj5RSY/pDOrzCBsBR6Q8E5muYPV7euWQwBdC
s89SkXDNjD9P562a6M+i9H64Hm/aJ9P91fHq/mr7xV22faD3BR3BOg8jCO07
c1oiD5Z30+/Vm2TjJ5XyqGyKgac5Duo4z/3t7c+OWTjgI83AnnRAW6RqrVdu
o7M0Ld2g0r1qz0MyViO2A122Ov61WjAoxNP0zGkAg39SJALta6OKM/4xpVLK
6fC7fv7EwRCtpx2CCdSlVfM+y7AnhiVEdZHoy4cRAD0DNS3/gXZxro+Ph1YF
VyYW7NEzq6QkSx4xmIeBfYBOg5Hf+FaH7xIRwy8Ek4m1/yqzqWz2ypT0VOMl
Y+HoPEfluSlefamnDleORZj6msK1ig9ksiJ9+VTutb/kf+B+wHyg8nb59Kxn
CkNdQ47DGPlETg9o0Hd0aZrHHbXKSz1HgRHOnkqqp4KtDq0WJYH4qEREFw+r
SxLgNf+4fXoSsDchF1ShPoEw7DFZVkQpuKXT/fkZSAEntZlP6ufADr+/Hl//
CnAC3bd89yJBlV1VigQ2pwC/C+RoTp7If0d3+kCllvjUn7aVNYHvrwNYinQE
K9yPzMbkS9aptnxHC/2Tk8fcedDQF9A1nz8276D0dGCkV089z1CAk+EdcB7f
MGnrYVVUqlCc+13PZKGdAbI9wt9ncCSDrXmkw/jCa1zmsdmBKJ7OpSnfWY+H
PnJjTy8ri7Rooc5o8q2+MIyIrO9hFmK2vE65a9oKedKcqTqp8W/qJzZNNSuo
wp/iw5joPm0/bvK3+S4Oj3zCv48/OgrGn+PAPBtvXj9IZ1/6yDDRaoJXOsig
J8tCxNMgvV7DpIO6ibIV8RnKYG1IUuUtedZB+egsSqRvA/PVBsaDumdIrNog
YhBtfjs0m4aJwhoW9XJ7ug8Ltm48U7ACwFsoD54Je9btmZdTGEh4DpCfazfU
byW6D9DNQetaeWYpTNon/D9a9/Ebn7fjs2z91XfbX03uK0o6UKRPagrO/qRM
bkchZGTVsU32Z6F3H3Qbvdn0u6QqtKBcgmdaNYoBb6FnhdAB1bFg0X3mOlhn
GAwDlYmagmoV94k2vSEgByBTAM7BQEhb+ozmb7OP0kl40LS8yFQMFsYhGV3P
FI6Z30kQ0mVuoNyDivUMXUX4p6frBAQlWpmptCQoIcZvr3yT694C9fe9/lb4
E5aSE+F4XPoPrzWuzjBkjxFNKpUOFnhHhx0yWNJdr981GeVq/nCA/VSOiWA6
c4i2Cm1BFztGFnpLTLi3V6MB67Cjg8BaVy3TfmII5FI6LXUjwtvg88Ywv0Fv
elr6fLTKaq5h8u7hOFSMiMmKt1Iz49WFZDCbsPBSPYS/HoFknsKPn02Vlv4Y
MWsbOFXZ+vvG0gFv3jLkNsuEDC1G/lqkbqBePlkdOj+eJOVsWDLSoaqtukT1
TAdDa8vaP0PCyIYbROfQOfGoUjCtUA0NCbLpsj8zBHRBHZPkpJCXA0VjgsD5
A5NEYL82VKKxOCQcLqnUCa72Ykl9m1S9UKvQ1mr4Dl0dskVeAzqsDd0HNjlJ
LqkyqwRNTnVZmjEV1QLVdgtb1ri0zqvCjEnaqOKm8oc4HUpXGiC7UkkGlR0m
OhKwgBoU55rMHSpSZgPQ81tk544oX/VYtFc6DIt1d4ZSI3bAggjPq9cseoBE
U2phzcLKwxdiPRakdjsB7ICj3jAr7aaUg6UnQFypYN4joXjg+G34646KcdVb
DEAJJ4szz6BfzMBbMBX9MnSpQ17qlJc6XFjqpEvdUw29WOqoS/3xxEgIxOcM
w34+Trurm237bDve3VzdvP7SRCnAsIn6YqexscHTwcKpGM7gWWqRZ2t0q5rg
hVvGWvM+scZgKas75mjZOaoVeDQNJ7+GXEnbM+w1a0CTZvqcbTKswplRazof
U9Sg8DpDjHkNuPRDA/JMOupPdatMAwFcOaysVOzpOjFrmmVyrZz1qazew3ia
oNZnxOlsvkLBiAACTWuYf3LaK7FQnTPC2eSRO0mOPWVV/uDCRKCq5r6RcfDq
JxEGm7pf/ELbpfk4MJvT0d6YN4UmErRIAwMtOBcql8c9AxvD+Y7A/PysZ3Z/
h1whpEZ14I1ZtZdegVz5ISHqzvEFdEpsMfuwcW6IjAQmwUrwzeIXa+Hlao6c
dQCR0XZ7roj31aJcBKRlkx8BSuq6ppcZlJhJjzEhgW4pO3NLPD0d+r05gzVt
IvBs+gs7YbBIE6Gr57LunzEqMNn+nQwNi7LRIEG9VKfZ9XuNsumXfk3MB7RX
vwpERZ/MotGdjmUmZYxYREb8w7twXKb5XdMCxEoZM6BA9oxqM1nKymYKi0ia
jg+DPx/FJqrRapE0imY6SPQdzddnO4AtJM1f/qqs/g8dE/rzaLmWwHTrSwRJ
G94lNKNNa1ntD2IZGpXmkujY2WGv1XeP7UX0xK39AErsmDPyAvyb2jBZ0vew
utCwoyFo36n34dlqCBrqnixvotZKAxfRDSOnd8ryLBACjc8DdkbYlPA0uCUS
VDT4/nnPap1gESoPLWeZGxZ3sMoWmSQAXJ45hg5HmEjr1zVBARg2mPWoeal/
Ys9T/Rv7jpy1PFXxtBN9exGYzEbeX6eWVUsujCpe/gETRgwvBBb2Gm4Wzv21
ZX06JVjA1ecI2dGlDKxjNAdAkuGegoOehZOYSXqlsjRIIOTuk+6ZS0eIn4wX
O88rDI5dS5erE7KZ2sooghachh9NNEJW73P2gGLu7VI4AM/3eoBClSSDtsu9
8qJCZs+OHP3+9l7rRhLlgM1eZ2LttTqN8/ukTp0XSBzYABrwG03JtCBW6pdD
d1SypuF0BAMddRkzRjRzuuUQDbvTPeeWR1ahOT9dHZXrNMtAAjilqyzP3TOD
yao/Gy6l442liuvjeHIGFPoqENdKDxdOCsv7wcOgRx7u5Unp2hM4Liel1YI/
jAQg4Z9dDDqN/d9bJCX9aROngfAVmrLpO4oVJnzE2fSIfP8IuJFJna2HCR+o
9sECI5uovhKn+0zuYGAgIQSKkC4cznS6XHY4Ix1G0otOTkWwePz+NKEt1NAs
JBIpXy6PhTLADglhhJPsz4AQCg5dcgXpE+ynZ/sMIWbjaHeB8IMp2zv1Uffn
DLfKbW6vlbGY0YVBtnNmQc+sQ8SXcpD3cJh3/dnGmis/q55R3d5dSEPuTlkm
yqlrFQe6NtSJIOmHRCcoD8+wswMV2xMYxhCwTc8ZcQofmFN4jRcweyQx6FUs
35wiDirXYN981pHlGlZIBqJuc8ORnhfKOaXuGeOHet2DxcQTI4j2PNJgo6ps
NsxPwtU+QyhhNacgmrGCUugztpG+Er1QahQJ6043uaHDUtirL8jmEju6iVbG
RlOHpI8gisygtD5b7P7CLzr+olenyKEjPg/U6IECuVA4laXE2Cl0L5cHGqQ9
V15VlgwAwlAIX5jjgtPNWa4HY8AuCAQfYK3pt2Cykb8kYmU+jUmUFhYXYuks
TvjjB4QJemwDA5KyuGS+TsGyRljIymhli3LDKoZb4Ei6hGih+21OQUE91AT/
Rg3TOUUY6jCuFaMcAffsFJ1wO+3M7SjzmhZe9fn58qye0xujJUBldOfszyVf
7BBJBZWyNbIAshRZks4I/anA0VhYFlMZIEbbp5qzCMHcz5cnn27XHWX49WBs
0wnAUFO8T0RVKZwzFKiIFrSMUvjAgbpAO7UAO3w+F67MiFqlNBksdmGZ+J6g
uSiSYPkn6KbrVd0teLv+jaOat/fFFtGQ0+/nZujsi0guto65I5qxdtEjciHB
2iAsBT1Ug8CgLS5hrU7kiNvv5tqidKcj2urmkdMBdK9DRlLzYVYDq0wy1CPk
kP3Saxy+8Ko6DYylOBmxi7liKLJE+bMhM25CzzqOJ0Mul6vNlueYihwz5PMG
MShyXK5tp5EWi7VNtrY0cwTWlwvL4aTT4VRuIhwtHNWrbfcFke7NK6Sfx6G+
rZCN+87i/Ibl6nCfweuw0GSnqzPP4uL6LEfUMfVEvceMtygro5s6B9k4NcjU
e6p1nkIH9xwfFORgWssCC4COKpLsnMw7JC1ahTKdQ2E5OjyMc/CaLWI8W8Ti
PFMdnsVKMHqsBsQLcIjUGUeNgLwEhdfw+gYnehq4UB+cS9veXdz20xEPp+vs
l0NmQOgMhBijt9Uucty6UYfjWK20Fq1Sz6AjQzaWi0085XWxYz49YU6mwxVP
J+enxldBT9AJNvlJ+MozgYicqOd0wt2AEz1f21CNcOGLaYsbl7cwuPB0tQnl
TCkxX2BTBeLF6BQiwmxAVYh4BgMwg5YvAcVHGzjM4NBkg8PnMXLcPHw3TvcP
d78CCwfTa3bjIv98eDJ/RdhMVZykRVCaPnWWqSrRYWLOcs14xNNb9Ow7u2fZ
O6uKTY0WfOtP7pZg0HzTaXEI9Y+vKz5ZjsrFLQTbCUxDFopP6jbWcDhIzfIH
cpMBaFpdrs2p+ikvVpnDOQYU0CyJuz/wRgul7Ga3ObZ+vWs3grg2rUvMrMIi
8vQpCqjeFI9xF5H1viufu6b7mPs/A/4rWPw8wH+/214LdH75VMtabe3JMoO4
SC91PRIA5El4cptLQA1atKCUb1IlQFPEDCRfy3UENIn3EzoMuZJdHcbFpv92
AxNNg2jIhn4cDKKHE9mY6FdRojEB292kdn+qBgU8G61WQrkaHky4sshGla49
tn45hybQI6XyVMPd3So9WaQLblAcc+zpZjcXkwGXgCp1nV7sNupB+meyViij
Ao+oyGpNIrc+wQHIHSNFC0LbMdlCSVvm8GvinNy49SwAEZnWqj+u0p7cF0un
9bjh4ROGDqCySCf1eYTvSTv42aNQ156BQqVQgObat9Jsmr82V+tiiQHM7mnQ
iiHBKhYgLjBywQtBxRoXLNkSOS0LxbWsINZUM+VbggKGfU8/m+GZBwQMO+y0
Y2qGKp00Vn9RMBaDreqE6I6eBOtqyd8ZAUG+k1194VhlhuFRrOonI3nhkHNe
6yUMx5+V/bI6y58FdWxfXU1CrL803kD+cbjoLiOV18zega9HGjvkMWNs8kni
Q983Z7fpxfYCDuNPTlpsrCf4rEY66ab+NIBGDtgGNbbkvV0HtbXrNTRtOB0f
wo2Qupd6xgGejs98UqAebeg2Ebembz6qIgemnmu0AP3mvM1O60ckpmF18Lc9
D/GBpor6sz0wIqIZobwiwurfP2quZE2vbWs/HgTth58H/u63twIxt6+/eMIl
lq9aITAdvk5ZNUJeLlY0xxSsjXALBUbhCuZPvJSjBu8/ZexYVF+1NCkGa1m5
CD9CNRNYpHxX0CArWU4tMxgnLfHlyODpk5ZhRqybvahmyYKZy/qE8Jd5sizL
IWAXzwqUcD4YUphp2apr9U5dkMM165M7DH5v6uAG0kHQsUIqnRa7qm5ogtmu
iaUd8LI8YfyX78l6onwQS75UZWsa/Qa3+sXdAZM79y5lSaZJ/YwHctFRr8Ik
bpCq+yQ4I1DZPavkPAvgmQs1ZizcTEUzmG+3nm2n0YAzRtKdOXi6GmpyqTSx
QAiZJDXj8O+BZlGv9QPKOS5H5Gcc5fLbz3Ga/7B7d7iaxn32f/7i7Cj934Uh
PHoRl5PQ5l0QCu1FGkdcj0hhew0P6xlO3j3DgYIan1FlOC3YG9qzIpzX/TMH
3NDvnVbZCCqqsZ5vy21FCzAaevrGq+P8QMaGToyELdYEe+bhyQypg/DZgW9x
Ao3Hbufogd8wCKsNOxlwYmVD2r3XO9+zJBTEmxU8dMGbevy8Q9LwngzMzwg2
zHuXXRM/C/vxh9v91a9CbNkosd6xaNCuVXEB2TnN+a+B3qg/OrzQ7RJTgOrb
skEifoIHzV+A6hf1AdZt326agKJBvBjZkOtMa/hWszn6nYOXAojRB5oP9Rf/
wS8ffi1KN9K4DzJVdNUisSmm5fl1YxOLdSu/yJePh0kDj88Bin+8na4Ec4H5
Gb80OKJuPLDDMnEQvfVNOlEj9GxMpKplsPzeDBqjxwrTSffZqLNuLTl4erZh
hKonR+shEXmrcQOcFtTlK8FymOqArUCjidZlgGLzicUHpKL6WWuOcKA+5uLg
LyDDzxMx5zqUyOjfP+9IKAPoa2D6QDpApn7+9Cwqh8uSEJrBgFmmOk2QMFqK
ojn5Gw2mSNVCV3zf65Uuwhrj6pAjYZ2YW0jYdQac0GJrRjZYcFEJSVXFEX60
UZ1pwbuwhunaX0yEpSmzncZ2ZHdYGJD8U1SaYc42JkFgRGlQezHTyOSqDVo7
nX9KuRC+e1DXQyvX0V+YNuw56g3Ya9js0Foeyp167dEjxYcXnblD1MZhpgdy
LEli9f2gWLZIXqNozEQZJh1waLXSECN+ojokBTOIdVrrSv/u1PcPKxK7naz0
wfGJZ64MdaxfWJMdl8A0QYhsAZF1XatqGNcdGMhGRQ2Fefq8LH++YqCJhlYz
lCHMn3ZqzUOaD45NYQHJZgL6ekYWUWjpIq85RYE1wxS4FmsEWsTKwEHj3qTe
FZ5UP3FJ1Sw1aLw1k3glpmaxvzuzk3CPu+Uew8ZOz7Nu1hMN8yYPK3Pk0oQ/
PB6ad8zHF2CA/WmuBO6wm0q4EbOjduWvpwmrV8+afAb1097SMMV8CDtLU5K0
BtMPH8J+RbNnsCOYyhFUbXXUcKj6CHo7gj2P4PFD57Bh8u2orle9mo3UlPLx
tEbxf0P8/7noza9C7g30bmZSz8ky/YQ5fRFwEKqNMyOqZX5hZB/OMxAozzV2
07VaIwRwz3JEDJq/4EXfsaJJZYbSbuYkSop+NPHx2hKPMVmoHiKrGU3U1mm0
Aa10cR49//UjkzzNiX2AzZh9tbdzZuZfO5yKyL29nBHuOjveDznpDyfBS1sS
I+kA+MN04GlG7kMsUz/ZQ33XUr6mE5KBVo+ZrPjZ4On0vSplrA5ODd7MWbju
5tbD4pea9mjh1ME0x0Nlqza/ESpzad21e5o30ucPmkVsuR46jKGsXGwtEVJZ
ioIbbUVzuiSPvEr1FDtbKMtWmTse6aIxpyZmnhwu00x4Sx/1nqU8jGzBTfnv
uMy3yvjLUPkHGPDlgjVrX+1vX9bfz3By6lHJQCEiynWa2moJ1a8HZZYXhbQI
wdknaD0rZZIm8/JVPiPPFaZLk17svhWVSnopN0NnSdlIUmi2h/96lXuL8Hip
d7hhdDZ6zfLllcaBm/J5hzrlxPb6adKtY1iOpyONvhiUD3MWaaCAw4yWhrBh
Hj8QLAyqFwmSM6jXTgC6NYCnAqZp4ZhjfiNHraVsjjd0UgBWWM/FA5ipGXlS
F0eJML3Pr8N9fT4sSXPJLbwZS6bVdR4OHZMm82MohyrWrXgdS19FIK1T+a/M
Awhjmk+FjjPWqM3yudauz/RO9lVCWDvdZHyiegzWaNkyd2lGI70UmFu5JcjA
l3Wa1ylmZsTPyEzvyZ4PB/3bGUixWlHsFinNWvodaEZbIkyyJyiu1sW5ChGT
NCKjWc4ZiHuuYyp45tDYaH2H+WHQFgv6smA6JgiNs8OvpXip8yeXPG9kyDQB
3qDII/o6mbvi9yoPbkYYhxm9t9wtkfvDfOiMvK39TLGsOVdwZyyIPuaj0Ksz
SM+S2XPeOENOldeagTIT0voyBSM9Mpol+PZ0HivkmAkqkegyVFnQMH+EaMxR
GlimyZL/dpkg1iS4K0uiTkNOibbGRxzpdRWHuc7NOnsMESOPTrOaLNybKEbE
glgruSssyE4mS2ipWijD6KHasDzeNC+z3sm7m3d00EcE8m6RaVnnNFWD8Hn/
ag4iy2HKgETzbGVXRG7VareWlH+RCppYc0aM2Q1XncgoE5+2EfTIVRKeiyZQ
+pzn1vBUm93nMoZZL7Ee4ak5yV/Jtz1xE4OvWFsgkMhnNBUWoKbDzr3pACwz
46UyEIllHOo7AySKdci0h6LHcND2dYX9VHiajGBLlXc2SRGJUaedUoYmk2al
MZs45yoF/V3HebuMGA1s1hf1i6JfVxfxBn2bMsIvZ0BTra/rHjVnK12yNUwe
ADvzPGuFDk0AncpVtmdp2qfv39K/R5HbCZLJTtzMKQB8GcviRta/yBTQ0Hdr
hRUUfs3xDGL8QTnnQTUFG/umdm/NYMwEqXA466dFC94UQoxTYVjVnGOX6f/2
mjdkGJcOR0zS5v0yrQK5t5g7ME5T9+rEkdywJKOJD7YeGZcUnKy7s2Mm5ZLf
c36zM2bS1xgkM8W1t4TxTNOqZn4Nlz9BctlYvKKQG3I4L9SBle8LS24Hx459
k1klwwT5LBaZqFc1oFv4EXK5DL0GRdxdhmrNhK1nwVkidxYXqEbuFIfHheTV
zqg/Y8tMx2zcXZEiW7qIl+SieqfLeLOvKaALMxIeyh0neDdWhZBIulON3vm7
vgaHfm5oKRqpFHPI1IJ0Yae4fcZYrs24pao2RXR/mHFYzNJIhsAa4beFfbBs
LzWpiXlh41jLvtCDxAO1QF4d6ZOxW7o1mseYOMhXwQiM5Kpgy7axZpl0t3XN
Mz6wkx5nv0+LbJsymkqafVXYsu5U1GF+6cZpHoOuAn+ekUb5fE/kOJymse1Y
yEBLEc08OvlYiNCcr5UsyFiam4gA2sK0UsieKnnVlnUJaBqbs2J9mDyrTml5
z6nPZMbp2jasKe4rWudzI95oQlD/M9XUrYwNyKUnkLmVtZN7HsOZMaMQttfS
LfM+IFm+6h+Z6Cpq0lxNKw/P8HE5HJ4lI72ZksQsWgFTgI6wGEIRGFJewbSs
AcP1CuZA3ykthwUbgZHIusnSUHOob0AylHU0eQ6Lr5h65p6dbv9wwo0OzOdj
m0zpLxmXY61xK7TGBKz9TAxUsKEG3tQ5LZToBk2JXyse11qKvg7GzO8SfTdW
VgiO7uhsQyhonGVI3/T6EhEq43JZTomXAh8QAhYHrWM+7ln6avTUwDeh00um
05qKq+yXbc54khu3L4mgA1GpayuO04gc2auT8wg4DjPHYy1lwTaXCpml6Mzx
GTozPcVUPwYeP9TEAkm0s2og5A3U/7xu1tpbmuuuyaKuHlEyM3i2yxVMIgmF
XsNMl6Hx0p0nGwdAKc11fGZAxIuvCayO6lCqouDtmUxXcf9loDZZE/27zAbo
OhmDajMdWlO7u3GRMdxnBZovZHpQmhoLO6BMVYQzS5VuEj0YJ1xSGLsm5/Bf
CsBZK8H3p3ymu7Ywl6FsYVMUTmaiCDOt89XfrMvrlzE3PUnV8gTrvTT7rGoE
VeMtttrX92Mh7Ka6HcySNAyLJMyaOruKnGMWHybvErayO7ZKdOpYQpcTQWgm
XF9lWmHeGZKixq26euQRfq3IWDUnrAKu7mlJSWmyQ9y3WraBCbFLbSDTkHrb
YabCpf+HqZ+zFJcKrlszyQNslLoToAaIdUUKTm/iCyMinVktOp6CTW/CVGK6
/lViobLIOniWuGzGQZl8sC5Mp2k+yJaTK0dtaXDYTOExr26P1CXgChDKUmsQ
kLprWjKW0JihvNzBTl3DWgWzxi0UdrQCOWWvDS/YSY0ZDeC/HRayIL5MEbr6
AGuuFCQvrtReU4X29L9D1UphIUzdk7ct49lUDoe9NyMsO7apnPuswSNzItKF
oa6gVyKvdHbzqT871jPmMeTbAS/VSGU+wDHz+nEeDXISkPUfK42g0ZtZERAq
djkV7UelAVlTB+erf91ipNYGK+elinft7C+lE6qIZ9UiM+oUwScHHRXFUSVx
cwIz1MzHZVgu11qjVpbFQliQI1ZY0OlyhSnzcAwdpOA4ZDHGsygmxMwejMQJ
isCq9EOuz4EJd6bx6Xud0YZt90nLe1jdkGHBI+oe7FU4mQzAsyaDa+I0BdCc
Rw4J4lm2YchquYKiBwXFmgXjL/BVmKvTMjuY9pBU70kvgKo2hjL9qGhR5CQb
1jAVbl+5ar9yuZwIV83PImB1xCviRy5Q8yctivmQlY91QRil6/1UswhGpA76
16o1CisRFOt0xGhIpSNM5wAz71CokdWS8INebAcaTYPee70Umo4Uk2QLUFx0
xYRPta7GsOAMovzenNWIgOpMj37XGB+SlFep2e1kGnVGnS5r6JHTd8yqOXNj
Han8zHQ41RKcsOjhgs20CFTKXfT8AwEqltvkxlH8clmOJprJKOglw6POYxam
1loRIS3UGJS6p2Lu1AO8mo14hilHnNIwMypeswYop8/F8hRMyN+suHTA2SMz
ZMyJSoisFtijyzrmzrCU/aENsJtmtccJFSpkgdo+p8Sqq8RMHc7iR8SOp44k
wEFZuM8J7Yasu51B23QvJ/oJhogedfQsUVdUzUPFeqXaRtGZPJ7LymSURSvj
HOen6CZOpkAA0umCat1wgAIOUKgIhopIi7KLNO00p4k7oFUZ8oSLJoOTGc92
hmowVRIlYyjTbPcNZV3mUzOodN0yiKiuPZN1PznI2XRfuSmD+8zVmzpn1m2r
BnS9OFuqmTpJqGebwey2nV7mndYSE4Ne5j1MqVI6mgndpwyWTguA471DJry6
XmcFk5mfIS+ueVAUe8NsHCFoKYHxBFvVwxvnoEB6cppxwshHBp+Ntrj25DXp
+AU9rP4cNejImu6JbqsCCMRzfLk7q1zMA5obt9JjinRigVGvQc2rQQPF+yNj
ihGIxZTAoZbHhWT4Sm+jHFnK3F5nWgEUtYQv5Mzh0yRQ1yUF9ZyMktlBimaU
Z4m1ytIPI2NF0DJQotCFLwVMW7VlLhRylE9PAv6Viy2NhNwWU+KWvLiK2DIP
SRseYHQ8EVEI1ax3WJrnaTgzuMVK85x1+ZUY7m0jRtaXLkHoBNrae8WONNHd
Ir1MVnRVpMf404xk26zR7GvO2UShcWEE6bNyPlsfUkEOqOfp22ySRPYsVtDI
A8bbAfwYDisIK0NYKkshYbOOa1GpE/KiLpEapyMHgXJ+CV7xqeLfFMMo1wgF
IR3RUE6FxekWPkOpgkHriSmlkl5mhMza0MsabzoVJmKpkrU4pTci8XUltZUK
qqGfzHYXWPOSZdQ7o76Yi0p8nRravZoBWQzTVhWFOOmYB9mWQ6EKNSENTU83
uUoBwlIPQS8ZVrzWL0c6B9lW2Ng2LHdGxSCqUQJQsy4n0gUkwgiXvUKob9JO
nSbyph9jxV5pyWYXp0rppBjugm7S12a6jBaStc5iTKrQ8/nxMLe3HvRILE0h
OvdshuwohmCPPRFjYC4c+BT0meMxjy+9piWMh9mqglM360FUwHC1DsesIIUE
1Abs+Wj0FY9ATArqkpbn3hzJisHZXIO8FrsPVMpU8gK0KEdLypFL16mKKlhC
McT0sg/jsKzl0Km6ifklUncmBLFo37IiEKXRlMxbUEuQIuXFnG/DeB01QjnT
QvVJp75R25WwUjPqs9OC8kicudpSaPDua9GOBtJaa0PZ+IQFsMZcV0c3t5qj
xtvadGqN1CXQTk19Zpx2Vr65YujyxcGs5lswpyM9eT1Osc+H3Sy2k5pamIkM
16FgdD+jVnBJlcWQcDjVNmWnuI4CyAIj0no0FZkhFtbE0sOzNoBldfHKn6qn
TjRRwJ16Cem6NHQL9lWhOkNmlX1nXXikUHg4VUYYhxOz6MKFDORXwHXUXKpZ
mDyCpGBn8pqGcRHjSEtE8R6rPU0yjFRll5PK69lk0matEDoYAmJ0N6ZVq7Sq
aT6qbTFxUvF3UAFBr2m2qZqgdGYSdgsav+bxC6mygOtLlSY444R6Jf/f5q61
SW7jun7Xr0AxVf4UzA76gUeZVhXjpExXLVMuS1E+D4drzsrgLrmzHIX89elz
zm2ggRnKFBOJLonY3Rk8Gv24fR/nnmstb2e50Ux+ndK16qcgQiu7DuMaSr4r
WUnBLwKjFPQzbLbKor/JI0vdZzalpLdJ/5qHgHHKjy9YRhRZzirqoTLy5M5n
uVwrgOE4LaO06b7d8aKYmTbRuc5KEizrUKonlOpScm4rq4PTC8E1VkrFXoZY
DkuOFb6FQSg9FqCl2s8yyar9h0LOgZst+Y41zFk+Ihy9iNogpSO6CS5CqyCK
GbI5L/LEoGpQbVAvMejkHfImyRrBvSBPSaaefXqYI4ZMdWd8eZJ60bYYXId/
wfxcMRixEUtCbEhs50HlQoeN7CX0xSCxQp8M12c7bRWRSJEWJK8Fa5WFmryk
N2E3swKqbS8WGbXEyCbdYejBvF2c1GbYbX5RJ29jk72ReYfsbWNcxGEc/fCF
TWm9ugRr1SpQM61mgx8YMGWWHeVmHGyn6q1JhIIVMRNJgRIzZVvpftKUJ8CZ
fAJQispS11sLX4Rcrdhcg8KwzdBWO8+1FrPIiy1jywvth/LtWWETdxA1cGW2
5W64FIrtJKub5XZvvgaQZhZ+vsnFsS+e2swDmF97dgsspaIZ6QtmXQsL5Rf0
2uIw3QuRZ3tsk70yNmKN2dWukIU2lbqVd4ZTa8HnVReCbvI6lT4ymyU0atqp
GZ0ElCbLhIUhOqXaPm83fg70qwwFXodQ2EChvcD5OTlBlKeTeUSj+QrK+W57
n91bZqjgieuEKFOk/dKarIgwquaBZ8ebJi9gr6ZvDgpMQBbBMOlWI9H24lna
eAz63JorVgBBMxHs/xNxwMu9rp22LFk1nmLXzxisxkLiLSdSAR8V1KIAMmb8
0Ubh6zD9yYhoT6/lYj4Q6Dzvxo2ZhdWqJ6Mcgu1k92pUBR4atUH0q/eiypZX
QdOaCDd3eDDFSI6IUqKiRd2yNCFBPpOKy9ni58rrxtLtaFDPBEz0z6VePLJP
MUeIuPSqjDMLrBhYJATrM04BpobipjHKQVUPp7rWK4lwVewCuJai9q8Mysb8
Hx70yrCRelMbkHlEJciSAtgLecLkPM90/SF7b122ADumDzjuwrNSxR2dnpko
yAkfEhh2XBYlbuQLmxD6Bv8nckCmJI6jHrcLLF02zXBkTPUW3uAfeC+Xm28a
kZgoZ/9/dlAWhZE1+t1JTQ5Zi9Kxn4Tn7LA6zr7+bWlGVtkxyku1kqw6e/BL
BLRnSLnALgS6+M29SPVGmYclXbHFW06AIp2VhIBHMSzMtRxTWfDPsqug1XU6
TKcO9PnyYSf5DpOqRoSqFyd/bikUNImeXpsjItwsIjJVudyYr2hRlZxNDMD8
dis7jBdYCGqG6rosbTNQzH60S/ZH8D4sUom6jGfcGDZbG4otcg0HZcMS3+um
zIeMSKUoWCCMGstICllfVGylv4DjhWwdrVbDIhDEZ82IQXmszD3XlI7nswwZ
zq0582ErgmMW3stbmgnEUHozTI9rFsqPbc/QGWKBZVGht4wcjeacLLNfDZeS
bfScaZJvnNdKnivXEXy6qo5iFNaN4D2RYdDWXBvRbthIse8Vnh66WW0JBoHu
YLr6ySnAKnlrRy5dBaviG9IPqvUuGSebUfY7pg9PtF2WERaKJAhz1s8sgey+
GCOjPV4lloknIOgwqTRJamdJamoxfVqz20RSYMaGUOGslu50SaWc8bX1OUp6
5PAForJRNNcLeFOWTFhW4JLQWaffJCG5yAdbOfPVxr5QYzWdTxaN7VXiZFZU
tXyJ/cxZSn1twTaznTvLm5cfkrJXwFW/FkQViQf2dLoyq44Lsc4+9Wk7V+3C
3ZIJEVaXs+h5GULvhOOLOtiHUY1c1M0jnwLmc6/tZN77i/TQCXGdM1LrGdbR
PVs4ITo43ttVniX9JEvPhD03v6a9bC01qlTDZK1Z7m6czBNn6z17tDbz8uDi
tZT2vfDn/aTvTiKl8HUqMCl0TDwVKQaN6eQ67tYhT0VzszZMfxvrZa6rTNEx
GibHGYvF99wFesmTQbKi1Vh3hUjyBhA2byXMbkGEIyumsMrUwlIPhWdH0iZI
LvkLteakFZ9qOuZWxUhUF6LwSBjI3aE4OurrRJppI/NAS2BSZ7baMhtLS2Nh
7Lm1S89NusgMZrE8he6Y49madBPIIeS11lhWfzkVKIP3ZjZkfR2bxoXgN8O3
ixCfimz5VRaMBG23kjqLraR4jzrDYwRJJa6Xg0qksypwW2mRKKMGiF5RGJjG
SsxH04oKferJJic4ZGkU7BlNzgVoZOi5lV4uTUNZ65JOymN1ud1ObBKbbhqD
Xv6iTvwUqBDLBCLMdW9eNTgBJ/yPPLDQcnsQXvXFblGxFBLSyHSY1iz6kooL
fX+M6ODcHaMsRdaJPndhSffGWo8DSR/aDYNELVkEBL/WoJMbArjrjc8gBasw
q1XZid9aIpKhvinXJMovELtJDnrzFHjGE/mOzfSmxljamUYw0C1vDiaJrhYh
bJDizSYAMKIV65YOszbLcyJeNDgd8hAqe04sF2mdJZuHbka81m6VPwEZABgT
34x6gxNXCvAOvRRvOiTZab6XgQYdkIE+0xuiealqZXbVwvP3aFZfWAOIvOxx
Jk0uFuuF5Qqesi4LOVKbYlNFVQW/YLaiUGW0GwgwHfIajSxDsTenCW/CBtF8
9JbuJRYGCD8FP2AteqL+nGgitEA9Hc1ULLIF6zhh0ELMOtaCzo8OJO+FhcZ5
tFWgA2KA1afktjFXgil3bffxBfj4wAWQnYMz4MjUhSKtNcxfZCBhY85Evi18
JIGwnzLWl51UiiRqR27M74gc0NL7wM5qj7O9VwtJaXlX2dc1PThvyDlLlT51
i03omHkz3CyHlhYC7tNlPKOXKSKg2G4Z17YILsPEsOA3/RE/MVeAGV97GH0B
Cm0yjQGIiKOhMatJ2psrBPtHRumqAg0fuGE017lFshIdXgtvX2tLTYoZufqw
hspke3l6TU0J5lp0bbYhCksiQ/rlM1SH92uPLL3ZRWaS7dWsNFd4DrYZfGq6
gr1xUxJ+mI6KnZrbEWrqHeVOsN4wS2MCy+wK8KU0WkpW02gtotdk57AZkBsB
tS2Jwvx1RK7bcwDsLcknMKT9l9Hq/Gb8k9+B9Ob4z0AoSOLJJDTjqSHxpGsP
zcmxomKStcOh9qemO3iUZPT4w235Bxjo0zdB3/A058tvdE3V448h/f7Lx2Pq
ot9iQL5Pz6yvbx9vHnaP7x++Oss0RyUmDfmEfK1VKR/wTkXSbHqCipdlRLA+
FqfTELlm5VjgeM5uhq3zh8jCSQtikgE71sgsuxPk1tiwMG/SWcG7HltcgyJs
2LLXl6YrP75g2hv254PAqQ1tsbajHpB+eIf7BoPhRFaSxCuBTgubwKASl0nY
8bekiIUTq9MtCB88965GyobSXPDDux8AWdqTJTfUkPY1uIKbLTay9NvHN071
5NU6/c6vHXnRttJuY49GdnS9gVCElESIt7p1O6DTO4Io9qiC1YLxjRR90LxA
ATcE83u2OW2JzfSCeDmlkwcmpPsvqOaAKVz9bvfm7e+reSL/JmvnYXd3fHv/
oNn91ZcOmPFbQDRQ3YMHbQzwIPhrcD6mT8GXeuYUa1fM1Cxmhn/7WuXAqf3m
n9cglB7Kmg9kpiQHf1MyKl+DtwUVoVG3hAzO1yBXbYZF8m+aGSNqEnRMC/U1
Y/lnNZLxiEjm3Clkkt5rBKs3wkeoqYZSP7uWnZDdNnzHMd33CKMDJMLXzTaJ
gzGdSlZo8AO7A0qd97w1OIBRO6VFM1blCbZsnipKLFj7QNoHnbRjX5HMOv+8
hoMg3fgIhb1NLSMd8Z6PAXl3TTutZgVP8lHvpZVyTbT8vRcxVGt2EMP/ovcW
KjX7JWBjsjILAmAyRGk3pn49bsQbvqEm56woBOyQI59F+fQFqsNyAWCBcVV9
M6+x92Px18F9+/2Ht+AtTr/NH78f811fvn98vL87LhbSFy3Rx/SYq/98/+bm
gWTX/55O/9rLE7Ogx3Jol8wXqrCmcEhfld9sWTyjYY3HHsUSk2EUEZNdXr6d
TupWl2/nG7Oscgttd/CXrifv5Prx2/nvZHttGXDaPltdXTkUcunPYC4G6nOs
tE3D9JPP/XS7O7a7B8lnGy9c7z7VbKerpU+kTfvkgrQ8rrSqeZ7pNxcDQZGw
fd7gfHeAW/xsqHRGkrVR3PQtyHSHszGppoFbN67OiG4O6UD08/nF7tJ0mN64
Y/1ED3Vk/Q7zbLg4mq09eeIf/sSj259/dExPSB+cz4WebO7dWZHQ/HcakqSn
oN7PJ0bTXWp1nsOoA191iuqcd/fPdlmveQgZe/bo9YWrdufX7glTuzjU/af6
bLoaYK26FavOL5gpfKmW1e170Ntemis5lPqpp3+BYJ9EZwXR+SvqUhTU39++
uam/Sw/8+uUIGrItOoaB4ZciD/ak6cq7eUgzYTgRZbTNriIDOaXhXcGt5QAK
sBegKA+eKETvDsCd4yaIqHTSo6nJE0OHmhqedRaDYw3VAIJn2PfgVw6jeT9P
UROiRE/XFpRAHcWWzuq5Ggi9yFy+FSOCvsx9QqzDp2ah/MJmyDTVQ88sB3gt
9qK6gVMP2Umk6opME0TDqrZcssAxgsoJsRAXFxTmbEYPJQRVG5iRGWk604yu
4Z9K2tW+nrKmnSHGiJfofkgW08ENpygoTKMM6ID1EaYMFMWEaXsZ56l8eIFQ
T4BVTrLqwW4D2E3f47sG3rFuP7kSG4WGgHM6QCnE6Sgb1AAmUTBOdhUrEiSj
FXW7iRYPdBInKwcWnp7UKCsYHn7e0xxqmDLcmWcGmsgElgDjjwf7mInQ8OF6
O9jng+PZzuuQz+5Fx4eoSS5eOdM/MkiuYpvEbADpq/99z7jPwVsXOeFr5iJf
rPeXDEAE9vzzJqIeD4skxHkG1k163W66A0uM96Rbmd9mQ7q9MI0EXMC4F5zX
sZjNabeGmwagOWDaqjBHXlAj8QQwgO6gVDqhq0gRVBB3wnhZrQU4T/HuvqMv
l0HN51QWREDuzSuLNUwy+bRvbkkK3+TeQdnrZElPf22rUH5Vh8/6anmPn7kj
mOn9RmQErabzABHvmRUvVzeoiuAmzT/pnsCiV1mbzfBDyxX08YXSM8EYP5Jl
ZxAhMkJjLVES2Y3v3Cq6QhCyauPMdXwkwYhZmFlNaVGpGkHf62BnD0g7Qcww
6mAfRzKMM3tsAb7dkoekjDLSdUBSUZYt76eZD+HToxFbO2SDEWDvdp0YVlsZ
gMpv9G/WG7CaGAD0M0k14hNsxcB/Wdx0SuqZk+ToScYLsMVeB3tHLA3ITewB
lSsYZJJgRrJSYAwtUG2OjJCjT2hQGg6lK05ajo30P5ZLWr4OIZUVY8ET08aW
bvGmpK2cMKSrnFDeAkLK6P9qakNOJQlELN46sdVnHHiwGBJrCZgoJiAKYI38
yg5B+5PFSIDGWA6mwysjQeBSy2uJELIlljxOuGwgmJ9cSIW7QckS1Rkoy9lz
F2kzlVJSR3aSD7URPXlnb4VlImRCIOTgLINP2H7XVmdIzo4YJfkoEbrEPJsl
Nze6qryZBhfW39lCIiUWNqc6k/A5eQ3njcPD29C4kdqF9h/LoKH7AUw+gU+N
jjgS8JvZmR0JftarH5taWy2aXaE687ZHMATvgyyOKcFdCC1OSTvkS7ARTuUd
cWfiuEY2hJ5RxO6R6RjyRzAxiPlZSAJ4iwnYaXXISg3wwydld6zkTMvVtF7e
cCv37NQV/ifSyYNuDb0O+RE9S6dhnbqC3BleFfqzZDGaoKHqNyoAabGvnqqC
wO4MorM+RPcFzpikRVfSon9thf3Pb3avv3qowKEwTTKJkDTUkT3KV7LiPTwl
OFTlN1sWzdOHrOrVJD0+KSedHAOw8NLwPgeIErUso9ujtiz3iZ7xd1DRoVSZ
t18bOcGRyJSM0h5+x6TC4bejkwMc06vjT5JLD4zL65dfPr7s9F/dFEuP+toD
y1JfKPuZDC2kve4GyI5h2ojACsEEm3dJtaFrtJcTBSCqKX9CFg1hGUVtX2p0
nuXbagBSnisXYwtv7XYWJxQOFPx0QndoAsAksy6BkJKrVoIb0KP+HaSFB061
d2fu6DT8SZNN5g6yTocdI0WxQOczvaxiSXhXsObQXPJrgYvYfKBLT4csqogV
eYddybNsZNqPkyE3elTfDQfEk0dG/4kB2C30BIhq0506HbKk3rQrskQ0QMn4
A/9NnzXw+TERoWPRVQShXM9lgF+oRDsUNSYKMUQBUZirDrsCiLYd2Womyhr6
QaNQrtwBw2wetFRwSz7KRkoxubx3Zf22JpesauEGGuyQvwE4AFDYVof8MYs2
lUWPWYVnliQmWSDTG217TaeDfcH6SYoH6mCfD4h4oW1eB33cEB71jgmYDu8E
bqu03bEe7XYzL4GWOscJD4VF2rHMUjHJ265aqZe1PBCuWqWeoPRRv1bEqXAy
ddNjV/Pz1iYebac049nNAQO6Otv4GyZU+ulg7w4fIB1W/GeDFsgptdT7aQBG
ruACHcjpUqtQQNfpYDeBdFZK9CLVmqXOGrqCWx1yd6MqK3KLdcifwoRoMUej
1yF/IX2uoWrQuBlOIhaDOJWhZZlRlC2pSt2psXf28ayGNYGS3TsIiaGW5UJd
mlq/Etc8vb3e551HC7Or7LNFzREBCMMhzRFYlLDvQMMGyTd0SVOFZ6fqcnKn
7ENjUZ2oVGlL8N0W84Xi1Kzr0sTmynLVgvGUp2JdFSoekYTtopTsVgORbvZl
4d9fe1v80819esDj7T9LLAmYzLTjKdNnTvWpBwIVk7bsRlJbQlEJZ+TlnALb
iFMidZn+2dmtKj0DLrotJY932AShANECw7zAr/VQ4T+tPp2QrkE4NhIQUCkj
jqhFj6YMaMqcU+yYUgs3x/bzT44slNac4zLZelLBzJxEtQJvRvjXCK85yScw
FOLkVgd7d6NQERYbi8Vp75ruiMdv2BLYL3KQUFb6WW6l1Q8PpGeaUdcrvOF0
Px+V6zstvppJGK2ETqY6qsiACbOCfcqKjzEZuwgd8zDtXcxZfSdXp9yE3I12
Dbe4Zt7oKhafBEBaE6SfiZlRdRkJDltILR2nL2oGrUiU0pRkj2ydfydTjrIK
dLCocV7pOLcw3QFxpyTMHRQuyK1tIbg76htO2WVM4I3M9GnEqwNuGuZjNla7
q5YgIeW3SDawHmBCNUUyeYeORR/SNTP5ZmjBUdNigWq3mY1pQjVhC6DuNDgK
FHmHwkeKnI5Fqlc6KfJGuGsFRnijHfPLe4ZOe0jOfjNrHF69uuV+tZ05POQD
6+OeKAHBOtER3O5YVF7xP5itmJuYS66YS0zoeSc/ApkENIuRNlj5madStT81
4aqZZIzAx2nOBXyzo2XTzvRATCkToMHxX+69LiqVAfp0gQCVJrOXegnGs1zK
aNV82G4suglKkQabIpT0vSGlvcGRY5YEqV0RDYyzmkiE9ICh6fhPDfMi2MME
bVTofXJDct41lH3bYMd8s47ApHlPVw3N2KNtIirvd+sbskoqFHI23s/PqaBn
tG01kXs0LEiNyE6wDbynPkyXPnkgAMTmAmDOIFy8SuxMP4/iRacVyqW3V3ZJ
LctUIG78wn7k+t2tAgdUTdH0trdjfgOSP4TlvJBLzdqL+XHujN8QWt9QaZj1
OjpMPbt2iHbMz0cJ+waDNdhhGi5qAwTMdDpMz6CWyQXqaGMrDSgI+NtHgck9
JF+k5Jt9Mo5lSRHa0WGatFCL+9UyaKRxtUxKBTapm/DLNpu+oITlrEf8JoHV
Pz3s3h6+ekzV015g5QSnKu0hLorcVVaEFxNldp0iDaAL144il7lIoPw+P6Ms
jAXHalKBr+nFQ/rxsjAaE59W9wCsZoUVd8jLgXO/2e54whwB5gJYUJUZzBS2
dOUb8D8U969wedq4utKYh7sidKOUGLaxrOwVwaRUArur3OyyIaxOnKx45oOE
1TNZ9Nd/fOGouh82zYjSIDBwylR8Qecbt7wxEpzakeDNoCq0EPXkIkMWyXUD
R0CH2m9TOJAG57o+ghQ1bi+AAHYjZSfxdBRS67j1ljTHCpNLAkHuDUbm5M5G
nqO29OpHYjSSpZe+gR5hfEQ1g7hgCTkExfX6jr7f1T1Tx2OYSnYyoJcgKJDr
su46lO5YDlxkUe2WRmZXsyqyE7PaZroMFmoYpxal23dwuyNoPEDet3RdxH41
KTBlOr8sU8I+BgwZonJAdHl1EZJvurGRz30LsBCDZV1ccO0pBkHVzMFDtAX0
uYfaBAb6oj6heA9GoSaHlkhfIqCL+VOr/pXD3dj9yeIkhUQPRz76IpZxCZah
GfnCaVCwD9KQbs8IS0Q2UqwiwYavwTkmm5a6EXeFQGgS5zBymxmoCauxTjME
gt3jJIZn+v55D3/dUph4W3ntxBaq7FF/DUpFunGTIgb7tsHQD8kAGqTGwirp
V8sSKiG6T6CS2skIZsHP8qGIyo41IRc9cUOAgQ/dNdZOEobErqZ54FZ3j6zp
spSqzGYaO70iWMR6FlaLq4lCULiwJUiLgooIC65bE+QaG1A/BpvbhG6g91jo
2xOAwSkNz0Z/SndCH8y9Z3x8vB6KUjo3APDboxg9fqGayJ0YphW9QR0Hqfc1
UO1kaW/XiwPbADeIMFJxIqaEHqdtmTjPsfR+2W3Yl/D2mF1YTLBbW3hmGBaK
EepT6NPDY1yNE1goW00+dhmklsnzxSCQsGO5J2jfWtb+tJQirmr0Daq2y7Hp
YHJ9ibLB3f/X1jH+4+7x9vFD/V065auHhBAFhInlRywQTL9Dy4kYDnUaKSSs
hgOiPQEO+HDgRo9p5p83wH2QIIjmxw8R4Qec0ykrmwrfCcuvlnsSdJ3FGf10
RpvuAU9DZEqETgHLy9gqpjh0J4AScFm6geeSI1SvBWSmT3oBnWh9OsvZSS1x
KlFV12l9wJ+ZWnGAw28EHgHe7ohLRuD9mUsCqH87NnxpzxUSgGIKH1+wm7CY
4D4OY0tr87RBh6g16X7P4QQ5cWfoyJgM/+nzNGd7CCdq3gGXJ2lQ80zkRME2
+sXzVDOo4gz6tWfrs/evbu+/+jQNEDGAJq+qVMqyvW5YBAcE4DA2K5L0np1J
2qnFR0BZYD4nA3pg8nJLo+vs0vb80pgvdcj/CVRJENjsLzzWrT4ieco18o2b
WPVYftFfuOzCE6mkAdAIZZb4wfV1JEU7f0u9JFOP6Z8/K/fp2vML8URALrqk
JHa+lucghAtXrttqj4ROBzwHwXqsJrM4qz97R7pdRsAz4BVZVrlQe1YfYedn
Fj6shlqV75ZndPVq8MQF40eGkpJeEJBg0sRni3OQed349b3S067byioOpZFv
V1PF2ujPL0uPa5mKkzZq6LFhQaNlzTxvJeCiiFQ6e5pbPy5cflxqXoR/QG4B
xmPXJ13uFrxXug4WB0jp22clVxuc4/2FV7bLgM8A7qrbnDXzUq/YZY5OzQgE
J+hMP6OZwZ6XroOLkR1zNux84oF20Nlj0a3QdYYe/qo0KOvCC+nsEVtPYPlC
Km4XB/rigOHO3l7nYrMuzGGbjZ5YZ1IiXhzmso3gbx+huKkiDJ1N69egQ55Y
C/YTjdDlGVIBibuBRd/Wl2ZYQ0V5qlODExpsk+R+Ydcv+PwC8V7zY4xpB5Kk
p74HpA+jXu2KTA437lYigTQXRAjXZKsluGS4JIQuyT2I6KQ89nhTwpDimeC7
LGkpvQQYhLe1ObvsE4LWmbz09Eu2tDouXTiz75fiUuw7ZHP7zB1hJKqQzNcY
xnjhgRd2oNzSCAcDnHlizD/rVQjKQ71eRcX2l8z2YUMW3upsutv1Fx7t1epB
Ja0QOWEBr7Pt+pdrRtRWPk8lqj6ddJfveXdfj7d3N09+ueq0G8erJ/k26Y8n
3/7bw/1Px5sq/V4l3ef+/cP+5rh8g91DOuXJt7/7l/95+fL39g7KEJyT/55e
vbo96Y+nV292t/aWT/92f/9481DdJmXp9U/HWn9KiUoX5Cek+79I15gy9/T2
zevq+LCf34oK2/pVru5f/ng1NfnD8fHmzdVPNy+nT65ej/cvd2NtF9bHv9/e
3X24IrHFFW9Tj/ev7zdv75L2txsf//DkSfXT7avHwx+ehO2T6nBz+/qQPnQx
N+vt9LLrXr/Yvqmb01D9/cm3f7n/6ebh5lX18kP1eLip/lunV3/E+cU0WPQ8
+32eAD/zWOnFN/vDHQggmH6zeHyVpsXrm8flKLxIanq1e3n//jE3p5iL3+eb
fVhM0mm856n89Io9M02B1ch+d5P08Fe7hw/n/Vi+q3rpd/v7tx9+n1ae237+
e19+u9zDf00a/e5hf/jX6s93e7zLpnqGyY7hPWLO3zycbl5tlovz/zIM483r
3ZgG4+HN8SpPPk2Lw+Ob8TPG5XtcWgzF/d+q/zreLIbhMxvx9uH2tNt/+LJm
/EUX//xzp+V2vgD+do8eSIP/uNs/fsbz/qgz07uW6+GTE+3plS789ptvnh73
D7dvHz8pNJTsf//mzf3d1Y/Hqx/fvb95+HCFBOxgf2ze3N5tfjw+gTznvb79
hzf9f5JEEJarJ39TLrTPbsU/asTqu6SEpacfD7d3r8ebVQN+u+cfbnavbh7q
3d2rOn3/fnw8/hZNQcTur9MuaU25MBD28KdXL+9ffcCMw8r59n8BuBjAVQ==

    "]], 
   Association[
   "Headers" -> {{"date", "Fri, 07 Aug 2020 18:11:37 GMT"}, {
      "server", "Wolfram Cloud"}, {
      "strict-transport-security", "max-age=2592000;"}, {
      "strict-transport-security", "max-age=2592000;"}, {
      "cache-control", "no-cache, no-store, max-age=0, must-revalidate"}, {
      "pragma", "no-cache"}, {"expires", "0"}, {
      "x-xss-protection", "1; mode=block"}, {
      "x-content-type-options", "nosniff"}, {
      "x-generatedfrom", 
       "Generated from the Wolfram Cloud: http://www.wolfram.com/cloud"}, {
      "x-terms-of-use", 
       "Terms of use: \
http://www.wolfram.com/legal/terms/wolfram-cloud.html"}, {
      "x-data-source-information", 
       "Data source information: \
http://wolfram.com/knowledgebase/source-information"}, {
      "content-type", "text/html;charset=utf-8"}, {
      "vary", "Accept-Encoding"}, {"content-encoding", "gzip"}, {
      "transfer-encoding", "chunked"}}, "StatusCode" -> 200, "Cookies" -> {}],
    CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8026323945428257`*^9, 3.8026324257769003`*^9, 3.8058123224561777`*^9, 
   3.8058124234722967`*^9, {3.805812652886082*^9, 3.8058126950920086`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"2e6f9c00-1ed0-4017-93b8-e32e9faa0b87"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Extracting Data from the Wolfram Data Repository", "Subsection",
 CellChangeTimes->{{3.8108410620311413`*^9, 
  3.810841084582858*^9}},ExpressionUUID->"6c9b0bab-9b6e-41c5-9058-\
379ead34e316"],

Cell[BoxData["2"], "Input",
 CellChangeTimes->{
  3.806258321980383*^9},ExpressionUUID->"fc1e340b-d76c-4e19-aad9-\
8e7a337c2c7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", 
  "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"0f0b3ef2-195f-4a5b-99a9-1da8bdaf2bea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ResourceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.011111111111111112`], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.789, 
                 7.266}, {86.20700000000001, 7.266}, {86.20700000000001, 
                 3.266}, {3.789, 3.266}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14.129,
                  54.07}, {19.878999999999998`, 54.07}, {19.878999999999998`, 
                 15.57}, {14.129, 15.57}}}]}, {
                FaceForm[
                 RGBColor[0.648987, 0.648987, 0.648987, 1.]]}, StripOnInput -> 
               False], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.129,
                  41.82}, {29.879, 41.82}, {29.879, 15.57}, {24.129, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 33.160000000000004`, 54.07}, {38.910000000000004`, 54.07}, {
                 38.910000000000004`, 15.57}, {33.160000000000004`, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.191,
                  31.781}, {47.941, 31.781}, {47.941, 15.569999999999997`}, {
                 42.191, 15.569999999999997`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 51.223000000000006`, 46.875}, {56.973000000000006`, 
                 46.875}, {56.973000000000006`, 15.57}, {51.223000000000006`, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{60.254,
                  37.707}, {66.00399999999999, 37.707}, {66.00399999999999, 
                 15.569999999999997`}, {60.254, 15.569999999999997`}}}]}, {
                FaceForm[
                 RGBColor[0.274612, 0.618881, 0.810913, 1.]]}, StripOnInput -> 
               False], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 70.12899999999999, 54.07}, {75.87899999999999, 54.07}, {
                 75.87899999999999, 15.57}, {70.12899999999999, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 9.879000000000001, 60.547}, {24.129, 60.547}, {24.129, 
                 56.547}, {9.879000000000001, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.871, 
                 13.097999999999999`}, {80.121, 13.097999999999999`}, {80.121,
                  9.097999999999999}, {9.871, 9.097999999999999}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 65.87899999999999, 60.547}, {80.12899999999999, 60.547}, {
                 80.12899999999999, 56.547}, {65.87899999999999, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.469000000000001`, 
                  66.54700000000001}, {45., 82.418}, {78.398, 
                  66.54700000000001}}, {{45., 86.73400000000001}, {
                  2.2230000000000003`, 66.54700000000001}, {
                  2.2230000000000003`, 62.547}, {87.777, 62.547}, {87.777, 
                  66.54700000000001}}}]}, {
                FaceForm[
                 RGBColor[0.648987, 0.648987, 0.648987, 1.]]}, StripOnInput -> 
               False]}, AspectRatio -> 1, Axes -> False, Background -> None, 
             Frame -> None, FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Sample Data: Fisher's Irises\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/Sample-\
Data-Fishers-Irises"}, "HyperlinkURL"]}, "RowDefault"], "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Fisher's iris data\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.011111111111111112`], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.789, 
                 7.266}, {86.20700000000001, 7.266}, {86.20700000000001, 
                 3.266}, {3.789, 3.266}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14.129,
                  54.07}, {19.878999999999998`, 54.07}, {19.878999999999998`, 
                 15.57}, {14.129, 15.57}}}]}, {
                FaceForm[
                 RGBColor[0.648987, 0.648987, 0.648987, 1.]]}, StripOnInput -> 
               False], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.129,
                  41.82}, {29.879, 41.82}, {29.879, 15.57}, {24.129, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 33.160000000000004`, 54.07}, {38.910000000000004`, 54.07}, {
                 38.910000000000004`, 15.57}, {33.160000000000004`, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.191,
                  31.781}, {47.941, 31.781}, {47.941, 15.569999999999997`}, {
                 42.191, 15.569999999999997`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 51.223000000000006`, 46.875}, {56.973000000000006`, 
                 46.875}, {56.973000000000006`, 15.57}, {51.223000000000006`, 
                 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{60.254,
                  37.707}, {66.00399999999999, 37.707}, {66.00399999999999, 
                 15.569999999999997`}, {60.254, 15.569999999999997`}}}]}, {
                FaceForm[
                 RGBColor[0.274612, 0.618881, 0.810913, 1.]]}, StripOnInput -> 
               False], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 70.12899999999999, 54.07}, {75.87899999999999, 54.07}, {
                 75.87899999999999, 15.57}, {70.12899999999999, 15.57}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 9.879000000000001, 60.547}, {24.129, 60.547}, {24.129, 
                 56.547}, {9.879000000000001, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.871, 
                 13.097999999999999`}, {80.121, 13.097999999999999`}, {80.121,
                  9.097999999999999}, {9.871, 9.097999999999999}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 65.87899999999999, 60.547}, {80.12899999999999, 60.547}, {
                 80.12899999999999, 56.547}, {65.87899999999999, 56.547}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.469000000000001`, 
                  66.54700000000001}, {45., 82.418}, {78.398, 
                  66.54700000000001}}, {{45., 86.73400000000001}, {
                  2.2230000000000003`, 66.54700000000001}, {
                  2.2230000000000003`, 62.547}, {87.777, 62.547}, {87.777, 
                  66.54700000000001}}}]}, {
                FaceForm[
                 RGBColor[0.648987, 0.648987, 0.648987, 1.]]}, StripOnInput -> 
               False]}, AspectRatio -> 1, Axes -> False, Background -> None, 
             Frame -> None, FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Sample Data: Fisher's Irises\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/Sample-\
Data-Fishers-Irises"}, "HyperlinkURL"]}, "RowDefault"], "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Fisher's iris data\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Statistics\"", "\"Life Science\"", 
                    "\"Machine Learning\""}, "RowWithSeparators"], Short], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ContentTypes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"Numerical Data\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"biology\"", "\"statistics\"", 
                    "\"ExampleData\"", "\"Iris\""}, "RowWithSeparators"], 
                   Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Documentation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://datarepository.wolframcloud.com/resources/\
Sample-Data-Fishers-Irises\"", 
                    "https://datarepository.wolframcloud.com/resources/Sample-\
Data-Fishers-Irises"}, "HyperlinkURL"], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Data Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  DynamicModuleBox[{
                   ResourceSystemClient`Private`typesetstorage$$ = 
                    ResourceSystemClient`Private`typesetstorageLocation, 
                    ResourceSystemClient`Private`info$$}, 
                   DynamicBox[
                    ToBoxes[
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "b7f632f7-9c5f-4ad4-a73e-446cc2656f64"]; If[
                    AssociationQ[ResourceSystemClient`Private`info$$], 
                    ResourceSystemClient`Private`typesetstorage$$[
                    Lookup[
                    ResourceSystemClient`Private`info$$, 
                    "ContentElementLocations", None]], 
                    Missing["NotAvailable"]], StandardForm]], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"b7f632f7-9c5f-4ad4-a73e-446cc2656f64\"", "SummaryItem"]}],
                ""}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.0.0\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "186.17600000000002`", "\"kB\"", "kilobytes", 
                    "\"Kilobytes\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   RowBox[{
                    "\"ColumnDescriptions\"", ",", "\"ColumnTypes\"", ",", 
                    "\"Content\"", ",", "\"DataType\"", ",", "\"Dimensions\"",
                     ",", 
                    RowBox[{"\"\"", "\[Ellipsis]", "\"\""}], ",", 
                    "\"RawData\"", ",", "\"Source\"", ",", "\"TrainingData\"",
                     ",", "\"TestData\""}], Short[#, 2]& ], "SummaryItem"]}], 
               ""}}, GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ResourceObject[
   Association[
   "Name" -> "Sample Data: Fisher's Irises", "UUID" -> 
    "b7f632f7-9c5f-4ad4-a73e-446cc2656f64", "ResourceType" -> "DataResource", 
    "Version" -> "3.0.0", "Description" -> "Fisher's iris data", 
    "RepositoryLocation" -> 
    URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
    "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
    Quantity[186.17600000000002`, "Kilobytes"], 
    "ContentElements" -> {
     "ColumnDescriptions", "ColumnTypes", "Content", "DataType", "Dimensions",
       "ObservationCount", "RawData", "Source", "TrainingData", "TestData"}], 
   ResourceSystemBase -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.802642544614838*^9, 3.8058142804673967`*^9, 
  3.8058144057888727`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"11ebd9b1-1eb6-4489-b9f8-ecc22fcfcd72"]
}, Open  ]],

Cell[BoxData["3"], "Input",
 CellChangeTimes->{
  3.806258323792737*^9},ExpressionUUID->"bb69e93a-a301-4312-bfae-\
1d920b871299"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.802642712965834*^9, 3.802642719844275*^9}, {
  3.802642841365427*^9, 3.8026428549558573`*^9}, {3.8026429482376895`*^9, 
  3.8026430428534985`*^9}, {3.8026431098490863`*^9, 3.802643110511834*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6019d43b-9a73-461b-a32a-8d12f0f496df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AllVersions\"\>", ",", "\<\"AutoUpdate\"\>", 
   ",", "\<\"Categories\"\>", ",", "\<\"ContentElementLocations\"\>", 
   ",", "\<\"ContentElements\"\>", ",", "\<\"ContentSize\"\>", 
   ",", "\<\"ContentTypes\"\>", ",", "\<\"ContributorInformation\"\>", 
   ",", "\<\"DefaultContentElement\"\>", ",", "\<\"Description\"\>", 
   ",", "\<\"Details\"\>", ",", "\<\"Documentation\"\>", 
   ",", "\<\"DocumentationLink\"\>", ",", "\<\"DOI\"\>", 
   ",", "\<\"DownloadedVersion\"\>", ",", "\<\"ExampleNotebook\"\>", 
   ",", "\<\"ExampleNotebookObject\"\>", ",", "\<\"Format\"\>", 
   ",", "\<\"InformationElements\"\>", ",", "\<\"Keywords\"\>", 
   ",", "\<\"LatestUpdate\"\>", ",", "\<\"Name\"\>", 
   ",", "\<\"Originator\"\>", ",", "\<\"Properties\"\>", 
   ",", "\<\"ReleaseDate\"\>", ",", "\<\"RepositoryLocation\"\>", 
   ",", "\<\"ResourceLocations\"\>", ",", "\<\"ResourceType\"\>", 
   ",", "\<\"SeeAlso\"\>", ",", "\<\"ShortName\"\>", 
   ",", "\<\"SourceMetadata\"\>", ",", "\<\"UUID\"\>", ",", "\<\"Version\"\>",
    ",", "\<\"VersionInformation\"\>", ",", "\<\"VersionsAvailable\"\>", 
   ",", "\<\"WolframLanguageVersionRequired\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.802642720113164*^9, {3.802642846226937*^9, 3.802642855395646*^9}, {
   3.802642957097599*^9, 3.802643043737609*^9}, 3.8026431108762665`*^9, 
   3.8042557584445467`*^9, 3.80425589301505*^9, 3.8058144995522785`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"b9fabc7b-f589-48ce-a121-33bb01d64109"]
}, Open  ]],

Cell[BoxData["4"], "Input",
 CellChangeTimes->{
  3.8062583313988676`*^9},ExpressionUUID->"39658651-2776-41a6-9121-\
9e3f380996ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<ExampleNotebook\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8026421392891607`*^9, 3.8026421421746373`*^9}, {
   3.8026421945174475`*^9, 3.8026421986980677`*^9}, 3.8026427952869725`*^9, {
   3.802643121406697*^9, 3.802643122139702*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"0cdb6125-ff01-4ceb-b307-9a8b94f0a966"],

Cell[BoxData[
 TemplateBox[{
   FrontEndObject[
    LinkObject["qgekm_shm", 3, 1]], 44, 
   "FrontEndObject[LinkObject[\"qgekm_shm\", 3, 1]]", "44", 
   "\"Sample-Data-Fishers-Irises_examples.nb\"", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
      TemplateBox[{
       "\"https://www.wolframcloud.com/obj/5e59b79e-d95e-4f6f-a7c8-\
f1276ba17be2\"", 
        "https://www.wolframcloud.com/obj/5e59b79e-d95e-4f6f-a7c8-\
f1276ba17be2"}, "HyperlinkURL"], "]"}], 
    CloudObject[
    "https://www.wolframcloud.com/obj/5e59b79e-d95e-4f6f-a7c8-f1276ba17be2"], 
    SelectWithContents -> True]},
  "NotebookObject"]], "Output",
 CellChangeTimes->{{3.8026421464590206`*^9, 3.802642199267397*^9}, 
   3.8026431271866727`*^9, 3.802643167782278*^9, 3.80425589783672*^9, 
   3.8058145512619667`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"eea4c1c4-9ad2-4723-8218-fc10d359781e"]
}, Open  ]],

Cell[BoxData["5"], "Input",
 CellChangeTimes->{
  3.8062583341980486`*^9},ExpressionUUID->"672f8592-333c-45bd-8ad7-\
aafdd4eeec22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<ExampleNotebookObject\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8026432135915756`*^9, 3.8026432334505615`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"8569c508-a52a-4568-b8eb-89b1b6fda475"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/5e59b79e-d95e-4f6f-a7c8-f1276ba17be2\"\
", "https://www.wolframcloud.com/obj/5e59b79e-d95e-4f6f-a7c8-f1276ba17be2"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/5e59b79e-d95e-4f6f-a7c8-f1276ba17be2"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.802643219025399*^9, 3.802643233807685*^9}, 
   3.8027098327932863`*^9, 3.804255902873466*^9, 3.805814614739009*^9, 
   3.805814740610265*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"60e2c232-84fe-4f33-91b3-c2e377cb2adf"]
}, Open  ]],

Cell[BoxData["6"], "Input",
 CellChangeTimes->{
  3.8062583452417927`*^9},ExpressionUUID->"bc8d36c0-c4cb-4061-96a5-\
5174f3ea4683"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<Documentation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.802643745966792*^9, 3.80264375017739*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"51addd16-10f8-4490-b027-6734d1a7d74f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://datarepository.wolframcloud.com/resources/Sample-Data-Fishers-\
Irises\""},
   "URLArgument"], "]"}]], "Output",
 CellChangeTimes->{
  3.8027099370756063`*^9, {3.805814866323785*^9, 3.8058148728672085`*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"9148dc70-cb77-4272-909b-414baa3cbccc"]
}, Open  ]],

Cell[BoxData["7"], "Input",
 CellChangeTimes->{
  3.806258348320606*^9},ExpressionUUID->"2019a394-bf7e-4697-941d-\
5fa6020c89ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.802644120801815*^9, 3.8026441667235174`*^9}, 
   3.802644345464179*^9, {3.8042571458825593`*^9, 3.804257146699359*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e3e887ba-be0c-4138-88e5-147d8890ff6f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
        "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
        Quantity[1.7, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"], 
        "SepalWidth" -> Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
        "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.3, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.1, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.8, "Centimeters"], 
        "SepalWidth" -> Quantity[4., "Centimeters"], "PetalLength" -> 
        Quantity[1.2, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"], 
        "SepalWidth" -> Quantity[4.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"], 
        "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[1.7, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.7, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
        "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
        Quantity[1., "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[1.7, "Centimeters"], "PetalWidth" -> 
        Quantity[0.5, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.9, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"], 
        "SepalWidth" -> Quantity[4.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"], 
        "SepalWidth" -> Quantity[4.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
        "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.2, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
        "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.1, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.5, "Centimeters"], 
        "SepalWidth" -> Quantity[2.3, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.3, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.6, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[1.9, "Centimeters"], "PetalWidth" -> 
        Quantity[0.4, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
        "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.3, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
        "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[1.6, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
        "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5.3, "Centimeters"], 
        "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
        Quantity[1.5, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
        "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[1.4, "Centimeters"], "PetalWidth" -> 
        Quantity[0.2, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[7., "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.3, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.6, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[4.9, "Centimeters"], "SepalWidth" -> 
        Quantity[2.4, "Centimeters"], "PetalLength" -> 
        Quantity[3.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.2, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[3.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5., "Centimeters"], "SepalWidth" -> 
        Quantity[2., "Centimeters"], "PetalLength" -> 
        Quantity[3.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.2, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6., "Centimeters"], "SepalWidth" -> 
        Quantity[2.2, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[3.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[4.4, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[4.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.2, "Centimeters"], "SepalWidth" -> 
        Quantity[2.2, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[3.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.1, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[4.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.6, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.4, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5., "Centimeters"], "PetalWidth" -> 
        Quantity[1.7, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6., "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[3.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.4, "Centimeters"], "PetalLength" -> 
        Quantity[3.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.1, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.4, "Centimeters"], "PetalLength" -> 
        Quantity[3.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[3.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6., "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.6, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.4, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6., "Centimeters"], "SepalWidth" -> 
        Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.6, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[4.7, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.3, "Centimeters"], "PetalLength" -> 
        Quantity[4.4, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.5, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[4.4, "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[4., "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5., "Centimeters"], "SepalWidth" -> 
        Quantity[2.3, "Centimeters"], "PetalLength" -> 
        Quantity[3.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1., "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[4.2, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.2, "Centimeters"], "PetalWidth" -> 
        Quantity[1.2, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.2, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[6.2, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[4.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[3., "Centimeters"], "PetalWidth" -> 
        Quantity[1.1, "Centimeters"]], 
       Association[
       "Species" -> "versicolor", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.3, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[6., "Centimeters"], "PetalWidth" -> 
        Quantity[2.5, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.1, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.9, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.8, "Centimeters"], "PetalWidth" -> 
        Quantity[2.2, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.6, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[6.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[4.9, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[4.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.7, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.9, "Centimeters"], "PetalLength" -> 
        Quantity[6.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[5.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.2, "Centimeters"], "SepalWidth" -> 
        Quantity[3.6, "Centimeters"], "PetalLength" -> 
        Quantity[6.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2.5, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[5.3, "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.8, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.5, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[5., "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2.4, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[5.3, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[6.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2.2, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[6.9, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> Quantity[6., "Centimeters"],
         "SepalWidth" -> Quantity[2.2, "Centimeters"], "PetalLength" -> 
        Quantity[5., "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[5.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.6, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.7, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[6.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[5.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.2, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[6., "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.2, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[4.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.9, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.2, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.6, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[6.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.8, "Centimeters"], "PetalLength" -> 
        Quantity[6.4, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.2, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.8, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.5, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.1, "Centimeters"], "SepalWidth" -> 
        Quantity[2.6, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[1.4, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[7.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[6.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.4, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.4, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[5.5, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> Quantity[6., "Centimeters"],
         "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[4.8, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[5.4, "Centimeters"], "PetalWidth" -> 
        Quantity[2.1, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[5.6, "Centimeters"], "PetalWidth" -> 
        Quantity[2.4, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3.1, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.8, "Centimeters"], "SepalWidth" -> 
        Quantity[2.7, "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.8, "Centimeters"], "SepalWidth" -> 
        Quantity[3.2, "Centimeters"], "PetalLength" -> 
        Quantity[5.9, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3.3, "Centimeters"], "PetalLength" -> 
        Quantity[5.7, "Centimeters"], "PetalWidth" -> 
        Quantity[2.5, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.7, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.2, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.3, "Centimeters"], "SepalWidth" -> 
        Quantity[2.5, "Centimeters"], "PetalLength" -> 
        Quantity[5., "Centimeters"], "PetalWidth" -> 
        Quantity[1.9, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.5, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.2, "Centimeters"], "PetalWidth" -> 
        Quantity[2., "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[6.2, "Centimeters"], "SepalWidth" -> 
        Quantity[3.4, "Centimeters"], "PetalLength" -> 
        Quantity[5.4, "Centimeters"], "PetalWidth" -> 
        Quantity[2.3, "Centimeters"]], 
       Association[
       "Species" -> "virginica", "SepalLength" -> 
        Quantity[5.9, "Centimeters"], "SepalWidth" -> 
        Quantity[3., "Centimeters"], "PetalLength" -> 
        Quantity[5.1, "Centimeters"], "PetalWidth" -> 
        Quantity[1.8, "Centimeters"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Species"} -> 1, {All, "SepalLength"} -> 
        1, {All, "SepalWidth"} -> 1, {All, "PetalLength"} -> 
        1, {All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Species" -> TypeSystem`PackageScope`AtomShape[90.], "SepalLength" -> 
            TypeSystem`PackageScope`AtomShape[75], "SepalWidth" -> 
            TypeSystem`PackageScope`AtomShape[75], "PetalLength" -> 
            TypeSystem`PackageScope`AtomShape[75], "PetalWidth" -> 
            TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Species", "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 150], "Meta" -> 
     Association["ID" -> 63119045223059], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Species"} -> 1, {All, "SepalLength"} -> 
        1, {All, "SepalWidth"} -> 1, {All, "PetalLength"} -> 
        1, {All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Species" -> TypeSystem`PackageScope`AtomShape[90.], "SepalLength" -> 
            TypeSystem`PackageScope`AtomShape[75], "SepalWidth" -> 
            TypeSystem`PackageScope`AtomShape[75], "PetalLength" -> 
            TypeSystem`PackageScope`AtomShape[75], "PetalWidth" -> 
            TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Species", "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 150], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 150, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Species", 
                  Style[
                  "Species", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Species"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{All, "Species"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "SepalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{All, "SepalLength"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "SepalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{All, "SepalWidth"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "PetalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{All, "PetalLength"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "PetalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{All, "PetalWidth"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{6, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{6, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{6, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{6, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{6, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{7, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{7, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{7, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{7, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{7, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{8, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{8, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{8, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{8, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{8, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{9, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{9, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{9, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{9, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{9, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{10, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{10, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{10, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{10, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{10, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{11, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{11, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{11, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{11, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{11, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{12, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{12, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{12, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{12, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{12, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{13, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{13, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{13, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{13, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{13, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{14, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{14, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{14, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{14, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{14, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{15, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{15, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{15, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{15, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{15, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{16, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{16, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{16, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{16, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{16, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{17, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{17, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{17, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{17, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{17, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{18, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{18, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{18, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{18, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{18, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{19, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{19, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{19, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{19, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{19, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{20, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{20, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{20, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{20, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "f1efb723-03e8-4771-8fbb-bce399db85aa"][{20, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 150, 1], {1, 150 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 150, 1], {1, 150 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    150, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    150, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 150, 1], {1, 150 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 150, 1], {1, 150 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{472., {267., 273.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{472., {267., 273.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.802644149216014*^9, 3.802644167184168*^9}, 
   3.802644346967071*^9, 3.803323310667366*^9, 3.804255050212014*^9, 
   3.8042571587058277`*^9, 3.8058149389423175`*^9, 3.805815084345933*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"42d5e3d2-8d12-4b2b-9bc1-48e6cfe9b5f1"]
}, Open  ]],

Cell[BoxData["8"], "Input",
 CellChangeTimes->{
  3.8062584385202613`*^9},ExpressionUUID->"b742de8e-a68f-42d3-b3be-\
b7daca59f9cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], "[", 
  "\"\<ContentElements\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8026445842246075`*^9, 3.8026445867130594`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"45a4cdf2-8f25-497d-81fb-2682a4b168a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ColumnDescriptions\"\>", ",", "\<\"ColumnTypes\"\>", 
   ",", "\<\"Content\"\>", ",", "\<\"DataType\"\>", ",", "\<\"Dimensions\"\>",
    ",", "\<\"ObservationCount\"\>", ",", "\<\"RawData\"\>", 
   ",", "\<\"Source\"\>", ",", "\<\"TrainingData\"\>", 
   ",", "\<\"TestData\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.802644571797947*^9, 3.8026445873186555`*^9}, 
   3.804256129171894*^9, 3.8058156196846347`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"c425bec7-d396-4c8f-b722-4b402602c61a"]
}, Open  ]],

Cell[BoxData["9"], "Input",
 CellChangeTimes->{
  3.806258442293417*^9},ExpressionUUID->"a309246e-35f1-442e-95a1-\
94f2d18b3616"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  RowBox[{
   RowBox[{
   "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], ",", 
   "\"\<ColumnTypes\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.802644819701922*^9, 3.8026449124058948`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"0c561bf4-2362-4461-a717-2035dae55e03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Numeric\"\>", ",", "\<\"Numeric\"\>", ",", "\<\"Numeric\"\>", 
   ",", "\<\"Numeric\"\>", ",", "\<\"Categorical\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8026448326190076`*^9, 3.8026448822515097`*^9}, 
   3.802644912889843*^9, 3.8042556068770304`*^9, 3.804256132335512*^9, 
   3.8058156607272844`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"1c9ed470-46ec-4f1d-b729-56b5c6742280"]
}, Open  ]],

Cell[BoxData["10"], "Input",
 CellChangeTimes->{{3.8062584465959983`*^9, 
  3.806258446702997*^9}},ExpressionUUID->"3dceac82-08e8-4370-ba16-\
bc3db48e811a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ResourceData", "[", 
     RowBox[{
      RowBox[{
      "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
      ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<ColumnDescriptions\>\"", ",", "\"\<Dimensions\>\"", ",", 
     "\"\<Source\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8027109934822807`*^9, 3.8027110161371765`*^9}, {
  3.8027111161896286`*^9, 3.8027111967537785`*^9}, {3.802711337052981*^9, 
  3.8027113399900703`*^9}, {3.803323353381167*^9, 3.803323540336095*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"16196530-789d-42f6-a1a3-a24976ef1f57"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"\<\"Sepal length in cm.\"\>", 
       ",", "\<\"Sepal width in cm.\"\>", ",", "\<\"Petal length in cm.\"\>", 
       ",", "\<\"Petal width in cm.\"\>", ",", "\<\"Species of iris\"\>"}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"150", ",", "4"}], "}"}]},
    {"\<\"Fisher,R.A. \\\"The use of multiple measurements in taxonomic \
problems\\\" Annual Eugenics, 7, Part II, 179-188 (1936); also in \
\\\"Contributions to Mathematical Statistics\\\" (John Wiley, NY, 1950). \"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.8027111580025997`*^9, 3.80271119792262*^9}, {
   3.802711338212735*^9, 3.8027113404106193`*^9}, 3.8033233734560437`*^9, {
   3.803323499056203*^9, 3.803323540736268*^9}, 3.804255614171548*^9, 
   3.8058157007613215`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"86db8feb-b15e-49ae-848b-a4089dd271f4"]
}, Open  ]],

Cell[BoxData["11"], "Input",
 CellChangeTimes->{{3.806258451585662*^9, 
  3.806258451744871*^9}},ExpressionUUID->"13912813-f3c3-49ee-b42c-\
08f1bfb52694"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fisher", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{
    "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.802711897033333*^9, 3.8027119274080877`*^9}, {
   3.802723525783646*^9, 3.802723526622531*^9}, {3.803323817266588*^9, 
   3.803323832756963*^9}, 3.8058159197925787`*^9, 3.80581594991068*^9, 
   3.805816079232048*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"613b477f-76c9-4fe1-b57c-5bc54e522f13"],

Cell[BoxData["12"], "Input",
 CellChangeTimes->{{3.8062584554561977`*^9, 
  3.806258455566427*^9}},ExpressionUUID->"deea52ab-338a-4006-8b1c-\
a70a4785b3b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fisher", "[", 
  RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.802723536987381*^9, 3.8027235523778877`*^9}, {
  3.8027272100504084`*^9, 3.802727210859043*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"8fb5e7b6-2341-4443-a908-6869615690a4"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["setosa" -> {
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"],
           "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"],
           "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"],
           "SepalWidth" -> Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"],
           "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.3, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.1, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.8, "Centimeters"],
           "SepalWidth" -> Quantity[4., "Centimeters"], "PetalLength" -> 
          Quantity[1.2, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"],
           "SepalWidth" -> Quantity[4.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"],
           "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"],
           "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1., "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.5, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.9, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"],
           "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"],
           "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"],
           "SepalWidth" -> Quantity[4.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"],
           "SepalWidth" -> Quantity[4.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"],
           "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.2, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"],
           "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"],
           "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.5, "Centimeters"],
           "SepalWidth" -> Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"],
           "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.6, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.9, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"],
           "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"],
           "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"],
           "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5.3, "Centimeters"],
           "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
          "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]]}, "versicolor" -> {
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[7., "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[2., "Centimeters"], "PetalLength" -> 
          Quantity[3.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[3.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.7, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[3.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[3.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[3., "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]], 
         Association[
         "Species" -> "versicolor", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]]}, "virginica" -> {
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[6., "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[6.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.7, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[6.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.3, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[6.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[6., "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.2, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.2, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[5.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "Species" -> "virginica", "SepalLength" -> 
          Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]]}], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "Species"} -> 
        1, {All, All, "SepalLength"} -> 1, {All, All, "SepalWidth"} -> 
        1, {All, All, "PetalLength"} -> 1, {All, All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90.], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Species" -> TypeSystem`PackageScope`AtomShape[90.], 
               "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]]], 
             DirectedInfinity[1], 5, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "Species", "SepalLength", "SepalWidth", "PetalLength", 
          "PetalWidth"}, {
          TypeSystem`Atom[
           TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]]}], 50], 3], "Meta" -> 
     Association["ID" -> 130833502045662], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "Species"} -> 
        1, {All, All, "SepalLength"} -> 1, {All, All, "SepalWidth"} -> 
        1, {All, All, "PetalLength"} -> 1, {All, All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90.], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Species" -> TypeSystem`PackageScope`AtomShape[90.], 
               "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]]], 
             DirectedInfinity[1], 5, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "Species", "SepalLength", "SepalWidth", "PetalLength", 
          "PetalWidth"}, {
          TypeSystem`Atom[
           TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]]}], 50], 3], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 3, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{All, All, Keys}, 
                "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Species", 
                  Style[
                  "Species", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, All, "Species"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{All, All, "Species"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, All, "SepalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                All, All, "SepalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, All, "SepalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                All, All, "SepalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, All, "PetalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                All, All, "PetalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, All, "PetalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                All, All, "PetalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["setosa"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["setosa"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["versicolor"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["versicolor", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["versicolor"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["virginica"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 1, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 2, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 3, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 4, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["virginica", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 5, 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["virginica"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "ec0c21c8-4ac4-4b1a-bebf-45e41a22ba4e"][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{554., {229., 235.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{554., {229., 235.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8027235528475*^9, 3.804256154059754*^9, 
  3.8042720932727146`*^9, 3.8058161098601694`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"6ef44993-088c-47c0-8fe3-0ccf2f170f08"]
}, Open  ]],

Cell[BoxData["13"], "Input",
 CellChangeTimes->{{3.8062585110334663`*^9, 
  3.806258511132518*^9}},ExpressionUUID->"db3f3d1c-6267-4bd9-80ca-\
051a254758ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"GroupBy", "[", 
    RowBox[{
     RowBox[{"Key", "[", "\"\<Species\>\"", "]"}], "\[Rule]", 
     RowBox[{"KeyTake", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
        "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], "]"}]}], 
    "]"}], "]"}], "[", "Fisher", "]"}]], "Input",
 CellChangeTimes->{{3.8042562153127236`*^9, 3.8042562245366163`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"d05e31ac-d856-44b1-91d3-66ee52d1388d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["setosa" -> {
         Association[
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.1, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[4., "Centimeters"], "PetalLength" -> 
          Quantity[1.2, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[4.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.9, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1., "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.7, "Centimeters"], "PetalWidth" -> 
          Quantity[0.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.9, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[4.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[4.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.2, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.3, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.5, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.6, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.9, "Centimeters"], "PetalWidth" -> 
          Quantity[0.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[1.6, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.7, "Centimeters"], "PetalLength" -> 
          Quantity[1.5, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[1.4, "Centimeters"], "PetalWidth" -> 
          Quantity[0.2, "Centimeters"]]}, "versicolor" -> {
         Association[
         "SepalLength" -> Quantity[7., "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[2., "Centimeters"], "PetalLength" -> 
          Quantity[3.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[3.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.7, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[3.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.4, "Centimeters"], "PetalLength" -> 
          Quantity[3.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[3.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[4.7, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.5, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[4.4, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[4., "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5., "Centimeters"], "SepalWidth" -> 
          Quantity[2.3, "Centimeters"], "PetalLength" -> 
          Quantity[3.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.2, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[4.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[3., "Centimeters"], "PetalWidth" -> 
          Quantity[1.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.3, "Centimeters"]]}, "virginica" -> {
         Association[
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[6., "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.6, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[6.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[4.9, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[4.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.7, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.9, "Centimeters"], "PetalLength" -> 
          Quantity[6.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.6, "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.3, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.3, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[6.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[2.2, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.6, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[6., "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.9, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.6, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.8, "Centimeters"], "PetalLength" -> 
          Quantity[6.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.2, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.8, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.1, "Centimeters"], "SepalWidth" -> 
          Quantity[2.6, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[1.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[7.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[6.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.4, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.5, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6., "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[4.8, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2.1, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.6, "Centimeters"], "PetalWidth" -> 
          Quantity[2.4, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3.1, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.8, "Centimeters"], "SepalWidth" -> 
          Quantity[2.7, "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.8, "Centimeters"], "SepalWidth" -> 
          Quantity[3.2, "Centimeters"], "PetalLength" -> 
          Quantity[5.9, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3.3, "Centimeters"], "PetalLength" -> 
          Quantity[5.7, "Centimeters"], "PetalWidth" -> 
          Quantity[2.5, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.7, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.2, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.3, "Centimeters"], "SepalWidth" -> 
          Quantity[2.5, "Centimeters"], "PetalLength" -> 
          Quantity[5., "Centimeters"], "PetalWidth" -> 
          Quantity[1.9, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.5, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.2, "Centimeters"], "PetalWidth" -> 
          Quantity[2., "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[6.2, "Centimeters"], "SepalWidth" -> 
          Quantity[3.4, "Centimeters"], "PetalLength" -> 
          Quantity[5.4, "Centimeters"], "PetalWidth" -> 
          Quantity[2.3, "Centimeters"]], 
         Association[
         "SepalLength" -> Quantity[5.9, "Centimeters"], "SepalWidth" -> 
          Quantity[3., "Centimeters"], "PetalLength" -> 
          Quantity[5.1, "Centimeters"], "PetalWidth" -> 
          Quantity[1.8, "Centimeters"]]}], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 
        1, {All, All, "SepalLength"} -> 1, {All, All, "SepalWidth"} -> 
        1, {All, All, "PetalLength"} -> 1, {All, All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90.], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]]], 
             DirectedInfinity[1], 4, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]]}], 50], 3], "Meta" -> 
     Association["ID" -> 130846386948183], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 
        1, {All, All, "SepalLength"} -> 1, {All, All, "SepalWidth"} -> 
        1, {All, All, "PetalLength"} -> 1, {All, All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90.], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
               "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]]], 
             DirectedInfinity[1], 4, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]], 
          TypeSystem`Atom[
           Quantity[1, "Centimeters"]]}], 50], 3], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 
     4, "DataRowCount" -> 3, "DataColumnCount" -> 4, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{All, All, Keys}, 
                "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, All, "SepalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                All, All, "SepalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, All, "SepalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                All, All, "SepalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, All, "PetalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                All, All, "PetalLength"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, All, "PetalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                All, All, "PetalWidth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["setosa"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["setosa"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["versicolor"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["versicolor"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["virginica"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 1, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 1, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 1, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 1, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 2, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 2, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 2, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 2, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 3, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 3, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 3, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 3, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 4, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 4, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 4, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 4, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 5, 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 5, 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 5, 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"], 5, 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["50 total \:203a ", ""], 
                  Style[
                   Superscript["50 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["virginica"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "4cbce4fe-77ef-4bdb-a751-c7433b66d807"][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{456., {229., 235.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{456., {229., 235.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8029061466097383`*^9, 3.804256190460407*^9, 
  3.80425622506845*^9, 3.8058167436517396`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"b216d864-d265-48dd-8742-51c63af1c1f2"]
}, Open  ]],

Cell[BoxData["14"], "Input",
 CellChangeTimes->{{3.806258526916394*^9, 
  3.8062585270997963`*^9}},ExpressionUUID->"9d0a8eb2-422c-424a-9dc5-\
f0d0bf5c1e53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "#"}], "]"}], "\[Rule]", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "@", "#"}], "]"}]}], "]"}], "]"}], "[", "Fisher", 
    "]"}], "&"}], "[", "Fisher", "]"}]], "Input",
 CellChangeTimes->{{3.8027261752342787`*^9, 3.8027262233161364`*^9}, 
   3.802726259411383*^9, {3.8042562839156504`*^9, 3.804256352768383*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"ca207510-1a7d-47c4-a33c-45116c2e2a52"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      1 -> Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
         "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 2 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
         "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 3 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"], 
         "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 4 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
         "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 5 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
         "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 6 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
         "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
         Quantity[1.7, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]], 7 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
         "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]], 8 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
         "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 9 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"], 
         "SepalWidth" -> Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 10 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
         "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]], 11 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
         "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 12 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
         "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 13 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
         "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]], 14 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.3, "Centimeters"], 
         "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.1, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]], 15 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.8, "Centimeters"], 
         "SepalWidth" -> Quantity[4., "Centimeters"], "PetalLength" -> 
         Quantity[1.2, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 16 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"], 
         "SepalWidth" -> Quantity[4.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]], 17 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
         "SepalWidth" -> Quantity[3.9, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]], 18 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
         "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]], 19 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.7, "Centimeters"], 
         "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[1.7, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]], 20 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
         "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]], 21 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
         "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.7, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 22 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
         "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]], 23 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
         "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
         Quantity[1., "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 24 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
         "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[1.7, "Centimeters"], "PetalWidth" -> 
         Quantity[0.5, "Centimeters"]], 25 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
         "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.9, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 26 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
         "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 27 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
         "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]], 28 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"], 
         "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 29 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"], 
         "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 30 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.7, "Centimeters"], 
         "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 31 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
         "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 32 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.4, "Centimeters"], 
         "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]], 33 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.2, "Centimeters"], 
         "SepalWidth" -> Quantity[4.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]], 34 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"], 
         "SepalWidth" -> Quantity[4.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 35 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
         "SepalWidth" -> Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 36 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
         "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.2, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 37 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.5, "Centimeters"], 
         "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 38 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.9, "Centimeters"], 
         "SepalWidth" -> Quantity[3.6, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.1, "Centimeters"]], 39 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"], 
         "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 40 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
         "SepalWidth" -> Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 41 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
         "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]], 42 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.5, "Centimeters"], 
         "SepalWidth" -> Quantity[2.3, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]], 43 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.4, "Centimeters"], 
         "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.3, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 44 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
         "SepalWidth" -> Quantity[3.5, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.6, "Centimeters"]], 45 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
         "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[1.9, "Centimeters"], "PetalWidth" -> 
         Quantity[0.4, "Centimeters"]], 46 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.8, "Centimeters"], 
         "SepalWidth" -> Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.3, "Centimeters"]], 47 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.1, "Centimeters"], 
         "SepalWidth" -> Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[1.6, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 48 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[4.6, "Centimeters"], 
         "SepalWidth" -> Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 49 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5.3, "Centimeters"], 
         "SepalWidth" -> Quantity[3.7, "Centimeters"], "PetalLength" -> 
         Quantity[1.5, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 50 -> 
       Association[
        "Species" -> "setosa", "SepalLength" -> Quantity[5., "Centimeters"], 
         "SepalWidth" -> Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[1.4, "Centimeters"], "PetalWidth" -> 
         Quantity[0.2, "Centimeters"]], 51 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[7., "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]], 52 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 53 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 54 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.3, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 55 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 56 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 57 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.6, "Centimeters"]], 58 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[4.9, "Centimeters"], "SepalWidth" -> 
         Quantity[2.4, "Centimeters"], "PetalLength" -> 
         Quantity[3.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]], 59 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 60 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.2, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[3.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]], 61 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[2., "Centimeters"], "PetalLength" -> 
         Quantity[3.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]], 62 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.2, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 63 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[2.2, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]], 64 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]], 65 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[3.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 66 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[4.4, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]], 67 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 68 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[4.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]], 69 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.2, "Centimeters"], "SepalWidth" -> 
         Quantity[2.2, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 70 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[3.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.1, "Centimeters"]], 71 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[4.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 72 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 73 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 74 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]], 75 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 76 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.4, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]], 77 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]], 78 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5., "Centimeters"], "PetalWidth" -> 
         Quantity[1.7, "Centimeters"]], 79 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 80 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[3.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]], 81 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.4, "Centimeters"], "PetalLength" -> 
         Quantity[3.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.1, "Centimeters"]], 82 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.4, "Centimeters"], "PetalLength" -> 
         Quantity[3.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]], 83 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[3.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]], 84 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.6, "Centimeters"]], 85 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 86 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.6, "Centimeters"]], 87 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[4.7, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 88 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.3, "Centimeters"], "PetalLength" -> 
         Quantity[4.4, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 89 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 90 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 91 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.5, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[4.4, "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]], 92 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]], 93 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[4., "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]], 94 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5., "Centimeters"], "SepalWidth" -> 
         Quantity[2.3, "Centimeters"], "PetalLength" -> 
         Quantity[3.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1., "Centimeters"]], 95 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[4.2, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 96 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.2, "Centimeters"], "PetalWidth" -> 
         Quantity[1.2, "Centimeters"]], 97 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.2, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 98 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[6.2, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[4.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 99 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[3., "Centimeters"], "PetalWidth" -> 
         Quantity[1.1, "Centimeters"]], 100 -> 
       Association[
        "Species" -> "versicolor", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3, "Centimeters"]], 101 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[6., "Centimeters"], "PetalWidth" -> 
         Quantity[2.5, "Centimeters"]], 102 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]], 103 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.9, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]], 104 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 105 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.8, "Centimeters"], "PetalWidth" -> 
         Quantity[2.2, "Centimeters"]], 106 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.6, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[6.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]], 107 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[4.9, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[4.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.7, "Centimeters"]], 108 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.9, "Centimeters"], "PetalLength" -> 
         Quantity[6.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 109 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[5.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 110 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3.6, "Centimeters"], "PetalLength" -> 
         Quantity[6.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2.5, "Centimeters"]], 111 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]], 112 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[5.3, "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]], 113 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.8, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.5, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]], 114 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[5.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[5., "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]], 115 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2.4, "Centimeters"]], 116 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[5.3, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]], 117 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 118 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[6.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2.2, "Centimeters"]], 119 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[6.9, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]], 120 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[2.2, "Centimeters"], "PetalLength" -> 
         Quantity[5., "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 121 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[5.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]], 122 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[5.6, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]], 123 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.7, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[6.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]], 124 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 125 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[5.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]], 126 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[6., "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 127 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.2, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[4.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 128 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.9, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 129 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]], 130 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.6, "Centimeters"]], 131 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[6.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]], 132 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.8, "Centimeters"], "PetalLength" -> 
         Quantity[6.4, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]], 133 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.2, "Centimeters"]], 134 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.8, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.5, "Centimeters"]], 135 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.1, "Centimeters"], "SepalWidth" -> 
         Quantity[2.6, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[1.4, "Centimeters"]], 136 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[7.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[6.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]], 137 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.4, "Centimeters"]], 138 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.4, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[5.5, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 139 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6., "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[4.8, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]], 140 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[5.4, "Centimeters"], "PetalWidth" -> 
         Quantity[2.1, "Centimeters"]], 141 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[5.6, "Centimeters"], "PetalWidth" -> 
         Quantity[2.4, "Centimeters"]], 142 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3.1, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]], 143 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[5.8, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7, "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]], 144 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.8, "Centimeters"], "SepalWidth" -> 
         Quantity[3.2, "Centimeters"], "PetalLength" -> 
         Quantity[5.9, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]], 145 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3.3, "Centimeters"], "PetalLength" -> 
         Quantity[5.7, "Centimeters"], "PetalWidth" -> 
         Quantity[2.5, "Centimeters"]], 146 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.7, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.2, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]], 147 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.3, "Centimeters"], "SepalWidth" -> 
         Quantity[2.5, "Centimeters"], "PetalLength" -> 
         Quantity[5., "Centimeters"], "PetalWidth" -> 
         Quantity[1.9, "Centimeters"]], 148 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.5, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.2, "Centimeters"], "PetalWidth" -> 
         Quantity[2., "Centimeters"]], 149 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[6.2, "Centimeters"], "SepalWidth" -> 
         Quantity[3.4, "Centimeters"], "PetalLength" -> 
         Quantity[5.4, "Centimeters"], "PetalWidth" -> 
         Quantity[2.3, "Centimeters"]], 150 -> 
       Association[
        "Species" -> "virginica", "SepalLength" -> 
         Quantity[5.9, "Centimeters"], "SepalWidth" -> 
         Quantity[3., "Centimeters"], "PetalLength" -> 
         Quantity[5.1, "Centimeters"], "PetalWidth" -> 
         Quantity[1.8, "Centimeters"]]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "Species"} -> 
        1, {All, "SepalLength"} -> 1, {All, "SepalWidth"} -> 
        1, {All, "PetalLength"} -> 1, {All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Species" -> TypeSystem`PackageScope`AtomShape[90.], 
             "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]]], 
           DirectedInfinity[1], 5, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{
        "Species", "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 150], "Meta" -> 
     Association["ID" -> 130850681915829], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "Species"} -> 
        1, {All, "SepalLength"} -> 1, {All, "SepalWidth"} -> 
        1, {All, "PetalLength"} -> 1, {All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "Species" -> TypeSystem`PackageScope`AtomShape[90.], 
             "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]]], 
           DirectedInfinity[1], 5, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{
        "Species", "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 150], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 150, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{All, Keys}, 
                "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Species", 
                  Style[
                  "Species", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Species"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{All, "Species"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "SepalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{All, "SepalLength"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "SepalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{All, "SepalWidth"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "PetalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{All, "PetalLength"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "PetalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{All, "PetalWidth"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[1]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[1], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[1], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[1], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[1], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[1], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[2]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[2], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[2], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[2], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[2], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[2], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[3]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[3], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[3], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[3], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[3], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[3], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[4]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[4], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[4], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[4], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[4], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[4], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[5]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[5], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[5], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[5], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[5], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[5], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[6]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[6], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[6], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[6], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[6], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[6], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[7]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[7], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[7], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[7], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[7], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[7], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[8]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[8], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[8], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[8], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[8], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[8], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[9]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[9], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[9], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[9], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[9], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[9], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[10]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[10], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[10], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[10], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[10], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[10], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[11]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[11], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[11], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[11], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[11], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[11], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[12]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[12], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[12], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[12], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.6`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[12], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[12], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[13]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[13], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[13], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[13], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[13], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[13], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[14]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[14], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[14], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[14], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[14], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[14], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["15"], 
                  Style[
                   RawBoxes["15"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[15]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[15]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[15], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[15], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[15], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[15], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[15], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["16"], 
                  Style[
                   RawBoxes["16"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[16]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[16]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[16], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[16], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[16], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[16], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[16], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["17"], 
                  Style[
                   RawBoxes["17"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[17]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[17]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[17], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[17], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.9`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[17], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[17], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[17], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["18"], 
                  Style[
                   RawBoxes["18"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[18]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[18]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[18], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[18], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[18], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[18], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[18], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["19"], 
                  Style[
                   RawBoxes["19"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[19]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[19]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[19], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[19], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[19], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.7`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[19], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[19], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["20"], 
                  Style[
                   RawBoxes["20"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[20]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[20]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["setosa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[20], 
                 Key["Species"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.1`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[20], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.8`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[20], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.5`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[20], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.3`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "296d8800-3996-42eb-8ef5-1797a11ac7d9"][{
                 Key[20], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 150, 1], {1, 150 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 150, 1], {1, 150 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    150, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    150, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 150, 1], {1, 150 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 150, 1], {1, 150 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{514., {267., 273.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{514., {267., 273.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.802905986240495*^9, 3.8033250804112077`*^9, 
  3.804256354949209*^9, 3.8058170931483545`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"66f70f2d-ba02-45b3-b9b5-ce2973fda33e"]
}, Open  ]],

Cell[BoxData["15"], "Input",
 CellChangeTimes->{{3.806258555300511*^9, 
  3.8062585554010105`*^9}},ExpressionUUID->"bb6351c2-f76f-4805-9f60-\
df5e8b127426"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fisher", "[", 
  RowBox[{"Counts", ",", "\"\<Species\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.802725496078762*^9, 3.8027256288334293`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"f5627fae-f6cc-4afd-95a2-e87d01b07114"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association["setosa" -> 50, "versicolor" -> 50, "virginica" -> 50], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Integer], 3], "Meta" -> 
     Association["ID" -> 130854976883318], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Integer], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["setosa"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "961fdf1b-f622-48e2-a278-e79843c775a1"][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "961fdf1b-f622-48e2-a278-e79843c775a1"][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["versicolor"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "961fdf1b-f622-48e2-a278-e79843c775a1"][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "961fdf1b-f622-48e2-a278-e79843c775a1"][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["virginica"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "961fdf1b-f622-48e2-a278-e79843c775a1"][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "961fdf1b-f622-48e2-a278-e79843c775a1"][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{161., {50., 56.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{161., {50., 56.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.802725686459299*^9, 3.8042571801179466`*^9, 
  3.805817286424218*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"b799d079-df3a-4aac-b4c7-aa2a95fa523d"]
}, Open  ]],

Cell[BoxData["16"], "Input",
 CellChangeTimes->{{3.806258572720297*^9, 
  3.8062585728436184`*^9}},ExpressionUUID->"272bbaae-8c98-4b0e-8f3e-\
b793f6d3f3b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
    RowBox[{"GroupBy", "[", 
     RowBox[{
      RowBox[{"Key", "[", "\"\<Species\>\"", "]"}], "\[Rule]", 
      RowBox[{"KeyTake", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
         "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], "]"}]}], 
     "]"}], ",", "Mean"}], "]"}], "[", "Fisher", "]"}]], "Input",
 CellChangeTimes->{{3.8058175954763875`*^9, 3.805817612930786*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"264e0969-7edb-4306-a4cd-f2a0a6ada4a9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "setosa" -> Association[
        "SepalLength" -> Quantity[5.005999999999999, "Centimeters"], 
         "SepalWidth" -> Quantity[3.428000000000001, "Centimeters"], 
         "PetalLength" -> Quantity[1.4620000000000002`, "Centimeters"], 
         "PetalWidth" -> Quantity[0.2459999999999999, "Centimeters"]], 
       "versicolor" -> 
       Association[
        "SepalLength" -> Quantity[5.936, "Centimeters"], "SepalWidth" -> 
         Quantity[2.7700000000000005`, "Centimeters"], "PetalLength" -> 
         Quantity[4.26, "Centimeters"], "PetalWidth" -> 
         Quantity[1.3259999999999998`, "Centimeters"]], "virginica" -> 
       Association[
        "SepalLength" -> Quantity[6.587999999999998, "Centimeters"], 
         "SepalWidth" -> Quantity[2.9739999999999998`, "Centimeters"], 
         "PetalLength" -> Quantity[5.552, "Centimeters"], "PetalWidth" -> 
         Quantity[2.026, "Centimeters"]]], "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "SepalLength"} -> 
        1, {All, "SepalWidth"} -> 1, {All, "PetalLength"} -> 
        1, {All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[96.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]]], 
           DirectedInfinity[1], 4, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 3], "Meta" -> 
     Association["ID" -> 130863566818238], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "SepalLength"} -> 
        1, {All, "SepalWidth"} -> 1, {All, "PetalLength"} -> 
        1, {All, "PetalWidth"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[96.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association[
            "SepalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "SepalWidth" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalLength" -> TypeSystem`PackageScope`AtomShape[75], 
             "PetalWidth" -> TypeSystem`PackageScope`AtomShape[75]]], 
           DirectedInfinity[1], 4, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "SepalLength", "SepalWidth", "PetalLength", "PetalWidth"}, {
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]], 
         TypeSystem`Atom[
          Quantity[1, "Centimeters"]]}], 3], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 
     4, "DataRowCount" -> 3, "DataColumnCount" -> 4, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{All, Keys}, 
                "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "SepalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{All, "SepalLength"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "SepalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{All, "SepalWidth"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "PetalLength"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{All, "PetalLength"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "PetalWidth"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{All, "PetalWidth"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["setosa"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.005999999999999`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["setosa"], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.428000000000001`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["setosa"], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.4620000000000002`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["setosa"], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"0.2459999999999999`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["setosa"], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["versicolor"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.936`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["versicolor"], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.7700000000000005`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["versicolor"], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"4.26`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["versicolor"], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.3259999999999998`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["versicolor"], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["virginica"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"6.587999999999998`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["virginica"], 
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.9739999999999998`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["virginica"], 
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.552`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["virginica"], 
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2.026`", "\"cm\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "e41e9091-9a81-4ba5-ace1-1d2aa441dbb5"][{
                 Key["virginica"], 
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{463., {61., 67.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{463., {61., 67.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.805817600719194*^9, 3.8058176143865256`*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"4d944412-737b-46a1-a72a-02c07bd0880d"]
}, Open  ]],

Cell[BoxData["17"], "Input",
 CellChangeTimes->{{3.806258590965244*^9, 
  3.806258591049178*^9}},ExpressionUUID->"c3537d3b-9364-421e-842b-\
e4cd3fab33ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Mean", "]"}], "[", 
  RowBox[{"Fisher", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"2", ";;", "5"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.802724482204093*^9, 3.802724482990157*^9}, {
  3.802724530391574*^9, 3.802724546788765*^9}, {3.8042572130668354`*^9, 
  3.804257213447646*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"e8665366-6285-4961-84b8-0985ca250c51"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "SepalLength" -> Quantity[5.843333333333334, "Centimeters"], 
       "SepalWidth" -> Quantity[3.0573333333333337`, "Centimeters"], 
       "PetalLength" -> Quantity[3.7580000000000005`, "Centimeters"], 
       "PetalWidth" -> Quantity[1.1993333333333331`, "Centimeters"]], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[99.], 
         TypeSystem`PackageScope`AtomShape[75]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "PetalLength", "PetalWidth", "SepalLength", "SepalWidth"]], 
       TypeSystem`Atom[
        Quantity[1, "Centimeters"]], 4], "Meta" -> 
     Association["ID" -> 130872156753026], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[99.], 
         TypeSystem`PackageScope`AtomShape[75]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "PetalLength", "PetalWidth", "SepalLength", "SepalWidth"]], 
       TypeSystem`Atom[
        Quantity[1, "Centimeters"]], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     4, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalLength", 
                  Style[
                  "SepalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["SepalLength"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d9ad7fd1-6dee-47b0-9dbf-5a5f3a0b7c8e"][{
                 Key["SepalLength"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{99., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5.843333333333334`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d9ad7fd1-6dee-47b0-9dbf-5a5f3a0b7c8e"][{
                 Key["SepalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["SepalWidth", 
                  Style[
                  "SepalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["SepalWidth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d9ad7fd1-6dee-47b0-9dbf-5a5f3a0b7c8e"][{
                 Key["SepalWidth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{99., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.0573333333333337`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d9ad7fd1-6dee-47b0-9dbf-5a5f3a0b7c8e"][{
                 Key["SepalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalLength", 
                  Style[
                  "PetalLength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["PetalLength"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d9ad7fd1-6dee-47b0-9dbf-5a5f3a0b7c8e"][{
                 Key["PetalLength"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{99., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3.7580000000000005`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d9ad7fd1-6dee-47b0-9dbf-5a5f3a0b7c8e"][{
                 Key["PetalLength"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PetalWidth", 
                  Style[
                  "PetalWidth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["PetalWidth"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d9ad7fd1-6dee-47b0-9dbf-5a5f3a0b7c8e"][{
                 Key["PetalWidth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{99., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1.1993333333333331`", "\"cm\""}], FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "d9ad7fd1-6dee-47b0-9dbf-5a5f3a0b7c8e"][{
                 Key["PetalWidth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{211., {61., 67.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{211., {61., 67.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8027245473205957`*^9, 3.8027252166735106`*^9, 
  3.804257213815934*^9, 3.8042577206842995`*^9, 3.805817810483593*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"5c34f795-4c53-435f-9d22-4f78d33d6454"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Descriptive Statistics", "Subsection",
 CellChangeTimes->{{3.810841159221978*^9, 3.8108411611419277`*^9}, {
  3.8108412260854864`*^9, 3.8108412301880436`*^9}, {3.8108417116567183`*^9, 
  3.8108417122428913`*^9}, {3.810841851455632*^9, 
  3.8108418523404255`*^9}},ExpressionUUID->"236eeccb-6612-445b-9663-\
df4017cbacd9"],

Cell[BoxData["18"], "Input",
 CellChangeTimes->{{3.8062586032104144`*^9, 
  3.806258603271036*^9}},ExpressionUUID->"12df0dbf-c9b5-4a03-aa19-\
139f5cc9c08e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Stats", "[", "data_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Max:\>\"", ",", 
          RowBox[{"Max", "@", "data"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Min:\>\"", ",", 
          RowBox[{"Min", "@", "data"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Mean:\>\"", ",", 
          RowBox[{"Mean", "@", "data"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Median:\>\"", ",", 
          RowBox[{"Median", "@", "data"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<1st quartile:\>\"", ",", 
          RowBox[{"Quantile", "[", 
           RowBox[{"data", ",", "0.25"}], "]"}]}], "}"}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"#", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<3rd quartile:\>\"", ",", 
          RowBox[{"Quantile", "[", 
           RowBox[{"data", ",", "0.75"}], "]"}]}], "}"}], "]"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "&"}], "[", "Row", "]"}]}]], "Input",
 CellChangeTimes->{{3.80280045229908*^9, 3.8028005417935247`*^9}, {
   3.802890519647003*^9, 3.8028905292850094`*^9}, {3.802970796045663*^9, 
   3.8029708000207148`*^9}, {3.802970833645228*^9, 3.8029708605546875`*^9}, {
   3.8029709618114805`*^9, 3.802971028304093*^9}, {3.8042850630264587`*^9, 
   3.8042851062452307`*^9}, 3.8043425885670166`*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"9f947879-50f9-4a91-9c42-83f1e61414e0"],

Cell[BoxData["19"], "Input",
 CellChangeTimes->{{3.8062586125588503`*^9, 
  3.806258612921243*^9}},ExpressionUUID->"8368c88a-7bd8-41dc-be40-\
c611c1ad157d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2", ",", "#3", ",", "#4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Fisher", "[", 
         RowBox[{"Stats", ",", "#1"}], "]"}], ",", 
        RowBox[{"Fisher", "[", 
         RowBox[{"Stats", ",", "#2"}], "]"}], ",", 
        RowBox[{"Fisher", "[", 
         RowBox[{"Stats", ",", "#3"}], "]"}], ",", 
        RowBox[{"Fisher", "[", 
         RowBox[{"Stats", ",", "#4"}], "]"}]}], "}"}]}], "}"}], "&"}], "[", 
   RowBox[{
   "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
    "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "]"}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.802890140478194*^9, 3.802890423518239*^9}, {
   3.802970936450366*^9, 3.802970944379054*^9}, {3.802971001470039*^9, 
   3.8029710081000814`*^9}, {3.8029710839779434`*^9, 3.8029710876059523`*^9}, 
   3.8033255028559856`*^9, {3.803325560506838*^9, 3.803325612157754*^9}, {
   3.8042573602543063`*^9, 3.804257396828336*^9}, {3.804342607909145*^9, 
   3.804342720618393*^9}, {3.804343932122349*^9, 3.8043440045541463`*^9}, {
   3.8043442782104354`*^9, 3.8043442975045624`*^9}, {3.8058184285529795`*^9, 
   3.8058184362537503`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"2fd82c3a-3fdd-4704-8fb5-cd1970539ec5"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"SepalLength\"\>", "\<\"SepalWidth\"\>", "\<\"PetalLength\"\>", \
"\<\"PetalWidth\"\>"},
    {
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Association["InitialData" -> {{
            Row[{"Max:", 
              Quantity[7.9, "Centimeters"]}]}, {
            Row[{"Min:", 
              Quantity[4.3, "Centimeters"]}]}, {
            Row[{"Mean:", 
              Quantity[5.843333333333334, "Centimeters"]}]}, {
            Row[{"Median:", 
              Quantity[5.8, "Centimeters"]}]}, {
            Row[{"1st quartile:", 
              Quantity[5.1, "Centimeters"]}]}, {
            Row[{"3rd quartile:", 
              Quantity[6.4, "Centimeters"]}]}}, "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
         "InitialType" -> TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> 
         Association["ID" -> 130910811459317], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
         TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 6, 
         "DisplayedColumnCount" -> 1, "DataRowCount" -> 6, "DataColumnCount" -> 
         1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Row[{"Max:", 
                    Quantity[7.9, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "71293eab-2c43-4919-bbd0-a29d38a9a642"][{1, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Min:", 
                    Quantity[4.3, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "71293eab-2c43-4919-bbd0-a29d38a9a642"][{2, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Mean:", 
                    Quantity[5.843333333333334, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "71293eab-2c43-4919-bbd0-a29d38a9a642"][{3, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Median:", 
                    Quantity[5.8, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "71293eab-2c43-4919-bbd0-a29d38a9a642"][{4, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"1st quartile:", 
                    Quantity[5.1, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "71293eab-2c43-4919-bbd0-a29d38a9a642"][{5, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"3rd quartile:", 
                    Quantity[6.4, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "71293eab-2c43-4919-bbd0-a29d38a9a642"][{6, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{154., {108., 114.}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{154., {108., 114.}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>
         Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
          Needs["Dataset`"]; 
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Association["InitialData" -> {{
            Row[{"Max:", 
              Quantity[4.4, "Centimeters"]}]}, {
            Row[{"Min:", 
              Quantity[2., "Centimeters"]}]}, {
            Row[{"Mean:", 
              Quantity[3.0573333333333337`, "Centimeters"]}]}, {
            Row[{"Median:", 
              Quantity[3., "Centimeters"]}]}, {
            Row[{"1st quartile:", 
              Quantity[2.8, "Centimeters"]}]}, {
            Row[{"3rd quartile:", 
              Quantity[3.3, "Centimeters"]}]}}, "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
         "InitialType" -> TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> 
         Association["ID" -> 130915106426613], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
         TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 6, 
         "DisplayedColumnCount" -> 1, "DataRowCount" -> 6, "DataColumnCount" -> 
         1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Row[{"Max:", 
                    Quantity[4.4, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "eb1f53da-216d-41ee-82e2-c5f363a2c935"][{1, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Min:", 
                    Quantity[2., "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "eb1f53da-216d-41ee-82e2-c5f363a2c935"][{2, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Mean:", 
                    Quantity[3.0573333333333337`, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "eb1f53da-216d-41ee-82e2-c5f363a2c935"][{3, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Median:", 
                    Quantity[3., "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "eb1f53da-216d-41ee-82e2-c5f363a2c935"][{4, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"1st quartile:", 
                    Quantity[2.8, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "eb1f53da-216d-41ee-82e2-c5f363a2c935"][{5, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"3rd quartile:", 
                    Quantity[3.3, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "eb1f53da-216d-41ee-82e2-c5f363a2c935"][{6, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{154., {108., 114.}},
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{154., {108., 114.}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>
         Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
          Needs["Dataset`"]; 
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Association["InitialData" -> {{
            Row[{"Max:", 
              Quantity[6.9, "Centimeters"]}]}, {
            Row[{"Min:", 
              Quantity[1., "Centimeters"]}]}, {
            Row[{"Mean:", 
              Quantity[3.7580000000000005`, "Centimeters"]}]}, {
            Row[{"Median:", 
              Quantity[4.35, "Centimeters"]}]}, {
            Row[{"1st quartile:", 
              Quantity[1.6, "Centimeters"]}]}, {
            Row[{"3rd quartile:", 
              Quantity[5.1, "Centimeters"]}]}}, "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
         "InitialType" -> TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> 
         Association["ID" -> 130919401393909], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
         TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 6, 
         "DisplayedColumnCount" -> 1, "DataRowCount" -> 6, "DataColumnCount" -> 
         1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Row[{"Max:", 
                    Quantity[6.9, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "a8bb928b-6ebf-4f55-981c-9ecd770f00eb"][{1, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Min:", 
                    Quantity[1., "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "a8bb928b-6ebf-4f55-981c-9ecd770f00eb"][{2, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Mean:", 
                    Quantity[3.7580000000000005`, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "a8bb928b-6ebf-4f55-981c-9ecd770f00eb"][{3, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Median:", 
                    Quantity[4.35, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "a8bb928b-6ebf-4f55-981c-9ecd770f00eb"][{4, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"1st quartile:", 
                    Quantity[1.6, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "a8bb928b-6ebf-4f55-981c-9ecd770f00eb"][{5, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"3rd quartile:", 
                    Quantity[5.1, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "a8bb928b-6ebf-4f55-981c-9ecd770f00eb"][{6, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{154., {108., 114.}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{154., {108., 114.}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>
         Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
          Needs["Dataset`"]; 
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], 
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Association["InitialData" -> {{
            Row[{"Max:", 
              Quantity[2.5, "Centimeters"]}]}, {
            Row[{"Min:", 
              Quantity[0.1, "Centimeters"]}]}, {
            Row[{"Mean:", 
              Quantity[1.1993333333333331`, "Centimeters"]}]}, {
            Row[{"Median:", 
              Quantity[1.3, "Centimeters"]}]}, {
            Row[{"1st quartile:", 
              Quantity[0.3, "Centimeters"]}]}, {
            Row[{"3rd quartile:", 
              Quantity[1.8, "Centimeters"]}]}}, "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
         "InitialType" -> TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> 
         Association["ID" -> 130923696361205], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
         TypeSystem`Vector[
           TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 6, 
         "DisplayedColumnCount" -> 1, "DataRowCount" -> 6, "DataColumnCount" -> 
         1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   Row[{"Max:", 
                    Quantity[2.5, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "da8902b8-e610-4de8-893f-00aa6199afea"][{1, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Min:", 
                    Quantity[0.1, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "da8902b8-e610-4de8-893f-00aa6199afea"][{2, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Mean:", 
                    Quantity[1.1993333333333331`, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "da8902b8-e610-4de8-893f-00aa6199afea"][{3, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"Median:", 
                    Quantity[1.3, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "da8902b8-e610-4de8-893f-00aa6199afea"][{4, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"1st quartile:", 
                    Quantity[0.3, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "da8902b8-e610-4de8-893f-00aa6199afea"][{5, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Row[{"3rd quartile:", 
                    Quantity[1.8, "Centimeters"]}], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "da8902b8-e610-4de8-893f-00aa6199afea"][{6, 1}, "Item", 
                    False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{154., {108., 114.}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{154., {108., 114.}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>
         Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
          Needs["Dataset`"]; 
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8028902390505333`*^9, 3.8028902966343656`*^9}, 
   3.802890338092102*^9, {3.8028903901984386`*^9, 3.802890424183178*^9}, {
   3.80289052573129*^9, 3.802890533420266*^9}, 3.8029709452974596`*^9, {
   3.802970994391304*^9, 3.8029710315188646`*^9}, 3.8029710891422787`*^9, 
   3.803325615890792*^9, 3.804257398322668*^9, 3.8042577289425898`*^9, 
   3.804285122642002*^9, {3.804342598274968*^9, 3.8043426898128996`*^9}, 
   3.8043427223342156`*^9, 3.8043439334883485`*^9, {3.804343973898164*^9, 
   3.804344005624288*^9}, {3.804344289602991*^9, 3.804344298306701*^9}, 
   3.805818228378651*^9, 3.8058184369236984`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"23618f01-c309-44d7-97b5-806f5a137b87"]
}, Open  ]],

Cell[BoxData["20"], "Input",
 CellChangeTimes->{{3.806258628793667*^9, 
  3.806258630427523*^9}},ExpressionUUID->"50c04017-495c-44a0-b409-\
9d998a65e3ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TabView", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#1", "\[Rule]", 
        RowBox[{"Fisher", "[", 
         RowBox[{"Stats", ",", "#1"}], "]"}]}], ",", 
       RowBox[{"#2", "\[Rule]", 
        RowBox[{"Fisher", "[", 
         RowBox[{"Stats", ",", "#2"}], "]"}]}], ",", 
       RowBox[{"#3", "\[Rule]", 
        RowBox[{"Fisher", "[", 
         RowBox[{"Stats", ",", "#3"}], "]"}]}], ",", 
       RowBox[{"#4", "\[Rule]", 
        RowBox[{"Fisher", "[", 
         RowBox[{"Stats", ",", "#4"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}], "&"}], "[", 
  RowBox[{
  "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
   "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.805818551377185*^9, 3.8058185532981567`*^9}, {
  3.8058186175669756`*^9, 3.805818623848614*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"74bc1528-36b7-47a1-ba42-a11d306861e6"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"SepalLength\"\>"->
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association["InitialData" -> {{
         Row[{"Max:", 
           Quantity[7.9, "Centimeters"]}]}, {
         Row[{"Min:", 
           Quantity[4.3, "Centimeters"]}]}, {
         Row[{"Mean:", 
           Quantity[5.843333333333334, "Centimeters"]}]}, {
         Row[{"Median:", 
           Quantity[5.8, "Centimeters"]}]}, {
         Row[{"1st quartile:", 
           Quantity[5.1, "Centimeters"]}]}, {
         Row[{"3rd quartile:", 
           Quantity[6.4, "Centimeters"]}]}}, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> 
      Association["ID" -> 130996710805424], "RowTarget" -> 20, "ColumnTarget" -> 
      10, "Shape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
      "BaseIndices" -> {}, "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 
      1, "DataRowCount" -> 6, "DataColumnCount" -> 1, "SortPaths" -> {}, 
      "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                Row[{"Max:", 
                  Quantity[7.9, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd75177e-7b44-4f90-a39a-f5eed4f471f8"][{1, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Min:", 
                  Quantity[4.3, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd75177e-7b44-4f90-a39a-f5eed4f471f8"][{2, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Mean:", 
                  Quantity[5.843333333333334, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd75177e-7b44-4f90-a39a-f5eed4f471f8"][{3, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Median:", 
                  Quantity[5.8, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd75177e-7b44-4f90-a39a-f5eed4f471f8"][{4, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"1st quartile:", 
                  Quantity[5.1, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd75177e-7b44-4f90-a39a-f5eed4f471f8"][{5, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"3rd quartile:", 
                  Quantity[6.4, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "cd75177e-7b44-4f90-a39a-f5eed4f471f8"][{6, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
             "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
           Left, Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373],
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
          LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
          ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          If[GeneralUtilities`$DebugMode, 
           Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
             TypeSystem`NestedGrid`PackagePrivate`formatState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{154., {108., 114.}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{154., {108., 114.}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
       Needs["Dataset`"]; 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}, {2,"\<\"SepalWidth\"\>"->
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association["InitialData" -> {{
         Row[{"Max:", 
           Quantity[4.4, "Centimeters"]}]}, {
         Row[{"Min:", 
           Quantity[2., "Centimeters"]}]}, {
         Row[{"Mean:", 
           Quantity[3.0573333333333337`, "Centimeters"]}]}, {
         Row[{"Median:", 
           Quantity[3., "Centimeters"]}]}, {
         Row[{"1st quartile:", 
           Quantity[2.8, "Centimeters"]}]}, {
         Row[{"3rd quartile:", 
           Quantity[3.3, "Centimeters"]}]}}, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> 
      Association["ID" -> 131001005772720], "RowTarget" -> 20, "ColumnTarget" -> 
      10, "Shape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
      "BaseIndices" -> {}, "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 
      1, "DataRowCount" -> 6, "DataColumnCount" -> 1, "SortPaths" -> {}, 
      "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                Row[{"Max:", 
                  Quantity[4.4, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9c31c4af-587a-424a-9b64-b9174d7db316"][{1, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Min:", 
                  Quantity[2., "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9c31c4af-587a-424a-9b64-b9174d7db316"][{2, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Mean:", 
                  Quantity[3.0573333333333337`, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9c31c4af-587a-424a-9b64-b9174d7db316"][{3, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Median:", 
                  Quantity[3., "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9c31c4af-587a-424a-9b64-b9174d7db316"][{4, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"1st quartile:", 
                  Quantity[2.8, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9c31c4af-587a-424a-9b64-b9174d7db316"][{5, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"3rd quartile:", 
                  Quantity[3.3, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "9c31c4af-587a-424a-9b64-b9174d7db316"][{6, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
             "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
           Left, Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373],
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
          LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
          ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          If[GeneralUtilities`$DebugMode, 
           Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
             TypeSystem`NestedGrid`PackagePrivate`formatState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{154., {108., 114.}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{154., {108., 114.}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
       Needs["Dataset`"]; 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}, {3,"\<\"PetalLength\"\>"->
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association["InitialData" -> {{
         Row[{"Max:", 
           Quantity[6.9, "Centimeters"]}]}, {
         Row[{"Min:", 
           Quantity[1., "Centimeters"]}]}, {
         Row[{"Mean:", 
           Quantity[3.7580000000000005`, "Centimeters"]}]}, {
         Row[{"Median:", 
           Quantity[4.35, "Centimeters"]}]}, {
         Row[{"1st quartile:", 
           Quantity[1.6, "Centimeters"]}]}, {
         Row[{"3rd quartile:", 
           Quantity[5.1, "Centimeters"]}]}}, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> 
      Association["ID" -> 131005300740016], "RowTarget" -> 20, "ColumnTarget" -> 
      10, "Shape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
      "BaseIndices" -> {}, "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 
      1, "DataRowCount" -> 6, "DataColumnCount" -> 1, "SortPaths" -> {}, 
      "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                Row[{"Max:", 
                  Quantity[6.9, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "7663f974-72c5-42d8-9bab-94724def9ec0"][{1, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Min:", 
                  Quantity[1., "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "7663f974-72c5-42d8-9bab-94724def9ec0"][{2, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Mean:", 
                  Quantity[3.7580000000000005`, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "7663f974-72c5-42d8-9bab-94724def9ec0"][{3, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Median:", 
                  Quantity[4.35, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "7663f974-72c5-42d8-9bab-94724def9ec0"][{4, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"1st quartile:", 
                  Quantity[1.6, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "7663f974-72c5-42d8-9bab-94724def9ec0"][{5, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"3rd quartile:", 
                  Quantity[5.1, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "7663f974-72c5-42d8-9bab-94724def9ec0"][{6, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
             "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
           Left, Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373],
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
          LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
          ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          If[GeneralUtilities`$DebugMode, 
           Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
             TypeSystem`NestedGrid`PackagePrivate`formatState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{154., {108., 114.}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{154., {108., 114.}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
       Needs["Dataset`"]; 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}, {4,"\<\"PetalWidth\"\>"->
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association["InitialData" -> {{
         Row[{"Max:", 
           Quantity[2.5, "Centimeters"]}]}, {
         Row[{"Min:", 
           Quantity[0.1, "Centimeters"]}]}, {
         Row[{"Mean:", 
           Quantity[1.1993333333333331`, "Centimeters"]}]}, {
         Row[{"Median:", 
           Quantity[1.3, "Centimeters"]}]}, {
         Row[{"1st quartile:", 
           Quantity[0.3, "Centimeters"]}]}, {
         Row[{"3rd quartile:", 
           Quantity[1.8, "Centimeters"]}]}}, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], 
      "InitialType" -> TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Meta" -> 
      Association["ID" -> 131009595707313], "RowTarget" -> 20, "ColumnTarget" -> 
      10, "Shape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MatrixShape[6, 1], 6, 1, {All}], "Type" -> 
      TypeSystem`Vector[
        TypeSystem`Vector[TypeSystem`AnyType, 1], 6], "Path" -> {}, 
      "BaseIndices" -> {}, "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 
      1, "DataRowCount" -> 6, "DataColumnCount" -> 1, "SortPaths" -> {}, 
      "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation[
                Row[{"Max:", 
                  Quantity[2.5, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "5790a489-e2fe-4ec0-8fa7-5a2214237f1a"][{1, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Min:", 
                  Quantity[0.1, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "5790a489-e2fe-4ec0-8fa7-5a2214237f1a"][{2, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Mean:", 
                  Quantity[1.1993333333333331`, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "5790a489-e2fe-4ec0-8fa7-5a2214237f1a"][{3, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"Median:", 
                  Quantity[1.3, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "5790a489-e2fe-4ec0-8fa7-5a2214237f1a"][{4, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"1st quartile:", 
                  Quantity[0.3, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "5790a489-e2fe-4ec0-8fa7-5a2214237f1a"][{5, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}, {
             Item[
              Pane[
               Annotation[
                Row[{"3rd quartile:", 
                  Quantity[1.8, "Centimeters"]}], 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                "5790a489-e2fe-4ec0-8fa7-5a2214237f1a"][{6, 1}, "Item", 
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}]}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
             "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
           Left, Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373],
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
          LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
          ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          If[GeneralUtilities`$DebugMode, 
           Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
             TypeSystem`NestedGrid`PackagePrivate`formatState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
            Blank[]] -> "", 
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{154., {108., 114.}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{154., {108., 114.}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
       Needs["Dataset`"]; 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}}, 1,
  ControlPlacement->Left]], "Output",
 CellChangeTimes->{3.8058186246123347`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"8f51204e-3d64-409e-960d-3e0f404e2481"]
}, Open  ]],

Cell[BoxData["21"], "Input",
 CellChangeTimes->{{3.806258645113655*^9, 
  3.806258645174556*^9}},ExpressionUUID->"cc7cf560-4079-4a94-8c10-\
90ca4d04bcc3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Short", "[", 
  RowBox[{"Values", "[", 
   RowBox[{"Nest", "[", 
    RowBox[{"Normal", ",", "Fisher", ",", "2"}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"SLall", ",", "SWall", ",", "PLall", ",", "PWall"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"%", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.802956017305585*^9, 3.802956041665303*^9}, {
  3.802956138841364*^9, 3.8029563219137154`*^9}, {3.8029563958873587`*^9, 
  3.802956477658329*^9}, {3.8029565148577747`*^9, 3.802956586458375*^9}, {
  3.8029571001138105`*^9, 3.8029571156870136`*^9}, {3.802961953389914*^9, 
  3.802961954284624*^9}, {3.8042619416020503`*^9, 3.8042620600080547`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"fe1c9239-b142-4d7e-9d74-1e4177d38da6"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"0.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", 
      TemplateBox[{"4.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"0.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "146", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", 
      TemplateBox[{"6.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"5.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"2.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", 
      TemplateBox[{"5.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.802956392210985*^9, 3.802956398832353*^9}, {
   3.802956433554734*^9, 3.802956477988918*^9}, {3.8029565212734165`*^9, 
   3.8029565869394827`*^9}, {3.802957107523759*^9, 3.8029571253416967`*^9}, {
   3.8029573038558292`*^9, 3.802957365478983*^9}, 3.8029575160819626`*^9, {
   3.8029576302880936`*^9, 3.8029576563234596`*^9}, 3.802957703606699*^9, 
   3.8029579145948553`*^9, 3.802960893272653*^9, 3.802961955493188*^9, 
   3.802962225319666*^9, 3.8029636668501906`*^9, 3.80296939557207*^9, 
   3.8033257967270927`*^9, 3.8042620613704977`*^9, 3.8042854045051565`*^9, 
   3.8043443168945827`*^9, 3.8058187431273727`*^9},
 CellLabel->
  "Out[56]//Short=",ExpressionUUID->"990ac14d-d8a7-4a96-904c-6f05917c2d82"]
}, Open  ]],

Cell[BoxData["22"], "Input",
 CellChangeTimes->{{3.806258649342149*^9, 
  3.806258649415649*^9}},ExpressionUUID->"f29b9927-810a-4842-95b6-\
3422f8d82e97"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "[", "#", "]"}], ",", 
      RowBox[{"Min", "[", "#", "]"}], ",", 
      RowBox[{"Median", "[", "#", "]"}], ",", 
      RowBox[{"Mean", "[", "#", "]"}], ",", 
      RowBox[{"Variance", "[", "#", "]"}], ",", 
      RowBox[{"StandardDeviation", "[", "#", "]"}], ",", 
      RowBox[{"Skewness", "[", "#", "]"}], ",", 
      RowBox[{"Kurtosis", "[", "#", "]"}], ",", 
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", "0.25"}], "]"}], ",", 
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", ".75"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"SLall", ",", "SWall", ",", "PLall", ",", "PWall"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DescriptiveStats", "=", "%"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8029648655653296`*^9, 3.802964973381686*^9}, {
  3.8029691942949467`*^9, 3.8029691951956663`*^9}, {3.802976260853609*^9, 
  3.802976262119239*^9}, {3.802976438937945*^9, 3.8029764405200744`*^9}, {
  3.804262069364909*^9, 3.804262096718048*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"e56dda36-2412-4ef5-bda3-da4795f05375"],

Cell[BoxData["23"], "Input",
 CellChangeTimes->{{3.806258661659645*^9, 
  3.806258661744032*^9}},ExpressionUUID->"42a824cf-85ba-47f2-8ad7-\
756ca38b5951"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TableHeads", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Sepal Length\>\"", ",", "#1", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
          "\"\<Maroon\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Sepal Width\>\"", ",", "#1", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
          "\"\<YellowGreen\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Petal Length\>\"", ",", "#1", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
          "\"\<SteelBlue\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Petal Width\>\"", ",", "#1", ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
          "\"\<Orange\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "&"}], "[", 
    RowBox[{"\"\<Title\>\"", ",", "Italic", ",", "20"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableRows", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Max\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Min\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Median\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Mean\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Variance\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Standard\\n Deviation\>\"", ",", "#1", ",", "#2"}], 
        "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Skewness\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Kurtosis\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<1st quartile\>\"", ",", "#1", ",", "#2"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<3rd quartile\>\"", ",", "#1", ",", "#2"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "&"}], "[", 
    RowBox[{"\"\<Text\>\"", ",", "Italic"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"DescriptiveStats", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"TableHeads", ",", "TableRows"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8029599525543942`*^9, 3.8029600644492664`*^9}, {
   3.8029601006575212`*^9, 3.802960117602453*^9}, {3.8029601830306215`*^9, 
   3.802960227601841*^9}, {3.802960266485263*^9, 3.802960282512355*^9}, {
   3.802960326335165*^9, 3.8029603604476843`*^9}, {3.8029604015034475`*^9, 
   3.802960432980824*^9}, {3.802960845067711*^9, 3.802960887846142*^9}, {
   3.802960920095377*^9, 3.8029609710690346`*^9}, {3.8029610775127287`*^9, 
   3.8029611227151575`*^9}, {3.802961203150498*^9, 3.8029612328246117`*^9}, {
   3.802961264456517*^9, 3.80296129250157*^9}, {3.8029614000345063`*^9, 
   3.8029614558018456`*^9}, {3.802961487249631*^9, 3.802961843731737*^9}, {
   3.8029620559291964`*^9, 3.8029620735088315`*^9}, {3.8029622173228083`*^9, 
   3.80296228524831*^9}, {3.802964273098852*^9, 3.802964315826804*^9}, {
   3.8029643722552476`*^9, 3.802964375417694*^9}, {3.802964443568858*^9, 
   3.802964484755123*^9}, 3.802964526976679*^9, 3.80296494783041*^9, {
   3.80296498358891*^9, 3.8029649892843375`*^9}, 3.802976308882843*^9, {
   3.8029763511231117`*^9, 3.802976407490404*^9}, {3.802976468885933*^9, 
   3.8029769043330135`*^9}, 3.8033259403818293`*^9, {3.8042621136366386`*^9, 
   3.8042621157324457`*^9}, {3.8042621572581286`*^9, 3.8042621840923853`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"4e80f19f-a903-4cc7-bb64-e12efb860bc2"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["\<\"Max\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Min\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Median\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Mean\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Variance\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Standard\\n Deviation\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Skewness\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Kurtosis\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"1st quartile\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm], 
      TagBox[
       StyleBox["\<\"3rd quartile\"\>", "Text",
        StripOnInput->False,
        FontSlant->Italic],
       HoldForm]},
     {
      TagBox[
       StyleBox["\<\"Sepal Length\"\>", "Title",
        StripOnInput->False,
        LineColor->RGBColor[0.5019607843137255, 0, 0],
        FrontFaceColor->RGBColor[0.5019607843137255, 0, 0],
        BackFaceColor->RGBColor[0.5019607843137255, 0, 0],
        GraphicsColor->RGBColor[0.5019607843137255, 0, 0],
        FontSize->20,
        FontSlant->Italic,
        FontColor->RGBColor[0.5019607843137255, 0, 0]],
       HoldForm], 
      TemplateBox[{"7.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"4.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"5.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{
       "5.843333333333334`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"0.6856935123042507`", 
        RowBox[{
          SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
        SuperscriptBox["\"Centimeters\"", "2"]},
       "Quantity"], 
      TemplateBox[{
       "0.828066127977863`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], "0.3117530585022962`", "2.426432051075023`", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"6.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]},
     {
      TagBox[
       StyleBox["\<\"Sepal Width\"\>", "Title",
        StripOnInput->False,
        LineColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
        FrontFaceColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
        BackFaceColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
        GraphicsColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
        FontSize->20,
        FontSlant->Italic,
        FontColor->RGBColor[
         0.6039215686274509, 0.803921568627451, 0.19607843137254902`]],
       HoldForm], 
      TemplateBox[{"4.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"2.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{
       "3.0573333333333337`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"0.189979418344519`", 
        RowBox[{
          SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
        SuperscriptBox["\"Centimeters\"", "2"]},
       "Quantity"], 
      TemplateBox[{
       "0.4358662849366982`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], "0.31576710633893473`", "3.1809763175224672`", 
      TemplateBox[{"2.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"3.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]},
     {
      TagBox[
       StyleBox["\<\"Petal Length\"\>", "Title",
        StripOnInput->False,
        LineColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
        FrontFaceColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
        BackFaceColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
        GraphicsColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
        FontSize->20,
        FontSlant->Italic,
        FontColor->RGBColor[
         0.27450980392156865`, 0.5098039215686274, 0.7058823529411764]],
       HoldForm], 
      TemplateBox[{"6.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"1.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"4.35`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{
       "3.7580000000000005`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"3.116277852348994`", 
        RowBox[{
          SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
        SuperscriptBox["\"Centimeters\"", "2"]},
       "Quantity"], 
      TemplateBox[{
       "1.7652982332594664`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      RowBox[{"-", "0.2721276664567212`"}], "1.6044641136009943`", 
      TemplateBox[{"1.6`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]},
     {
      TagBox[
       StyleBox["\<\"Petal Width\"\>", "Title",
        StripOnInput->False,
        LineColor->RGBColor[1., 0.6470588235294118, 0],
        FrontFaceColor->RGBColor[1., 0.6470588235294118, 0],
        BackFaceColor->RGBColor[1., 0.6470588235294118, 0],
        GraphicsColor->RGBColor[1., 0.6470588235294118, 0],
        FontSize->20,
        FontSlant->Italic,
        FontColor->RGBColor[1., 0.6470588235294118, 0]],
       HoldForm], 
      TemplateBox[{"2.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"0.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"1.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{
       "1.1993333333333331`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"0.581006263982103`", 
        RowBox[{
          SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
        SuperscriptBox["\"Centimeters\"", "2"]},
       "Quantity"], 
      TemplateBox[{
       "0.7622376689603466`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      RowBox[{"-", "0.1019342065655985`"}], "1.6639325947684462`", 
      TemplateBox[{"0.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], 
      TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{
       Style["Sepal Length", "Title", 
        RGBColor[0.5019607843137255, 0, 0], Italic, 20], 
       Style["Sepal Width", "Title", 
        RGBColor[0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
         Italic, 20], 
       Style["Petal Length", "Title", 
        RGBColor[
        0.27450980392156865`, 0.5098039215686274, 0.7058823529411764], Italic,
         20], 
       Style["Petal Width", "Title", 
        RGBColor[1., 0.6470588235294118, 0], Italic, 20]}, {
       Style["Max", "Text", Italic], 
       Style["Min", "Text", Italic], 
       Style["Median", "Text", Italic], 
       Style["Mean", "Text", Italic], 
       Style["Variance", "Text", Italic], 
       Style["Standard\n Deviation", "Text", Italic], 
       Style["Skewness", "Text", Italic], 
       Style["Kurtosis", "Text", Italic], 
       Style["1st quartile", "Text", Italic], 
       Style["3rd quartile", "Text", Italic]}}]]]], "Output",
 CellChangeTimes->{{3.8029766605617723`*^9, 3.8029766932899737`*^9}, 
   3.802976786822689*^9, {3.8029768980676937`*^9, 3.8029769047847247`*^9}, 
   3.8033259409369516`*^9, {3.8042621655636034`*^9, 3.804262192850212*^9}, 
   3.8042861802134857`*^9, 3.8043443237076817`*^9, 3.805818996291977*^9, 
   3.805819147404365*^9},
 CellLabel->
  "Out[66]//TableForm=",ExpressionUUID->"82c3c7c5-1281-4fc3-8dd7-\
12606b767e50"]
}, Open  ]],

Cell[BoxData["24"], "Input",
 CellChangeTimes->{{3.80625867563992*^9, 
  3.806258675741678*^9}},ExpressionUUID->"d7e78a27-b180-428c-b10d-\
6984a2967ffb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Prepend", "[", 
    RowBox[{"DescriptiveStats", ",", "TableRows"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "\[InvisibleSpace]\[InvisibleSpace]", 
     RowBox[{"\"\<   \>\"", ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal Length\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<Maroon\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal Width\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<YellowGreen\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Petal Length\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<SteelBlue\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Petal Width\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<Orange\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "&"}], "[", 
   RowBox[{"\"\<Title\>\"", ",", "Italic", ",", "20"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NewTable", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"%%", ",", "%"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8029651122083426`*^9, 3.8029651942660737`*^9}, {
   3.802965254695537*^9, 3.802965284587471*^9}, {3.802965329648115*^9, 
   3.8029653321385803`*^9}, 3.8033264344970694`*^9, {3.8042623063011637`*^9, 
   3.8042623279964933`*^9}, 3.8058194398963103`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"e89b0308-caa5-43b6-a638-b416e725764b"],

Cell[BoxData["25"], "Input",
 CellChangeTimes->{{3.8062586880245795`*^9, 
  3.806258688096285*^9}},ExpressionUUID->"6c0ee3ce-9ed5-4088-88f8-\
c458466ff63d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"NewTable", ",", "\[IndentingNewLine]", 
   RowBox[{"ItemSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"Scaled", "[", "0.11", "]"}], ",", " ", 
       RowBox[{"Scaled", "[", "0.11", "]"}], ",", 
       RowBox[{"Scaled", "[", "0.11", "]"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "LightGray", "}"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"Dividers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "False", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
        "8", ",", "9", ",", "10", ",", 
        RowBox[{"11", "\[Rule]", "True"}], ",", 
        RowBox[{
         RowBox[{"-", "2"}], "\[Rule]", "Blue"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802965322751028*^9, 3.802965355710763*^9}, {
  3.8029654555932355`*^9, 3.8029655989308968`*^9}, {3.802965695554393*^9, 
  3.8029658856626883`*^9}, {3.8029691475480504`*^9, 3.8029691793495903`*^9}, {
  3.802969211598845*^9, 3.8029692220965576`*^9}, {3.8029717247875676`*^9, 
  3.8029717672769985`*^9}, {3.8029760287964673`*^9, 3.8029760362903385`*^9}, {
  3.804344333510539*^9, 3.8043443558780975`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"803252e4-c093-45cf-bd7e-23c99cdff73f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"   \"\>", 
     StyleBox["\<\"Sepal Length\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[0.5019607843137255, 0, 0],
      FrontFaceColor->RGBColor[0.5019607843137255, 0, 0],
      BackFaceColor->RGBColor[0.5019607843137255, 0, 0],
      GraphicsColor->RGBColor[0.5019607843137255, 0, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[0.5019607843137255, 0, 0]], 
     StyleBox["\<\"Sepal Width\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      FrontFaceColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      BackFaceColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      GraphicsColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`]], 
     StyleBox["\<\"Petal Length\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      FrontFaceColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      BackFaceColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      GraphicsColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764]], 
     StyleBox["\<\"Petal Width\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[1., 0.6470588235294118, 0],
      FrontFaceColor->RGBColor[1., 0.6470588235294118, 0],
      BackFaceColor->RGBColor[1., 0.6470588235294118, 0],
      GraphicsColor->RGBColor[1., 0.6470588235294118, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[1., 0.6470588235294118, 0]]},
    {
     StyleBox["\<\"Max\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"7.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"6.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Min\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"4.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"0.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Median\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.35`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Mean\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{
      "5.843333333333334`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "3.0573333333333337`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "3.7580000000000005`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "1.1993333333333331`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Variance\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"0.6856935123042507`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.189979418344519`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"3.116277852348994`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.581006263982103`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"]},
    {
     StyleBox["\<\"Standard\\n Deviation\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{
      "0.828066127977863`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.4358662849366982`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "1.7652982332594664`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.7622376689603466`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Skewness\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], "0.3117530585022962`", "0.31576710633893473`", 
     RowBox[{"-", "0.2721276664567212`"}], 
     RowBox[{"-", "0.1019342065655985`"}]},
    {
     StyleBox["\<\"Kurtosis\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], "2.426432051075023`", "3.1809763175224672`", 
     "1.6044641136009943`", "1.6639325947684462`"},
    {
     StyleBox["\<\"1st quartile\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.6`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"0.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"3rd quartile\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"6.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.85]}, "Rows" -> {{None}}},
   GridBoxDividers->{
    "Columns" -> {False}, 
     "Rows" -> {
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 -> True, -2 -> RGBColor[0, 0, 1]}},
   GridBoxItemSize->{"Columns" -> {None, 
       Scaled[0.11], 
       Scaled[0.11], 
       Scaled[0.11]}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8043443475611057`*^9, 3.804344356410287*^9}, 
   3.8058194823066435`*^9, 3.8058195247110357`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"ab4986c0-fa5f-40d9-8876-cef78fb6e857"]
}, Open  ]],

Cell[BoxData["26"], "Input",
 CellChangeTimes->{{3.8062587028146925`*^9, 
  3.8062587030097275`*^9}},ExpressionUUID->"113e11c5-9130-4866-bf1a-\
32c673aebcc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Shallow", "[", 
  RowBox[{
   RowBox[{"Values", "[", 
    RowBox[{"Nest", "[", 
     RowBox[{"Normal", ",", "Fisher", ",", "2"}], "]"}], "]"}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8029695679818764`*^9, 3.802969594569601*^9}, {
  3.80296978027293*^9, 3.8029698463273225`*^9}, {3.802970448006213*^9, 
  3.80297050781057*^9}, {3.8029706810742335`*^9, 3.8029706820949802`*^9}, {
  3.802972093599496*^9, 3.8029721585469356`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"79ba8383-04cd-4430-a7aa-753cd1a11bb6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftSkeleton]", "150", "\[RightSkeleton]"}], "}"}]], "Output",
 CellChangeTimes->{{3.8029697829483156`*^9, 3.8029698152684298`*^9}, 
   3.8029698470377383`*^9, 3.802970227951152*^9, {3.802970362542513*^9, 
   3.802970373214238*^9}, {3.802970455793073*^9, 3.8029705213758926`*^9}, {
   3.802970682804738*^9, 3.8029707480185256`*^9}, {3.8029715717031918`*^9, 
   3.8029715777443066`*^9}, {3.8029716584921064`*^9, 3.8029716803671827`*^9}, 
   3.8029717877559857`*^9, 3.802972099143239*^9, {3.8029721596307373`*^9, 
   3.8029721716170807`*^9}, 3.8029758873495607`*^9, 3.803326625696571*^9, {
   3.804262436769086*^9, 3.804262484390749*^9}, 3.8042862539659863`*^9, 
   3.8043443639127183`*^9, 3.80581972896624*^9},
 CellLabel->
  "Out[79]//Shallow=",ExpressionUUID->"8fdcf120-28a9-49b0-b660-666eaba6918a"]
}, Open  ]],

Cell[BoxData["27"], "Input",
 CellChangeTimes->{{3.806258712355097*^9, 
  3.806258712621866*^9}},ExpressionUUID->"85c670b4-f765-4067-8775-\
915280f590f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Shallow", "[", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<versicolor\>\"", ",", "__"}], "}"}]}], "]"}], ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"SLVersi", ",", "SWVersi", ",", "PLVersi", ",", "PWVersi"}], 
    "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"%", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8029715764768896`*^9, {3.8029716406594315`*^9, 3.8029716773258066`*^9}, {
   3.8029717830529165`*^9, 3.80297178340368*^9}, {3.8029719040724*^9, 
   3.8029719050448875`*^9}, {3.802972166205546*^9, 3.8029721694180155`*^9}, {
   3.8029756804194794`*^9, 3.802975680812416*^9}, {3.802975727059016*^9, 
   3.802975730059492*^9}, {3.8029757970103793`*^9, 3.802975800356848*^9}, {
   3.802975872048126*^9, 3.8029758749079876`*^9}, {3.8042623652482133`*^9, 
   3.8042624825803347`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"c58c803d-b776-4619-b9c9-d74e1fcb029b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftSkeleton]", "50", "\[RightSkeleton]"}], "}"}]], "Output",
 CellChangeTimes->{{3.80297216992093*^9, 3.802972172501172*^9}, {
   3.802975877051069*^9, 3.8029758885138226`*^9}, 3.8033266572065644`*^9, {
   3.804262430521675*^9, 3.804262486247176*^9}, {3.8042862263101177`*^9, 
   3.8042862562181396`*^9}, 3.804344367089601*^9, 3.805819833375368*^9},
 CellLabel->
  "Out[80]//Shallow=",ExpressionUUID->"68bb7b7e-1570-42a7-a193-ca18a4a3e7ac"]
}, Open  ]],

Cell[BoxData["28"], "Input",
 CellChangeTimes->{{3.806258715080905*^9, 
  3.8062587157374024`*^9}},ExpressionUUID->"4c349d8a-d872-4f7f-9fc8-\
7260c62d98ae"],

Cell[BoxData[{
 RowBox[{"TableRows", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "[", "#", "]"}], ",", 
      RowBox[{"Min", "[", "#", "]"}], ",", 
      RowBox[{"Median", "[", "#", "]"}], ",", 
      RowBox[{"Mean", "[", "#", "]"}], ",", 
      RowBox[{"Variance", "[", "#", "]"}], ",", 
      RowBox[{"StandardDeviation", "[", "#", "]"}], ",", 
      RowBox[{"Skewness", "[", "#", "]"}], ",", 
      RowBox[{"Kurtosis", "[", "#", "]"}], ",", 
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", "0.25"}], "]"}], ",", 
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", ".75"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"SLVersi", ",", "SWVersi", ",", "PLVersi", ",", "PWVersi"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DescriptiveStats2", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"%", ",", "%%"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", "DescriptiveStats2", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "{", "\[InvisibleSpace]\[InvisibleSpace]\[InvisibleSpace]\[InvisibleSpace]\
", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Versicolor\>\"", ",", "\"\<Text\>\"", ",", "Red", ",", "Italic", 
        ",", "20"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal Length\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<Maroon\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Sepal Width\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<YellowGreen\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Petal Length\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<SteelBlue\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Petal Width\>\"", ",", "#1", ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", 
         "\"\<Orange\>\"", "]"}], ",", "#2", ",", "#3"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "&"}], "[", 
   RowBox[{"\"\<Title\>\"", ",", "Italic", ",", "20"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NewTable2", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"%%", ",", "%"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8029714597092657`*^9, 3.8029714798974*^9}, {
   3.8029717083344383`*^9, 3.8029717112095947`*^9}, {3.802971876603228*^9, 
   3.8029718769902353`*^9}, {3.802971912738931*^9, 3.8029719275968475`*^9}, {
   3.802972198177375*^9, 3.802972220001657*^9}, {3.8029723014311*^9, 
   3.802972332183939*^9}, {3.8029724406615057`*^9, 3.802972507203459*^9}, {
   3.8029727684174957`*^9, 3.802972794760192*^9}, {3.8029758551695623`*^9, 
   3.8029758601475334`*^9}, {3.803326783674757*^9, 3.8033268187749925`*^9}, {
   3.804262548033396*^9, 3.8042625660055065`*^9}, {3.804262609746809*^9, 
   3.8042626193087234`*^9}, {3.804286287449971*^9, 3.804286354712946*^9}, 
   3.80428639214324*^9, {3.8042864541774454`*^9, 3.804286459388494*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"207dc2c1-a361-4d7b-931d-1015e3fa65ab"],

Cell[BoxData["29"], "Input",
 CellChangeTimes->{{3.806258751874607*^9, 
  3.80625875223631*^9}},ExpressionUUID->"caadc346-5d52-4aa3-9708-\
b71414277335"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"NewTable2", "\[IndentingNewLine]", ",", 
   RowBox[{"ItemSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"Scaled", "[", "0.11", "]"}], ",", " ", 
       RowBox[{"Scaled", "[", "0.11", "]"}], ",", 
       RowBox[{"Scaled", "[", "0.11", "]"}]}], "}"}], "}"}]}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "LightGray", "}"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"Dividers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "False", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
        "8", ",", "9", ",", "10", ",", 
        RowBox[{"11", "\[Rule]", "True"}], ",", 
        RowBox[{
         RowBox[{"-", "2"}], "\[Rule]", "Blue"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8029722301448402`*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"c4442004-c9e9-4cac-87f5-8146921a986a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Versicolor\"\>", "Text",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Sepal Length\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[0.5019607843137255, 0, 0],
      FrontFaceColor->RGBColor[0.5019607843137255, 0, 0],
      BackFaceColor->RGBColor[0.5019607843137255, 0, 0],
      GraphicsColor->RGBColor[0.5019607843137255, 0, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[0.5019607843137255, 0, 0]], 
     StyleBox["\<\"Sepal Width\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      FrontFaceColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      BackFaceColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      GraphicsColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[
       0.6039215686274509, 0.803921568627451, 0.19607843137254902`]], 
     StyleBox["\<\"Petal Length\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      FrontFaceColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      BackFaceColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      GraphicsColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[
       0.27450980392156865`, 0.5098039215686274, 0.7058823529411764]], 
     StyleBox["\<\"Petal Width\"\>", "Title",
      StripOnInput->False,
      LineColor->RGBColor[1., 0.6470588235294118, 0],
      FrontFaceColor->RGBColor[1., 0.6470588235294118, 0],
      BackFaceColor->RGBColor[1., 0.6470588235294118, 0],
      GraphicsColor->RGBColor[1., 0.6470588235294118, 0],
      FontSize->20,
      FontSlant->Italic,
      FontColor->RGBColor[1., 0.6470588235294118, 0]]},
    {
     StyleBox["\<\"Max\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"7.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Min\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"4.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Median\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.35`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Mean\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.936`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "2.7700000000000005`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.26`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "1.3259999999999998`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Variance\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"0.2664326530612245`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.09846938775510206`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.22081632653061228`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"], 
     TemplateBox[{"0.03910612244897959`", 
       RowBox[{
         SuperscriptBox["\"cm\"", "2"]}], "centimeters squared", 
       SuperscriptBox["\"Centimeters\"", "2"]},
      "Quantity"]},
    {
     StyleBox["\<\"Standard\\n Deviation\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{
      "0.5161711470638634`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.3137983233784114`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.46991097723995795`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{
      "0.19775268000454405`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"Skewness\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], "0.10218956951840928`", 
     RowBox[{"-", "0.35186749654017807`"}], 
     RowBox[{"-", "0.5881586743962581`"}], 
     RowBox[{"-", "0.030236304298168863`"}]},
    {
     StyleBox["\<\"Kurtosis\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], "2.4011726592327167`", "2.551728100083224`", 
     "2.925598176854661`", "2.512167412975451`"},
    {
     StyleBox["\<\"1st quartile\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"5.6`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"2.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]},
    {
     StyleBox["\<\"3rd quartile\"\>", "Text",
      StripOnInput->False,
      FontSlant->Italic], 
     TemplateBox[{"6.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"4.6`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"], 
     TemplateBox[{"1.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
      "Quantity"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[0.85]}, "Rows" -> {{None}}},
   GridBoxDividers->{
    "Columns" -> {False}, 
     "Rows" -> {
      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 -> True, -2 -> RGBColor[0, 0, 1]}},
   GridBoxItemSize->{"Columns" -> {None, 
       Scaled[0.11], 
       Scaled[0.11], 
       Scaled[0.11]}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8029722309364176`*^9, 3.8029723354777517`*^9, {3.802972444147067*^9, 
   3.802972503050928*^9}, {3.802972779497594*^9, 3.8029727918500805`*^9}, 
   3.8029758484572997`*^9, 3.80297589137829*^9, 3.803326909944625*^9, 
   3.8042625736647644`*^9, 3.8042864619649334`*^9, 3.8058199232407246`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"51f682b8-9efc-478f-9c42-84f664537a26"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Dataset Visualization", "Subsection",
 CellChangeTimes->{{3.810841738277932*^9, 
  3.810841741852247*^9}},ExpressionUUID->"6c27b176-50e0-4f28-9c1e-\
848ee5a922f3"],

Cell[BoxData["30"], "Input",
 CellChangeTimes->{{3.806258768662106*^9, 
  3.806258768823439*^9}},ExpressionUUID->"e7b905d9-6544-4af2-a89d-\
0d647a5ed125"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fisher", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"DistributionChart", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<PetalLength cm\>\""}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], "&"}], ",", 
   "\"\<PetalLength\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8028919207688932`*^9, 3.802892080870163*^9}, {
  3.8028921900385647`*^9, 3.8028922103358583`*^9}, {3.802892923301176*^9, 
  3.8028929351019063`*^9}, {3.802893163222923*^9, 3.8028932188406134`*^9}, {
  3.8028932631697626`*^9, 3.802893279536128*^9}, {3.802894121834049*^9, 
  3.8028941221993837`*^9}, {3.805821444060151*^9, 3.805821475053529*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"cae67db9-d37e-43cb-87db-5c48a8545e3e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["setosa" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-0.19605693430634064`, 0.955}, {2.1960569343063403`, 
            1.9449999999999998`}}]}, {
           Directive[
            EdgeForm[
             Directive[
              Opacity[0.7]]], 
            RGBColor[
            0.798413061722744, 0.824719615472648, 0.968322270542458]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Opacity[0.7]]], 
              RGBColor[
              0.798413061722744, 0.824719615472648, 0.968322270542458]], {{
               Directive[
                EdgeForm[
                 Directive[
                  Opacity[0.7]]], 
                RGBColor[
                0.798413061722744, 0.824719615472648, 0.968322270542458]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GeometricTransformation[
                  Polygon[CompressedData["
1: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
+2ohN5qpJ5t+o4/9ifsVWBqk33mHpZ4sZVH7y6GvKmDoMvfQe0knHFo2UaTG
VmDlkS2tSsbrRFSa/riyjxX4veVOb99UrZB5lvi1yKnAoNovQ8zmacXL8T+U
Q4sq8PphuxCfnxoxoNb78Yurap6X9THNsjUa8SBCunrQqBIh83MiQ1VqYbs9
THWzSSWSlndyCNirFrf6+k+Ia1OJgJXmectM1KJ9kee1wq6VGPtlUW2r89XC
7/be8kYDK/Fs9cqZf9tXCwvX9Y79RlXi0dPket/CqoRX60XXZ02uRLdz+weY
yKqE6ZdJlTvmVcLfZWKfvSmV4tjZ4ZOvLK+E28WBVmNcKkUtxx43Xm+uxKrX
Y3u4qCrE3jptqn/trUSdFpYhn49ViKrXDabWPVEJ1SnrZjfaVgi3XZqb3S5W
wj3gVpeY8Jr5MqBQPSmwEsY7WjsNnVwzX0q+Om0Kq8Qb8b151Z8ykXc34fa5
l5W4nGRupn+oTDgve6l9GlNzv87rP9pblYmvVsHTv6ZV4oWjNOHtK5WYlekb
pMuuub+/bcdumq8SqeeO63UorETf+PEXxqtLheOUnTPtKyuR3OZj01F+pSLG
ZHXwytpVCL9623eWKBWj3s01ONm4CqXd7pXvzVGKiL0Os8NaVyEyrW/UoyNK
YTd4cMiHLlVoez1rUlE3pXhU2qVWef8qXNvaYlbHVIXoGdpibsuRVdhlPlXp
uF0hglYahw2bVAXz8BZznNspRMeOlbWd51Yhd+v8x9PiSoR/1p95h5ZV4bzp
euMWW0pES58v929tqsKKpXcbB7YpEeenxdSJ31OFoZrnA/Ni5aKR6dMFRR5V
uChmnk12k4sTMbceNr5QhZ62T5ST2suF0cELxv2vV2HG+H+mgTV65cCwo4tm
h1bhbk6BzqOySKjLtz7e+aIKO53NbnadUSTcHyyrdzW6CsHjLhvPvV8oFGtm
Or/5UIU+N35oixsUinXW9k9yv9d83r+sf5GrCsSfH/0bGBdUYdUp+6sh0f/E
ksudXG0rqmCibN7veMd/Imtms2eTa1UjKb2LeuD+v2Ju49oNNzeqRoPeJasv
fMsXafGlS863qsb0Ee76Z+zyxeQjv54/s6nGwNxkqybn/og4WVqjb/2qYd3W
PttU/luMqY5cpjeiGs3qrR+yx+G3kB4/fNnBsRpepurWywLzxJAN15uMnVON
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
el8A/L4AvU8Afp+A3jcAv2/wP99H+D/hZcdJ
                   "]], {{{0.07789340905498204, 0.}, {0., -1.}}, {1., 0.}}], {
                 "Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 1.9}, {
                    Style["75%", Bold], 1.6}, {
                    Style["median", Bold], 1.5}, {
                    Style["25%", Bold], 1.4}, {
                    Style["min", Bold], 1.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {
                 FontFamily -> 
                  "Times"}]]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, {}}, \
{}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.8039430656936596, 1.}, AxesStyle -> Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], 
          FrameTicks -> {{Automatic, Automatic}, {{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}}, GridLines -> Automatic, GridLinesStyle -> 
          Automatic, LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
          "PetalLength cm", PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {{{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}, Automatic}}], "versicolor" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-0.19605693430634064`, 2.895}, {2.1960569343063403`, 
            5.205}}]}, {
           Directive[
            EdgeForm[
             Directive[
              Opacity[0.7]]], 
            RGBColor[
            0.798413061722744, 0.824719615472648, 0.968322270542458]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Opacity[0.7]]], 
              RGBColor[
              0.798413061722744, 0.824719615472648, 0.968322270542458]], {{
               Directive[
                EdgeForm[
                 Directive[
                  Opacity[0.7]]], 
                RGBColor[
                0.798413061722744, 0.824719615472648, 0.968322270542458]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GeometricTransformation[
                  Polygon[CompressedData["
1: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
Kmq8Ovox+N+elRr9zoQiDrj+079OCjRJq9992x8T0rV68eWJcwpcL0s5Mc7U
lIytb62efjQFBupsqtPMypT2uu3Z2L80BTLrdpv3qa0p+W26Z3Wr6xOY27Ei
7a69KaU3NN1gsfUJ/Bp8ssfOYaZkMEXvWGDWE9g1ZfQpV3dTWrrG+NHp9k+h
8XJ9/RbzTMmqdq0ZPlueQtju6PmVq01p6vCkITvznoJDsHcG7TClOkurT++0
ToWMGJte/kdNqfzFKR9ySYVZzzKD3C+akst8o7uGm1Ph+9sdBq2jTel5lEv0
/tupsL02eFc9NKVjB0zSt31OhYYNK5/FvzSlxx02/KtplwZX7ELs95Wb0rf9
E69N9kwDcHI/M+WnKTWd5N5i54U0SPOwMGpnZEbj1MHTYt+lwYxV8Qt+1jOj
v0le5206p8O3vSsyE1uZkf+b14eerE0Hv9C2fQJ6mFHqqFbp+Q/ToT69Oevh
aEbNPCefXdYgAy69OGDc0dWMnGc/bB3knQF9Pg5Z9GeOGV3pa/1xSWIGPNX/
8+LhCjNaP7T8+u+mz8CjcXjfQD8zWrixVryDzzOo7DozeGagGXm89XZwKnoG
W0bUM7ULMaPCkMtjNcOeQ91ZjxdXR5rRluH1fx65+RwurN348nFize8b5Z39
tFkm2Ad06Xc004y6t/jcO/hgJqRcKjs/p8SM6hr+zq9t8gKmxh8361plRuPX
TTZJ9X0Bn1+5LNXVN6eKCos1ZdUvYNOXOtlPteY03W7F5hYbskBjfNvhhK05
mY240WhqrZdwvum/oV5dzWm24bGW07e+hB49m1r0GGROlgP0l34zewWPXJ4v
0xtX83qSYn5e4CuYNHd7TvpMc3Lo6ZhZ2CwbPmzoMyBoqTktWRA/M+ZaNmwM
/Hzh383m1MoStc0cckAVFqywDzCngkmqkylpOXAuceIKw3Pm1Lv91RzvGa+h
W65Z7vMb5hRQPHR81LfX8OBb7MCz8eZ0ru7AW+O25YKb2fJLCzNq/r9fiMf3
Bm/gXfM2qr6F5lR1s9NnxytvYH3v3JUmleakXdTi3BrrPFCM3f8mS9eCRk7/
cu/FnDw4M2/w4PMqCwq9EPPNPywPuvj+urzExoKGu9Was6oqDxKPXlU72FnQ
QGVQ1oLe+eB6ffpq8/4W1NfNcP5wn3yoeGiZnz3Kgl7bTrhVkZAPa/MfDbng
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
TefOWJBWGg775+CLOwZa8p6QYmZVEAZuS+rvPGOhJbshaWYdDa9C8w1L+m6v
q6WhCrQ74XAZ3u1I+bzAWksB7q3zm/pfhMhDLYPHt9SSa5PIQ4vfh8L6Mz6u
fTpqyehz7+q+U0PA8Wq2SfPuWlp6YLblP4XBoIjuisagpXqf6oVWrDwHr+7v
Wfx5sJZiJh8foNPkLJxJK7fNctZSry+p79plnYb5rwe8vDdeS3M+fi/5HBQE
XcpP7AqeoqVCbXQKVZ6Ev1+/w67ZWhqSO8He5P5xSNQZXbnYu+b9DK45ZEYc
hb2ml89PXK6lHsmxYR3iDoNrPX23fuu1ZBq96nXDd4fApvk0s5Zbaz5fl32B
Qf8chIqO0WTmr6VhQz5YxOw7ABH2mqVfD2rpk02PVC+T/bB2iHfL7BNa0hoN
uRxyYi8MHvPgVWywlvasHz481t8fzKfa+Ide0dK50cr9Jea7IMtrrcOemzWf
H3DI9ujtELQ88+uyu1qa3GLUV6s9fuC5qVPopPtaejKiXZszO7aAnf8O9wEp
Wlr7fcqkJpd84feRIvM2z7X0dqmJW8gHH0gI7huneK0l4dm7rx1e9r3o/7/m
n0f5eX4/lPfj34fy+/h6UK6HrxflevnzoHwe/rwon5fvB8r94PuFcr/4fqLc
T77fKPebvw+U74O/L5Tvi79PlO+Tv2+U75vXA8p64PWCsl54PaGsJ15vKOuN
1yPKeuT1irJeeT2jrGde7yjrnZ8HlOeBnxeU54WfJ5TniZ83lOeNn0eU55Gf
V5TnlZ9nlOeZn3eU5533A5T9gPcLlP2C9xOU/YT3G5T9hvcjlP2I9yuU/Yr3
M5T9jPc7lP2O90OU/ZD3S5T9kvdTlP2U91uU/Zb3Y5T9mPdrlP2a93OU/Zz3
e5T9ns8DlPOAzwuU84LPE5TzhM8blPOGzyOU84jPK5Tzis8zlPOMzzuU847P
Q5TzkM9LlPOSz1OU85TPW5Tzls9jlPOYz2uU85rPc5TznM97lPOe8wBKHuC8
gJIXOE+g5AnOGyh5g/MISh7hvIKSVzjPoOQZzjsoeYfzEEoe4ryEkpc4T6Hk
Kc5bKHmL8xhKHuO8hpLXOM+h5DnOeyh5j/MgSh7kvIiSFzlPouRJzpsoeZPz
KEoe5byKklc5z6LkWc67KHmX8zBKHua8jJKXOU+j5GnO2yh5m/M4Sh7nvI6S
1znPo+R5zvsoeZ/nAZR5gOcFlHmB5wmUeYLnDZR5g+cRlHmE5xWUeYXnGZR5
hucdlHmH5yGUeYjnJZR5iecplHmK5y2UeYvnMZR5jOc1lHmN5zmUeY7nPZR5
j+dBlHmQ50WUeZHnSZR5kudNlHmT51GUeZTnVZR5ledZlHmW512UeZfnYZR5
mOdllHmZ52mUeZrnbZR5m+dxlHmc53WUeZ3neZR5nud9lHmfeQAKD2BegMIL
mCeg8ATmDSi8gXkECo9gXoHCK5hnoPAM5h0ovIN5CAoPYV6CwkuYp6DwFOYt
KLyFeQwKj2Feg8JrmOeg8BzmPSi8h3kQCg9iXoTCi5gnofAk5k0ovIl5FAqP
Yl6FwquYZ6HwLOZdKLyLeRgKD2NehsLLmKeh8DTmbSi8jXkcCo9jXofC65jn
ofA85n0ovI95IAoPZF6IwguZJ6LwROaNKLyReSQKj2ReicIrmWei8EzmnSi8
k3koCg9lXorCS5mnovBU5q0ovJV5LAqPZV6LwmuZ56LwXOa9KLyXeTAKD2Ze
jMKLmSej8GTmzSi8mXk0Co9mXo3Cq5lno/Bs5t0ovJt5OAoPZ16OwsuZp6Pw
dObtKLydeTwKj2dej8Lrmeej8Hzm/Si8n/sAlD6A+wKUvoD7BJQ+gfsGlL6B
+wiUPoL7CpS+gvsMlD6D+w6UvoP7EJQ+hPsSlL6E+xSUPoX7FpS+hfsYlD6G
+xqUvob7HJQ+h/selL6H+yCUPoj7IpS+iPsklD6J+yaUvon7KJQ+ivsqlL6K
+yyUPov7LpS+i/swlD6M+zKUvoz7NJQ+jfs2lL6N+ziUPo77OpS+jvs8lD6P
+z6Uvo/7QJQ+kPtClL6Q+0SUPpH7RpS+kftIlD6S+0qUvpL7TJQ+k/tOlL6T
+1CUPpT7UpS+lPtUlD6V+1aUvpX7WJQ+lvtalL6W+1yUPpf7XpS+l/tglD6Y
+2KUvpj7ZJQ+mftmlL6Z+2iUPpr7apS+mvtslD6b+26Uvpv7cJQ+nPtylL6c
+3SUPp37dpS+nft4lD6e+3qUvp77fJQ+n/t+lL6ffQAUH4B9ARRfgH0CFJ+A
fQMU34B9BBQfgX0FFF+BfQYUn4F9BxTfgX0IFB+CfQkUX4J9ChSfgn0LFN+C
fQwUH4N9DRRfg30OFJ+DfQ8U34N9EBQfhH0RFF+EfRIUn4R9ExTfhH0UFB+F
fRUUX4V9FhSfhX0XFN+FfRgUH4Z9GRRfhn0aFJ+GfRsU34Z9HBQfh30dFF+H
fR4Un4d9HxTfh30gFB+IfSEUX4h9IhSfiH0jFN+IfSQUH4l9JRRfiX0mFJ+J
fScU34l9KBQfin0pFF+KfSoUn4p9KxTfin0sFB+LfS0UX4t9LhSfi30vFN+L
fTAUH4x9MRRfjH0yFJ+MfTMU34x9NBQfjX01FF+NfTYUn419NxTfjX04FB+O
fTkUX459OhSfjn07FN+OfTwUH499PRRfj30+FJ+PfT8U3499QBQfkH1BFF+Q
fUIUn5B9QxTfkH1EFB+RfUUUX5F9RhSfkX1HFN+RfUgUH5J9SRRfkn1KFJ+S
fUsU35J9TBQfk31NFF+TfU4Un5N9TxTfk31QFB+UfVEUX5R9UhSflH1TFN+U
fVQUH5V9VRRflX1WFJ+VfVcU35V9WBQfln1ZFF+WfVoUn5Z9WxTfln1cFB+X
fV0UX5d9XhSfl31fFN+XfWAUH5h9YRRfmH1iFJ+YfWMU35h9ZBQfmX1lFF+Z
fWYUn5l9ZxTfmX1oFB+afWkUX5p9ahSfmn1rFN+afWwUH/v/+tr/A3la3tA=

                   "]], {{{0.23626894130706225`, 0.}, {0., -1.}}, {1., 
                   0.}}], {"Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 5.1}, {
                    Style["75%", Bold], 4.6}, {
                    Style["median", Bold], 4.3}, {
                    Style["25%", Bold], 4.}, {
                    Style["min", Bold], 3.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {
                 FontFamily -> 
                  "Times"}]]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, {}}, \
{}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.8039430656936596, 3.}, AxesStyle -> Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], 
          FrameTicks -> {{Automatic, Automatic}, {{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}}, GridLines -> Automatic, GridLinesStyle -> 
          Automatic, LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
          "PetalLength cm", PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {{{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}, Automatic}}], "virginica" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-0.19605693430634064`, 4.38}, {2.1960569343063403`, 
            7.0200000000000005`}}]}, {
           Directive[
            EdgeForm[
             Directive[
              Opacity[0.7]]], 
            RGBColor[
            0.798413061722744, 0.824719615472648, 0.968322270542458]], {{}, {
             Directive[
              EdgeForm[
               Directive[
                Opacity[0.7]]], 
              RGBColor[
              0.798413061722744, 0.824719615472648, 0.968322270542458]], {{
               Directive[
                EdgeForm[
                 Directive[
                  Opacity[0.7]]], 
                RGBColor[
                0.798413061722744, 0.824719615472648, 0.968322270542458]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GeometricTransformation[
                  Polygon[CompressedData["
1:eJxlmndcjn349922jLtrrzJCdjYZd4eorNvIllUkZMsemWUryipCyV6llJHj
aCkhTTJTXbI3Gbfx9Lx+x/H743n8watXubqu8/yex3h/3g0mzh4yuWKFChWy
yv/6v//KH62im3eusyW55FZ44aZaDqbE7KLWgyzJpt8IRfEUX6g/d+roLaMs
SWO1o7L/3FVg2+BP1nMPS5q7rk5E1+TV0CJ7Zx/n6ZYERXvrFjZbC21Wt6RD
8y3p2eWEaOcj66BT2+TOv1dY0un2X6N6dvGHbkWjz7qtt6RHvwdGnypZDz22
v7eNC7Qk6+mXcsYe2QgujuvDVCGWNGHB3lX2azZD/w/W2jkRlrSqXVxJs8Vb
YfChmK03T1nSqHcH3F5tCIARrv2rNLtgSVjZryjhfiCM+at4uR9a0tIhLYM9
/2wH96jFn4vSLemfgkC1uV0QeHn8PcMhx5IaDJvhf2lBMExXHCkJeWBJ3Xza
LvNO3wlzEruP+Wq2pLT/CvYsa7EbFs7NzRn61pLuvX/577IDe2BZA+9+575a
0pa9jTb9ahQCq7IrJNX6S0E/MztPjLgSCv6rd3eZZqGg6OnhXsop+2FzW7uo
VJWCqnxrDU8bHYDAopSmNtYKmrL3bfNZyw7Cru1jDvraKij0fJeWD2cdglDH
j7oHrRVk98bjiM3McDj4YUNA5y4K2rbv49HTCyMg8lC9asE9FfRxVFTEu82H
4aTrBd/3/RX0+2dN8jgdCef+GlD273AFJbZrZlr34AjERpXMPD5eQVa3xv71
WHsMLnssfVplqoLmHSjsV8n9OJBCMW7iXAW9XRQ3bGPcCbiWeDTv6lIFXXwP
OyvWPQU35jr8a1qnoH9vdPhmDD4NWQ3ykxdtVdDl0VZbfI1nIT97ere8XQpa
+Cmz/vtR5+DB6orn2xxU0K2Jz5OXt4qCJ233Nt96XEHKu2eeOtWMhqdFrcNf
RJe/H8eIVyc+RsOr7dcMLlcU9KK6/WaV+Ty8dxy3PTxVQUNen3R7WhgDXz58
qv4nU0ELqvh7bCuNhf8ObVo1pkBB9k+1k+Z/uwAVhjT4FlekoFrhAUFfNfFQ
pWL8bPUrBX2eWeOlP1wEi+iBz+Z8VtCNUk3+xgWXwHLi0/G3filoQnCNtMnx
l0GjXH6nWTUldTxkP2FF9QQwJikH+lsqSd0hYn1rr6tQf97x1GKDktLsF224
k43Q2KbHP9BQSbRhxcaSSILmOXdiQlsq6VLe7fAm3onQZs3Mlt86Ksk1eH/A
w45J0LFd5cPDQEkVd4/9UK9GMnQtDjFF9VHSMOo80MKcDD12tA2qPURJNitt
P0VdSwHnnukW3mOUZDeqcVnjqFTo93H8mmueSmp2eVzD2RHXYHD4l+82s5QU
+szLL2B/GgwfsmXuykVK2mVo+2n1gXRwq9jwxYNVSvqx/d7hLsevg3v0RXf7
TUryORqedehSBkyeOLggOEhJd0KdXPfn3gBv5bNBH/YpacO6jy7VP9+EOUkr
0gYcUdLHrMeVo02ZsGCeGk6cVdIoH4cAj363YanNyQtVLyppnl/Y8leQBaty
HO0mJSmp07ibBSWPssBvTUEk3lDSlg1T7r/zzYZN7WZbW+UrqWpGm+tPbHIg
sLjKzsWPlbRo+xzHtddzYOeOfbXynynp3dgDvQ/My4WQnu3Xtf2gpIe6J57f
rPPg4Mfr/239oaSE3943B9zIg8hwd5+XlVQ0ocjLcczSfDgx5OtLl9oqKiib
Wv1u8ztwruK2iRFaFZ12Ch8//+EdiI1udP9PPRXVsnc/UrLtLlyaeNl1bDMV
NU38nZ3tWACkHHI9vp2Kajdeo3/xuQBSk5730HRXUXHdSiOzj96DjHkr4+c6
q0j9Y/KSNm73IctG2yZzYPn3rbNfnKj5APJzTh1tPkpFYelOVc2XH8D9Nb3q
rfdQUfvAiFBf74fwpN39XSXeKvreqtSuru4RPC2eU6fHfBXtrRVs9kx8BC93
VPPft0JFXU5sKSmb+hje9wz79c1fRbf3j7BZWrsQvnzssGB4oIqsZySO2HWm
EH6E33gdtVdFEe3fPP3R+AlUGDrRs06Eir5tH/YlfN4TqFLp+wPvUyr66uP1
xJTwBCzOBwxNi1XRaut3jj2qFIHlJNsbDVFFOzd0rf6mXxFoVAk9V6Wr6Onz
e1F/bSsCY/LQSw+zVbTvYVILj8wiqO/zsm2XByo6/6p19ruaxdC44erjO80q
6lFazWGXSzE0z9U1+PhGRdc6HV7Uw7cY2qw9s2fgVxUNj4249yi6GDq2d7Y8
WUFNt/y7T/YwF0PXkgfrq1moyZgMDxOVJdAjaN6fSSo19c73y//+Twk496qx
iKzUpNHNy6jmVQL9Ph14a2WrptG/+lq/3VQCgyM6eS1praZM2xb686dKYPjQ
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
Dlya7Ltrwkw9FTju/NY4Mh+uajR1rizUU8ji99P/dMmHlNSTfvpVetp/umVO
26w8yFjQ89f8jXoKXHbgYfaUPMhsfG9+9g493Vb9pflWIQ/y8me/brVPT3un
p0bEh+bCfb+qnpsi9TT48OeWzexz4XHH/Q9Kz+jpXt2q9SfcyQHz0/ZDe8Xr
qXuT7QdmL8yBlzszMg4k6qko44jXbH0OvHX26PkzQ0/P3O1OzbuSDZ+/fL04
Kk9PtZ0jKm+dmA0/Ire1jX2kp+oPd/bMtsiG38MbH1c809MKX//SwbFZULnq
lfqz3usp2jW0zDgxC2pcGLIn47uevFt3/+CkyII6Xi/+blLJQEcGL04573cb
1NpV69fWMtAq9c9Ht95kguGa9k+hxkBdm0+b984tE+ouPL2wez0D9ew0e23L
W7egka3T2z1NDZQYbBey0+kWNLtzf/KXtgbK3b40uHPiTbDzn/vItZuBanXJ
WGjqdRM6dKo+/IyTgQ4vHNfLJeMGdCkNu2kx0EDHppxcEj/iBjjs6ug0ZaSB
LPLC/5v5PAOcXG5eTnY3UMu91V94rMyAvmUT29f3NtD2x18d/U0ZMPDI9xPL
fQzU8bft7Iwr12HYiECbe8sNlLq02mTDpOswumqTkI7+BmqyaeDx0XWuw/gL
CYodAQYKXXJ7wsyr6eDpNWzj2z0G8mtxfHw7n3SYpn1VoX+4gX57Xey7pmU6
zLq2evHRkwbaP7trbLuXaTB/of59pVgDlSb45qlPpcES27NT3K8aqJ53mHPZ
3DTwveNceCXNQA5lST8juqXBOv+HIwzZBlpdYahvSfU02NjJJ3PBfQN9+eds
1SX3rsG20houOSUGClsbZrI9fQ2Cdx1MsHtjoLL9dO/42muw16Vzx81lBgqq
sNQlcew1CCu7derZHwPVd82KbGJ/DQ4f8WzkVMNIbk+P5O7SXIPjI/4LPag0
UsKgpANpn1PhTNUdql8mI3W5Ghg0Nz8VYi403Ty6sZFadanm/29cKlz0wooX
7IwU7nx/njIkFa5qRyxV2hvJYni2zdIVqZBy7fWHWY5GcjnQPaW7RypcX7h2
2o1+5V+PqBindk6FTFtjUZNhRtrXK+FFQtNUyLtzbtS6cUaaPatPh7KaqXDP
v3fWEy8jxU6wPLvibQo87vS49z9zjFRl8YaquqwUMJfOx71LjDQPmmesP5cC
L3bV7Fy2xkhD5odE7g5Igbcu4WeGbDHSoDVXR6lmpsDnMnvbszuNFHLiXP9b
fVLg+5Hb+2seMNL2ZZY2u21S4PcIL83UY0Z6ElaY0OdHMlSu9mtLSpSRDG7Q
6+rtZKgRF1S5wWUjRe3XdSsIT4Y6U5ovX5FipP3RtmeW+SSDWpf46d4tI83o
MdZ+h2MyGNJGTu9010hNL/moLWonQ91Fb4t3PDGSV3BuvTv5SdCoiZ/buxdG
2uUWPvZVaBI0u2vK6f/JSC8P7dP3mZAEduuj+x77aaQ/h2Nuvq+XBB06902s
XNVE3fc3CSl9lAhdnhXae/xtokq9FqS325sIDrsXnkvQm8j2esLVYtdEcOpd
u6nRxkT7S0PvVqueCH2/RhxY2MJEdurg1nGXCQYe7arL7WAi9w8hs2rMJBg2
MntbawcTxb/uttVoRTC62tSqW3qb6FbsoxaqHQjj436veD7YRB/CL3568+wq
eE7Z+cXJzUSvli/aqeh6FabpWs48NMlExtIVDTI3JMCstCTzrxkmGvNk5LK5
eVdg/qLRY90Wmiiuyjj3wdZXYHGT97kXVpro6YuP7kmTLoPvXf/+qo0mWhLa
dWCDY5dg3Xrr5Nk7TLQ8RX88/eVF2NA5puvNUBMV3g5SaVpehG3P+kU3jTRR
cLhP6qQZ8RC8u6iZ3xkTKex+VVaeioM9vRcfKooz0dsas5YseXUBwr7WMTgk
muh6pdwFP5pfgMNHIwNDMkz05cuJih+8Y+HYyO7Vv+aayNnHKyX6ZAycqZa7
cugjE12a5GK76815iImb9vVsqYmmluR+eNvmPMRPqTC71vvy63lGW1Z7YTRc
1e0unfrdRItzPlzokRAFKWmtxqdWtKLBm7MbZVeNgvRFKfkNalnRL0Py2CpD
z0FmkzEDfDVWdCrxZ5GD01nIu/sh5X5dK/Kta5cS+/w0FKzf0L1zUys6Xjvq
/IugU/C4c72YoLZWNPRdnYbOLifB/Cy2xfuuVhTa12da4won4PnufyP+dbIi
x1aK2sWJx+Bt7xLj8QFWdKZnSNfrm4/C569LdlQZaUV9P1qk1ht/BL4dtbSY
6G5FNRdUbt+gSyT8Hnl09dVp5b/foqzgj9VhqFTd4bvRx4omBff7Y64RAdXj
8+YsWm5Fh16kqj78OQR1pk5/nutnRRNjorHTn4Og0ld0bxNgRU5+hUMzqx0E
ffqeu1v2WFHjr+uHLG8fBnUXtx704pAVBRY2blLVex80bHrtmvNJK2od/LK0
+fkQaFow1iE8xoq6jc0cd6vOXrDb8Cn2d4IVxZe4tklevhva229qNSbNipp6
D4jK/7kT7J/Xj4zLsqLm9T4kJG0LBoc9cVbq+1ZkaOcS9k+7IOjVZ2DwnBIr
mqfe9vxd6Xbo881c89br8vfvOi1o2qlAGHhs2dpmZVY0Lu7Rp5TKATB0lPI/
vz9W9P1hjSbXs7bAqOrH5xVXt6ajt+4Nf3F5E4yPh5cOSmvaEdh2W7vUDTBp
6h2PUJM1dZ877fWxV/4wVT/z3tdG1nRh6aLufe38YFZ6JddhdtaU30i/xWLL
WvBZHJJ+rrM1GW73PVVYaQ0sbtq2R21Ha2qSGHEwPngV+BakxU3rZ03xcVvL
qi3zhbUbxre+NtSaGsyJ6+P+YxlssP9yxGacNQlv3vZ8c92VXv//1/zzKD/P
r4fyevz7UH4fvx+U98PvF+X98udB+Tz8eVE+L18PlOvB1wvlevH1RLmefL1R
rjffD5T7wfcL5X7x/US5n3y/Ue43nweU88DnBeW88HlCOU983lDOG59HlPPI
5xXlvPJ5RjnPfN5Rzjs/DyjPAz8vKM8LP08ozxM/byjPGz+PKM8jP68ozys/
zyjPMz/vKM871wOUesD1AqVecD1BqSdcb1DqDdcjlHrE9QqlXnE9Q6lnXO9Q
6h3XQ5R6yPUSpV5yPUWpp1xvUeot12OUesz1GqVecz1Hqedc71HqPfcDlH7A
/QKlX3A/Qekn3G9Q+g33I5R+xP0KpV9xP0PpZ9zvUPod90OUfsj9EqVfcj9F
6afcb1H6LfdjlH7M/RqlX3M/R+nn3O9R+j3PAyjzAM8LKPMCzxMo8wTPGyjz
Bs8jKPMIzyso8wrPMyjzDM87KPMOz0Mo8xDPSyjzEs9TKPMUz1so8xbPYyjz
GM9rKPMaz3Mo8xzPeyjzHs+DKPMgz4so8yLPkyjzJM+bKPMmz6Mo8yjPqyjz
Ks+zKPMsz7so8y7PwyjzMM/LKPMyz9Mo8zTP2yjzNs/jKPM4z+so8zrP8yjz
PM/7KPM+7wMo+wDvCyj7Au8TKPsE7xso+wbvIyj7CO8rKPsK7zMo+wzvOyj7
Du9DKPsQ70so+xLvUyj7FO9bKPsW72Mo+xjvayj7Gu9zKPsc73so+x7vgyj7
IO+LKPsi75Mo+yTvmyj7Ju+jKPso76so+yrvsyj7LO+7KPsu78Mo+zDvyyj7
Mu/TKPs079so+zbv4yj7OO/rKPs67/Mo+zzv+yj7PvMAFB7AvACFFzBPQOEJ
zBtQeAPzCBQewbwChVcwz0DhGcw7UHgH8xAUHsK8BIWXME9B4SnMW1B4C/MY
FB7DvAaF1zDPQeE5zHtQeA/zIBQexLwIhRcxT0LhScybUHgT8ygUHsW8CoVX
Mc9C4VnMu1B4F/MwFB7GvAyFlzFPQ+FpzNtQeBvzOBQex7wOhdcxz0Phecz7
UHgf80AUHsi8EIUXMk9E4YnMG1F4I/NIFB7JvBKFVzLPROGZzDtReCfzUBQe
yrwUhZcyT0XhqcxbUXgr81gUHsu8FoXXMs9F4bnMe1F4L/Ng/F8e/D+8GIUX
M09G4cnMm1F4M/NoFB7NvBqFVzPPRuHZzLtReDfzcBQezrwchZczT0fh6czb
UXg783gUHs+8HoXXM89H4fnM+1F4P+cBKHkA5wUoeQHnCSh5AucNKHkD5xEo
eQTnFSh5BecZKHkG5x0oeQfnISh5COclKHkJ5ykoeQrnLSh5C+cxKHkM5zUo
eQ3nOSh5Duc9KHkP50EoeRDnRSh5EedJKHkS500oeRPnUSh5FOdVKHkV51ko
eRbnXSh5F+dhKHkY52UoeRnnaSh5GudtKHkb53EoeRzndSh5Hed5KHke530o
eR/ngSh5IOeFKHkh54koeSLnjSh5I+eRKHkk55UoeSXnmSh5JuedKHkn56Eo
eSjnpSh5KeepKHkq560oeSvnsSh5LOe1KHkt57koeS7nvSh5L+fBKHkw58Uo
eTHnySh5MufNKHkz59EoeTTn1Sh5NefZKHk2590oeTfn4Sh5OOflKHk55+ko
eTrn7Sh5O+fxKHk85/UoeT3n+Sh5Puf9KHk/+wAoPgD7Aii+APsEKD4B+wYo
vgH7CCg+AvsKKL4C+wwoPgP7Dii+A/sQKD4E+xIovgT7FCg+BfsWKL4F+xgo
Pgb7Gii+BvscKD4H+x4ovgf7ICg+CPsiKL4I+yQoPgn7Jii+Cfso+L8+yv/4
Kii+CvssKD4L+y4ovgv7MCg+DPsyKL4M+zQoPg37Nii+Dfs4KD4O+zoovg77
PCg+D/s+KL4P+0AoPhD7Qii+EPtEKD4R+0YovhH7SCg+EvtKKL4S+0woPhP7
Tii+E/tQKD4U+1IovhT7VCg+FftWKL4V+1goPhb7Wii+FvtcKD4X+14ovhf7
YCg+GPtiKL4Y+2QoPhn7Zii+GftoKD4a+2oovhr7bCg+G/tuKL4b+3AoPhz7
cii+HPt0KD4d+3Yovh37eCg+Hvt6KL4e+3woPh/7fii+H/uAKD4g+4IoviD7
hCg+IfuGKL4h+4goPiL7iii+IvuMKD4j+44oviP7kCg+JPuSKL4k+5QoPiX7
lii+JfuYKD4m+5oovib7nCg+J/ueKL4n+6AoPij7oii+KPukKD4p+6Yovin7
qCg+KvuqKL4q+6woPiv7rii+K/uwKD4s+7Ioviz7tCg+Lfu2KL4t+7goPi77
uii+Lvu8KD4v+74ovi/7wCg+MPvCKL4w+8QoPjH7xii+MfvIKD4y+8oovjL7
zCg+8//rO/8fhC+nSA==
                   "]], {{{0.303163192521865, 0.}, {0., -1.}}, {1., 0.}}], {
                 "Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 6.9}, {
                    Style["75%", Bold], 5.9}, {
                    Style["median", Bold], 5.5}, {
                    Style["25%", Bold], 5.1}, {
                    Style["min", Bold], 4.5}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {
                 FontFamily -> 
                  
                  "Times"}]]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, {}}, \
{}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.8039430656936596, 4.5}, AxesStyle -> Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
            GrayLevel[0], 
            AbsoluteThickness[0.2]], 
          FrameTicks -> {{Automatic, Automatic}, {{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}}, GridLines -> Automatic, GridLinesStyle -> 
          Automatic, LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
          "PetalLength cm", PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {{{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}, Automatic}}]], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Graphics], 3], "Meta" -> 
     Association["ID" -> 131031070546714], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Graphics], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["setosa"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c9c28a01-710c-404f-84ed-ff441d2a961c"][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-0.19605693430634064`, 0.955}, {
                    2.1960569343063403`, 1.9449999999999998`}}]}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GeometricTransformationBox[
                    PolygonBox[CompressedData["
1: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
+2ohN5qpJ5t+o4/9ifsVWBqk33mHpZ4sZVH7y6GvKmDoMvfQe0knHFo2UaTG
VmDlkS2tSsbrRFSa/riyjxX4veVOb99UrZB5lvi1yKnAoNovQ8zmacXL8T+U
Q4sq8PphuxCfnxoxoNb78Yurap6X9THNsjUa8SBCunrQqBIh83MiQ1VqYbs9
THWzSSWSlndyCNirFrf6+k+Ia1OJgJXmectM1KJ9kee1wq6VGPtlUW2r89XC
7/be8kYDK/Fs9cqZf9tXCwvX9Y79RlXi0dPket/CqoRX60XXZ02uRLdz+weY
yKqE6ZdJlTvmVcLfZWKfvSmV4tjZ4ZOvLK+E28WBVmNcKkUtxx43Xm+uxKrX
Y3u4qCrE3jptqn/trUSdFpYhn49ViKrXDabWPVEJ1SnrZjfaVgi3XZqb3S5W
wj3gVpeY8Jr5MqBQPSmwEsY7WjsNnVwzX0q+Om0Kq8Qb8b151Z8ykXc34fa5
l5W4nGRupn+oTDgve6l9GlNzv87rP9pblYmvVsHTv6ZV4oWjNOHtK5WYlekb
pMuuub+/bcdumq8SqeeO63UorETf+PEXxqtLheOUnTPtKyuR3OZj01F+pSLG
ZHXwytpVCL9623eWKBWj3s01ONm4CqXd7pXvzVGKiL0Os8NaVyEyrW/UoyNK
YTd4cMiHLlVoez1rUlE3pXhU2qVWef8qXNvaYlbHVIXoGdpibsuRVdhlPlXp
uF0hglYahw2bVAXz8BZznNspRMeOlbWd51Yhd+v8x9PiSoR/1p95h5ZV4bzp
euMWW0pES58v929tqsKKpXcbB7YpEeenxdSJ31OFoZrnA/Ni5aKR6dMFRR5V
uChmnk12k4sTMbceNr5QhZ62T5ST2suF0cELxv2vV2HG+H+mgTV65cCwo4tm
h1bhbk6BzqOySKjLtz7e+aIKO53NbnadUSTcHyyrdzW6CsHjLhvPvV8oFGtm
Or/5UIU+N35oixsUinXW9k9yv9d83r+sf5GrCsSfH/0bGBdUYdUp+6sh0f/E
ksudXG0rqmCibN7veMd/Imtms2eTa1UjKb2LeuD+v2Ju49oNNzeqRoPeJasv
fMsXafGlS863qsb0Ee76Z+zyxeQjv54/s6nGwNxkqybn/og4WVqjb/2qYd3W
PttU/luMqY5cpjeiGs3qrR+yx+G3kB4/fNnBsRpepurWywLzxJAN15uMnVON
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
el8A/L4AvU8Afp+A3jcAv2/wP99H+D/hZcdJ
                    "]], {{{0.07789340905498204, 0.}, {0., -1.}}, {1., 
                    0.}}]}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "1.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "1.6`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "1.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "1.4`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}},
                     GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}},
                     AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {FontFamily -> "Times"}, 
                    StripOnInput -> False]], Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 1.9}, {
                    Style["75%", Bold], 1.6}, {
                    Style["median", Bold], 1.5}, {
                    Style["25%", Bold], 1.4}, {
                    Style["min", Bold], 1.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {FontFamily -> "Times"}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, \
{}}, {}}, {}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0.8039430656936596, 1.}, AxesStyle -> 
                  Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
                  True, FrameLabel -> {{None, None}, {None, None}}, 
                  FrameStyle -> Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], 
                  FrameTicks -> {{Automatic, Automatic}, {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
                   GridLines -> Automatic, GridLinesStyle -> Automatic, 
                  LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
                  FormBox["\"PetalLength cm\"", TraditionalForm], 
                  PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
                    Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c9c28a01-710c-404f-84ed-ff441d2a961c"][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["versicolor"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c9c28a01-710c-404f-84ed-ff441d2a961c"][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-0.19605693430634064`, 2.895}, {
                    2.1960569343063403`, 5.205}}]}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GeometricTransformationBox[
                    PolygonBox[CompressedData["
1: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
Kmq8Ovox+N+elRr9zoQiDrj+079OCjRJq9992x8T0rV68eWJcwpcL0s5Mc7U
lIytb62efjQFBupsqtPMypT2uu3Z2L80BTLrdpv3qa0p+W26Z3Wr6xOY27Ei
7a69KaU3NN1gsfUJ/Bp8ssfOYaZkMEXvWGDWE9g1ZfQpV3dTWrrG+NHp9k+h
8XJ9/RbzTMmqdq0ZPlueQtju6PmVq01p6vCkITvznoJDsHcG7TClOkurT++0
ToWMGJte/kdNqfzFKR9ySYVZzzKD3C+akst8o7uGm1Ph+9sdBq2jTel5lEv0
/tupsL02eFc9NKVjB0zSt31OhYYNK5/FvzSlxx02/KtplwZX7ELs95Wb0rf9
E69N9kwDcHI/M+WnKTWd5N5i54U0SPOwMGpnZEbj1MHTYt+lwYxV8Qt+1jOj
v0le5206p8O3vSsyE1uZkf+b14eerE0Hv9C2fQJ6mFHqqFbp+Q/ToT69Oevh
aEbNPCefXdYgAy69OGDc0dWMnGc/bB3knQF9Pg5Z9GeOGV3pa/1xSWIGPNX/
8+LhCjNaP7T8+u+mz8CjcXjfQD8zWrixVryDzzOo7DozeGagGXm89XZwKnoG
W0bUM7ULMaPCkMtjNcOeQ91ZjxdXR5rRluH1fx65+RwurN348nFize8b5Z39
tFkm2Ad06Xc004y6t/jcO/hgJqRcKjs/p8SM6hr+zq9t8gKmxh8361plRuPX
TTZJ9X0Bn1+5LNXVN6eKCos1ZdUvYNOXOtlPteY03W7F5hYbskBjfNvhhK05
mY240WhqrZdwvum/oV5dzWm24bGW07e+hB49m1r0GGROlgP0l34zewWPXJ4v
0xtX83qSYn5e4CuYNHd7TvpMc3Lo6ZhZ2CwbPmzoMyBoqTktWRA/M+ZaNmwM
/Hzh383m1MoStc0cckAVFqywDzCngkmqkylpOXAuceIKw3Pm1Lv91RzvGa+h
W65Z7vMb5hRQPHR81LfX8OBb7MCz8eZ0ru7AW+O25YKb2fJLCzNq/r9fiMf3
Bm/gXfM2qr6F5lR1s9NnxytvYH3v3JUmleakXdTi3BrrPFCM3f8mS9eCRk7/
cu/FnDw4M2/w4PMqCwq9EPPNPywPuvj+urzExoKGu9Was6oqDxKPXlU72FnQ
QGVQ1oLe+eB6ffpq8/4W1NfNcP5wn3yoeGiZnz3Kgl7bTrhVkZAPa/MfDbng
YUHLPhSFtjIoAPOf668uX2RBd7f3aFwypACCFJ21A30s6PywU7Z6fgVg16p0
jXKfBeV1er7HK6EAEuBYQW6QBcWuDfvzX3UBjJ8wcujlcAvq06nY8GLPQijz
rh2+iixoWh+TyEmLCmH11ijLIakWFOE8sa5BSCGYnpy3TpNnQbV3tX9//FUh
nLxpXZT/0YK6ep9da2laBJ1SMpzCqi3IekdKywX2ReDxJd71noGCzrW9mhU8
twja/G1kGmyhoGez11bHHCiCSqOVuLOuglqM3LY9OqYIYrTpixdbK8hz14PU
kMIi2NK0XYuJLRU0fk7bzfsMi8G5fc0i6aigSb+ebfNrWwx1e+btatFdQfUn
+D47PrwY8gb26mcGCppiOs2hdF4xXHAJqKwcrKB63vM2bNheDIsnfTj/yllB
uz0y92wMLgb7uY5useMVFHLJwsuAiqHO0jNmoVMU9PZr6arOL4shZcMf8p9d
8/+HWl61/VwMh3aOX7rMW0EpM79M0jEsgamB4S0nLVfQrj7OVSWNSqDVWePs
/usVZPLz4vX/7Erg89WZ/q23Kqgwx7uf55ASiI6+56DwV9Dz4sQFzu4l4JtY
71vVQQWpTxa8TvMugeHpi0Nfn1CQv6d9UN1NJaDNfeyeEKyg2OQjn/ofLIHc
8hYWl64oyCOvpe7y0BII+bYxbt9NBTkevTg67U4JLKyVvWzlXQX1GGU5fcnT
Euhp1rX11Ps173e5neGqwhLQrb8nZ1BKzed7/P7An+8lkNy8fE+75wqqY1Qc
qTUrhYBOAwaoXytoRiG+zrIphcm9T1T9LFLQK8Oz/q49S6GF4/cLee8UVNsx
ofNZl1L4OGbU5KSvChrxISoyfm4p3Jp6SXH1j4JcQheHxfqUwsZ5egkBdZRk
n+qpPH2sFJxWTF2xxlRJvSKN60+PLAWV7+020zVK8hrZzKFWeink+KtzHa2U
ZKV277fiQymcO/rvvo7NlXQnLMn8tkkZeJ9PGmjZTklxVw5WRrUug27Xm/74
01lJ4QMvHPVwLAOde2suFdoryfOJgV3QnDJ48PD5lEcDlBQdnOjv5lcG+593
VF0bpqSn6tYTl4aUgVv+9vuBY5RUtX4zPEkqg+bvC1eud1dS/wMLOw4uK4N3
P/q0mzVDSete3QqIMiyHyDqH3wybp6TZnstP/G5VDusVX/bbLVHSheaXNpU7
loOj1fDB9dco6WPO5Wfj55aDotX5n9WblHRyWPCjun7l8KqzzpWSHUqa+2Nm
QPW5cjgDbtNS9ispaWrclbzYcpg/LEIdcVRJTzxj7Ha/LocuE8yTjp5R0o+5
gZ1ffC+Hv9Pnrva5qCTNrNV79yoqINE7rv3c60oq9GxpvbtlBexdbZXvHK2k
Ad+vLwzqXQGuW5cHdI1TkuEis/mnRlaAzf7UIVaPlJTaI+nUtGkVUHGizW/d
dCU9qj1qcox3BURc2Hy1/KWSPjfV+blrdQWsvZnrkZqvrMlfb+qE+VbA4Nge
2qhyJRl0LN9Sa0cFmKfsf3Dic839v+fSbPbuCsjKerdm808ldQ8JHhlb8zqo
aHDHebVUVNv1yLxfNT/v9SmoYJSRivKPjSn4vbkC7P78OthDqaK8IzN0bqyp
gD8G44Za11dRkzj9/xQLKiBBHfZHr6mKDi8Zf8JoagX4WxuFv2uloiuWl3UC
hlXA+LYzZmR0UtGc4/X3XuxSAU2637WM7qGi9VY5RU4NKqCsf91HQf1U1HzG
muhlf8rhuvOidX6OKvqR+Su7Q3Y5rHZL7uTtoqJx9ptM10WWw8DZtkVjXVW0
yvDtW0//cjBdvCHQfpqKjBaffVFrRjlkrnvpZDNXRV0T3R6M6VIOJ7d3/mu4
UEVeF9+2W6RbDnMP7r72cUXN9XhXb/w3pQw6nS6dmbmh5npwe/upB8vg12WH
enf9VNS6b/MXk93KIO7WseSze1TkF9a9sa9VGexM+LZ+R6CKnqzVjKnILoWx
qSPtFp1SUZuq5r3DD5dCo5wLxRNCVKSpO7P8y+hSKCmtfaRvWM1ri87b0oxL
Iaxy8nDbKBXNdX3WfT6VwMrqqGoTVFHjScm5hUtKwMFEdeNLoooCP0+o5WZb
AsZ1589++aTmevf3OfLpWTFk2CTWp0wVeetUf3i4qRiOd2iScj635novhnY0
7FgMs3qt3ri7pOZ6FlVOf/KyCDoMftZ56QcV9VMfPN3Xtwi+j+pQ6lalogZB
N2uvaVsENHnbUYe/KupeZ9Go4PRC2O5ZMKKVvpp+/5z3OndlIYxe1ruWhbma
zmakeDk2LoSGPocivmnVVNuhi1Y3vgCKdn2ak9NITSnrz/RqO6cArhx2ahhv
q6YRh+fNKTAugOXnzj250F5NllXagYOu5gOE//XZ21VNeUO6blk4Kh8MY1y7
ruijpufZ3V5v+JoHaUnXyyYPUtPNZZl1dwfmwdEM0+MDR6jJ4nnfXTd65cGM
N7NHth2nJpeU74u1MW+g3VvSVU1W08bGDc+Nqf0GvlU1iPwxU03/eZZmjRiW
C/d0l3m+mV/zOsIrt33Aa/Azf2qVuFRNH9/0tG6YmwMuDVqnXl6rpt5Rg8/1
ap0D9Vv4+h7YrKbNP6rqhS3LhoJ/XndbvUtNZ8rd0w/Hv4JLfbpXTAtQU/jb
WS+16lewdOi+E0OOq8ne+O13h5kvoc+4ty4dzqnp8s/RD7pFZYG+x6A62stq
iljUPcvQNAuezj8V9fuGmuLWbv+VMf0FHF7506vgjpoKx07tGXonEzw2j2n8
MF5N6Yb32wdaZkKbvVfSwpLVFPv7d2z4kudQecxgy6EMNW17c6Rn7YxnEBPi
0WNdds31fVk44liXmvx4487bGYVq6mbZ0HHz4QxwRu0pp7dqamb12ubB33So
m7xg9D+VaoqfFnhmwZx0yMt8qFfvt5raTF61dFN6GlwoaHb7r66Grnt0dDLo
lwaLP6ybX2ysId0Jlu9qh6eC/a8X1o9VGup1p3HUGptUqKNvl3G9gYZ23nW4
+b7DU0hR7tp6xEZDRsvnfXzf6AkcalTSc2MbDXn6H4v8q0yBKa37vZ9tp6Gt
U4c/tjV5DK26Hg0a0UtDeyqc+sw1SoZP/b6O6dJfQ6NOmfk8Mn0E0cOdDRo6
aWh79ZoAF+1D2OQaGl1rtIaiIo0Vf20ewPCZut5lEzUU4NCkZ2bXJNAsnNT0
qYeG/sFE85wRiZC7JvLZTU8NfSYcpZp3H877KbYdX6ShP/vD+67ZnQALD3jZ
+67S0NKHt0F7Mx56nEr44OmjocerVEVv8+NA91LjMy7bNZTq82rub3UcPIpc
Oa77Pg1577k+YNCwWAiISzdsfERDh5rpbH3kRzDpSbuYOqc15OJxI7DuAYQW
r7YueBuqIR3Xk6NUTe/Bh+I8m/RwDa20Nm+x+XYM3PrcK/PWLQ25Pxt71GvS
Hdj4X8D2U6Shd7HdTsUaRYOT0cfeWx9oaJZx/nTf2Fug0g79ND9VQ5fVE5uF
+kZBTpOzZ8dkaSjvcZmfrUsknGv33/heeRpaVbKh5bsWN8G7xwTjpmUa+lS0
cUSVQQR0G3jtrsEnDf1aFu7fvvI66LiYLPrwXUNNRuc2WV92DR64z2r+vFpD
TefOWJBWGg775+CLOwZa8p6QYmZVEAZuS+rvPGOhJbshaWYdDa9C8w1L+m6v
q6WhCrQ74XAZ3u1I+bzAWksB7q3zm/pfhMhDLYPHt9SSa5PIQ4vfh8L6Mz6u
fTpqyehz7+q+U0PA8Wq2SfPuWlp6YLblP4XBoIjuisagpXqf6oVWrDwHr+7v
Wfx5sJZiJh8foNPkLJxJK7fNctZSry+p79plnYb5rwe8vDdeS3M+fi/5HBQE
XcpP7AqeoqVCbXQKVZ6Ev1+/w67ZWhqSO8He5P5xSNQZXbnYu+b9DK45ZEYc
hb2ml89PXK6lHsmxYR3iDoNrPX23fuu1ZBq96nXDd4fApvk0s5Zbaz5fl32B
Qf8chIqO0WTmr6VhQz5YxOw7ABH2mqVfD2rpk02PVC+T/bB2iHfL7BNa0hoN
uRxyYi8MHvPgVWywlvasHz481t8fzKfa+Ide0dK50cr9Jea7IMtrrcOemzWf
H3DI9ujtELQ88+uyu1qa3GLUV6s9fuC5qVPopPtaejKiXZszO7aAnf8O9wEp
Wlr7fcqkJpd84feRIvM2z7X0dqmJW8gHH0gI7huneK0l4dm7rx1e9r3o/7/m
n0f5eX4/lPfj34fy+/h6UK6HrxflevnzoHwe/rwon5fvB8r94PuFcr/4fqLc
T77fKPebvw+U74O/L5Tvi79PlO+Tv2+U75vXA8p64PWCsl54PaGsJ15vKOuN
1yPKeuT1irJeeT2jrGde7yjrnZ8HlOeBnxeU54WfJ5TniZ83lOeNn0eU55Gf
V5TnlZ9nlOeZn3eU5533A5T9gPcLlP2C9xOU/YT3G5T9hvcjlP2I9yuU/Yr3
M5T9jPc7lP2O90OU/ZD3S5T9kvdTlP2U91uU/Zb3Y5T9mPdrlP2a93OU/Zz3
e5T9ns8DlPOAzwuU84LPE5TzhM8blPOGzyOU84jPK5Tzis8zlPOMzzuU847P
Q5TzkM9LlPOSz1OU85TPW5Tzls9jlPOYz2uU85rPc5TznM97lPOe8wBKHuC8
gJIXOE+g5AnOGyh5g/MISh7hvIKSVzjPoOQZzjsoeYfzEEoe4ryEkpc4T6Hk
Kc5bKHmL8xhKHuO8hpLXOM+h5DnOeyh5j/MgSh7kvIiSFzlPouRJzpsoeZPz
KEoe5byKklc5z6LkWc67KHmX8zBKHua8jJKXOU+j5GnO2yh5m/M4Sh7nvI6S
1znPo+R5zvsoeZ/nAZR5gOcFlHmB5wmUeYLnDZR5g+cRlHmE5xWUeYXnGZR5
hucdlHmH5yGUeYjnJZR5iecplHmK5y2UeYvnMZR5jOc1lHmN5zmUeY7nPZR5
j+dBlHmQ50WUeZHnSZR5kudNlHmT51GUeZTnVZR5ledZlHmW512UeZfnYZR5
mOdllHmZ52mUeZrnbZR5m+dxlHmc53WUeZ3neZR5nud9lHmfeQAKD2BegMIL
mCeg8ATmDSi8gXkECo9gXoHCK5hnoPAM5h0ovIN5CAoPYV6CwkuYp6DwFOYt
KLyFeQwKj2Feg8JrmOeg8BzmPSi8h3kQCg9iXoTCi5gnofAk5k0ovIl5FAqP
Yl6FwquYZ6HwLOZdKLyLeRgKD2NehsLLmKeh8DTmbSi8jXkcCo9jXofC65jn
ofA85n0ovI95IAoPZF6IwguZJ6LwROaNKLyReSQKj2ReicIrmWei8EzmnSi8
k3koCg9lXorCS5mnovBU5q0ovJV5LAqPZV6LwmuZ56LwXOa9KLyXeTAKD2Ze
jMKLmSej8GTmzSi8mXk0Co9mXo3Cq5lno/Bs5t0ovJt5OAoPZ16OwsuZp6Pw
dObtKLydeTwKj2dej8Lrmeej8Hzm/Si8n/sAlD6A+wKUvoD7BJQ+gfsGlL6B
+wiUPoL7CpS+gvsMlD6D+w6UvoP7EJQ+hPsSlL6E+xSUPoX7FpS+hfsYlD6G
+xqUvob7HJQ+h/selL6H+yCUPoj7IpS+iPsklD6J+yaUvon7KJQ+ivsqlL6K
+yyUPov7LpS+i/swlD6M+zKUvoz7NJQ+jfs2lL6N+ziUPo77OpS+jvs8lD6P
+z6Uvo/7QJQ+kPtClL6Q+0SUPpH7RpS+kftIlD6S+0qUvpL7TJQ+k/tOlL6T
+1CUPpT7UpS+lPtUlD6V+1aUvpX7WJQ+lvtalL6W+1yUPpf7XpS+l/tglD6Y
+2KUvpj7ZJQ+mftmlL6Z+2iUPpr7apS+mvtslD6b+26Uvpv7cJQ+nPtylL6c
+3SUPp37dpS+nft4lD6e+3qUvp77fJQ+n/t+lL6ffQAUH4B9ARRfgH0CFJ+A
fQMU34B9BBQfgX0FFF+BfQYUn4F9BxTfgX0IFB+CfQkUX4J9ChSfgn0LFN+C
fQwUH4N9DRRfg30OFJ+DfQ8U34N9EBQfhH0RFF+EfRIUn4R9ExTfhH0UFB+F
fRUUX4V9FhSfhX0XFN+FfRgUH4Z9GRRfhn0aFJ+GfRsU34Z9HBQfh30dFF+H
fR4Un4d9HxTfh30gFB+IfSEUX4h9IhSfiH0jFN+IfSQUH4l9JRRfiX0mFJ+J
fScU34l9KBQfin0pFF+KfSoUn4p9KxTfin0sFB+LfS0UX4t9LhSfi30vFN+L
fTAUH4x9MRRfjH0yFJ+MfTMU34x9NBQfjX01FF+NfTYUn419NxTfjX04FB+O
fTkUX459OhSfjn07FN+OfTwUH499PRRfj30+FJ+PfT8U3499QBQfkH1BFF+Q
fUIUn5B9QxTfkH1EFB+RfUUUX5F9RhSfkX1HFN+RfUgUH5J9SRRfkn1KFJ+S
fUsU35J9TBQfk31NFF+TfU4Un5N9TxTfk31QFB+UfVEUX5R9UhSflH1TFN+U
fVQUH5V9VRRflX1WFJ+VfVcU35V9WBQfln1ZFF+WfVoUn5Z9WxTfln1cFB+X
fV0UX5d9XhSfl31fFN+XfWAUH5h9YRRfmH1iFJ+YfWMU35h9ZBQfmX1lFF+Z
fWYUn5l9ZxTfmX1oFB+afWkUX5p9ahSfmn1rFN+afWwUH/v/+tr/A3la3tA=

                    "]], {{{0.23626894130706225`, 0.}, {0., -1.}}, {1., 
                    0.}}]}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "5.1`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "4.6`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "4.3`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], "4.`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "3.`"}},
                     GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}},
                     AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {FontFamily -> "Times"}, 
                    StripOnInput -> False]], Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 5.1}, {
                    Style["75%", Bold], 4.6}, {
                    Style["median", Bold], 4.3}, {
                    Style["25%", Bold], 4.}, {
                    Style["min", Bold], 3.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {FontFamily -> "Times"}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, \
{}}, {}}, {}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0.8039430656936596, 3.}, AxesStyle -> 
                  Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
                  True, FrameLabel -> {{None, None}, {None, None}}, 
                  FrameStyle -> Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], 
                  FrameTicks -> {{Automatic, Automatic}, {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
                   GridLines -> Automatic, GridLinesStyle -> Automatic, 
                  LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
                  FormBox["\"PetalLength cm\"", TraditionalForm], 
                  PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
                    Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c9c28a01-710c-404f-84ed-ff441d2a961c"][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["virginica"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c9c28a01-710c-404f-84ed-ff441d2a961c"][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-0.19605693430634064`, 4.38}, {
                    2.1960569343063403`, 7.0200000000000005`}}]}, {
                   Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 
                    0.968322270542458]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.7]]], 
                    RGBColor[
                    0.798413061722744, 0.824719615472648, 0.968322270542458]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GeometricTransformationBox[
                    PolygonBox[CompressedData["
1:eJxlmndcjn349922jLtrrzJCdjYZd4eorNvIllUkZMsemWUryipCyV6llJHj
aCkhTTJTXbI3Gbfx9Lx+x/H743n8watXubqu8/yex3h/3g0mzh4yuWKFChWy
yv/6v//KH62im3eusyW55FZ44aZaDqbE7KLWgyzJpt8IRfEUX6g/d+roLaMs
SWO1o7L/3FVg2+BP1nMPS5q7rk5E1+TV0CJ7Zx/n6ZYERXvrFjZbC21Wt6RD
8y3p2eWEaOcj66BT2+TOv1dY0un2X6N6dvGHbkWjz7qtt6RHvwdGnypZDz22
v7eNC7Qk6+mXcsYe2QgujuvDVCGWNGHB3lX2azZD/w/W2jkRlrSqXVxJs8Vb
YfChmK03T1nSqHcH3F5tCIARrv2rNLtgSVjZryjhfiCM+at4uR9a0tIhLYM9
/2wH96jFn4vSLemfgkC1uV0QeHn8PcMhx5IaDJvhf2lBMExXHCkJeWBJ3Xza
LvNO3wlzEruP+Wq2pLT/CvYsa7EbFs7NzRn61pLuvX/577IDe2BZA+9+575a
0pa9jTb9ahQCq7IrJNX6S0E/MztPjLgSCv6rd3eZZqGg6OnhXsop+2FzW7uo
VJWCqnxrDU8bHYDAopSmNtYKmrL3bfNZyw7Cru1jDvraKij0fJeWD2cdglDH
j7oHrRVk98bjiM3McDj4YUNA5y4K2rbv49HTCyMg8lC9asE9FfRxVFTEu82H
4aTrBd/3/RX0+2dN8jgdCef+GlD273AFJbZrZlr34AjERpXMPD5eQVa3xv71
WHsMLnssfVplqoLmHSjsV8n9OJBCMW7iXAW9XRQ3bGPcCbiWeDTv6lIFXXwP
OyvWPQU35jr8a1qnoH9vdPhmDD4NWQ3ykxdtVdDl0VZbfI1nIT97ere8XQpa
+Cmz/vtR5+DB6orn2xxU0K2Jz5OXt4qCJ233Nt96XEHKu2eeOtWMhqdFrcNf
RJe/H8eIVyc+RsOr7dcMLlcU9KK6/WaV+Ty8dxy3PTxVQUNen3R7WhgDXz58
qv4nU0ELqvh7bCuNhf8ObVo1pkBB9k+1k+Z/uwAVhjT4FlekoFrhAUFfNfFQ
pWL8bPUrBX2eWeOlP1wEi+iBz+Z8VtCNUk3+xgWXwHLi0/G3filoQnCNtMnx
l0GjXH6nWTUldTxkP2FF9QQwJikH+lsqSd0hYn1rr6tQf97x1GKDktLsF224
k43Q2KbHP9BQSbRhxcaSSILmOXdiQlsq6VLe7fAm3onQZs3Mlt86Ksk1eH/A
w45J0LFd5cPDQEkVd4/9UK9GMnQtDjFF9VHSMOo80MKcDD12tA2qPURJNitt
P0VdSwHnnukW3mOUZDeqcVnjqFTo93H8mmueSmp2eVzD2RHXYHD4l+82s5QU
+szLL2B/GgwfsmXuykVK2mVo+2n1gXRwq9jwxYNVSvqx/d7hLsevg3v0RXf7
TUryORqedehSBkyeOLggOEhJd0KdXPfn3gBv5bNBH/YpacO6jy7VP9+EOUkr
0gYcUdLHrMeVo02ZsGCeGk6cVdIoH4cAj363YanNyQtVLyppnl/Y8leQBaty
HO0mJSmp07ibBSWPssBvTUEk3lDSlg1T7r/zzYZN7WZbW+UrqWpGm+tPbHIg
sLjKzsWPlbRo+xzHtddzYOeOfbXynynp3dgDvQ/My4WQnu3Xtf2gpIe6J57f
rPPg4Mfr/239oaSE3943B9zIg8hwd5+XlVQ0ocjLcczSfDgx5OtLl9oqKiib
Wv1u8ztwruK2iRFaFZ12Ch8//+EdiI1udP9PPRXVsnc/UrLtLlyaeNl1bDMV
NU38nZ3tWACkHHI9vp2Kajdeo3/xuQBSk5730HRXUXHdSiOzj96DjHkr4+c6
q0j9Y/KSNm73IctG2yZzYPn3rbNfnKj5APJzTh1tPkpFYelOVc2XH8D9Nb3q
rfdQUfvAiFBf74fwpN39XSXeKvreqtSuru4RPC2eU6fHfBXtrRVs9kx8BC93
VPPft0JFXU5sKSmb+hje9wz79c1fRbf3j7BZWrsQvnzssGB4oIqsZySO2HWm
EH6E33gdtVdFEe3fPP3R+AlUGDrRs06Eir5tH/YlfN4TqFLp+wPvUyr66uP1
xJTwBCzOBwxNi1XRaut3jj2qFIHlJNsbDVFFOzd0rf6mXxFoVAk9V6Wr6Onz
e1F/bSsCY/LQSw+zVbTvYVILj8wiqO/zsm2XByo6/6p19ruaxdC44erjO80q
6lFazWGXSzE0z9U1+PhGRdc6HV7Uw7cY2qw9s2fgVxUNj4249yi6GDq2d7Y8
WUFNt/y7T/YwF0PXkgfrq1moyZgMDxOVJdAjaN6fSSo19c73y//+Twk496qx
iKzUpNHNy6jmVQL9Ph14a2WrptG/+lq/3VQCgyM6eS1praZM2xb686dKYPjQ
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
Dlya7Ltrwkw9FTju/NY4Mh+uajR1rizUU8ji99P/dMmHlNSTfvpVetp/umVO
26w8yFjQ89f8jXoKXHbgYfaUPMhsfG9+9g493Vb9pflWIQ/y8me/brVPT3un
p0bEh+bCfb+qnpsi9TT48OeWzexz4XHH/Q9Kz+jpXt2q9SfcyQHz0/ZDe8Xr
qXuT7QdmL8yBlzszMg4k6qko44jXbH0OvHX26PkzQ0/P3O1OzbuSDZ+/fL04
Kk9PtZ0jKm+dmA0/Ire1jX2kp+oPd/bMtsiG38MbH1c809MKX//SwbFZULnq
lfqz3usp2jW0zDgxC2pcGLIn47uevFt3/+CkyII6Xi/+blLJQEcGL04573cb
1NpV69fWMtAq9c9Ht95kguGa9k+hxkBdm0+b984tE+ouPL2wez0D9ew0e23L
W7egka3T2z1NDZQYbBey0+kWNLtzf/KXtgbK3b40uHPiTbDzn/vItZuBanXJ
WGjqdRM6dKo+/IyTgQ4vHNfLJeMGdCkNu2kx0EDHppxcEj/iBjjs6ug0ZaSB
LPLC/5v5PAOcXG5eTnY3UMu91V94rMyAvmUT29f3NtD2x18d/U0ZMPDI9xPL
fQzU8bft7Iwr12HYiECbe8sNlLq02mTDpOswumqTkI7+BmqyaeDx0XWuw/gL
CYodAQYKXXJ7wsyr6eDpNWzj2z0G8mtxfHw7n3SYpn1VoX+4gX57Xey7pmU6
zLq2evHRkwbaP7trbLuXaTB/of59pVgDlSb45qlPpcES27NT3K8aqJ53mHPZ
3DTwveNceCXNQA5lST8juqXBOv+HIwzZBlpdYahvSfU02NjJJ3PBfQN9+eds
1SX3rsG20houOSUGClsbZrI9fQ2Cdx1MsHtjoLL9dO/42muw16Vzx81lBgqq
sNQlcew1CCu7derZHwPVd82KbGJ/DQ4f8WzkVMNIbk+P5O7SXIPjI/4LPag0
UsKgpANpn1PhTNUdql8mI3W5Ghg0Nz8VYi403Ty6sZFadanm/29cKlz0wooX
7IwU7nx/njIkFa5qRyxV2hvJYni2zdIVqZBy7fWHWY5GcjnQPaW7RypcX7h2
2o1+5V+PqBindk6FTFtjUZNhRtrXK+FFQtNUyLtzbtS6cUaaPatPh7KaqXDP
v3fWEy8jxU6wPLvibQo87vS49z9zjFRl8YaquqwUMJfOx71LjDQPmmesP5cC
L3bV7Fy2xkhD5odE7g5Igbcu4WeGbDHSoDVXR6lmpsDnMnvbszuNFHLiXP9b
fVLg+5Hb+2seMNL2ZZY2u21S4PcIL83UY0Z6ElaY0OdHMlSu9mtLSpSRDG7Q
6+rtZKgRF1S5wWUjRe3XdSsIT4Y6U5ovX5FipP3RtmeW+SSDWpf46d4tI83o
MdZ+h2MyGNJGTu9010hNL/moLWonQ91Fb4t3PDGSV3BuvTv5SdCoiZ/buxdG
2uUWPvZVaBI0u2vK6f/JSC8P7dP3mZAEduuj+x77aaQ/h2Nuvq+XBB06902s
XNVE3fc3CSl9lAhdnhXae/xtokq9FqS325sIDrsXnkvQm8j2esLVYtdEcOpd
u6nRxkT7S0PvVqueCH2/RhxY2MJEdurg1nGXCQYe7arL7WAi9w8hs2rMJBg2
MntbawcTxb/uttVoRTC62tSqW3qb6FbsoxaqHQjj436veD7YRB/CL3568+wq
eE7Z+cXJzUSvli/aqeh6FabpWs48NMlExtIVDTI3JMCstCTzrxkmGvNk5LK5
eVdg/qLRY90Wmiiuyjj3wdZXYHGT97kXVpro6YuP7kmTLoPvXf/+qo0mWhLa
dWCDY5dg3Xrr5Nk7TLQ8RX88/eVF2NA5puvNUBMV3g5SaVpehG3P+kU3jTRR
cLhP6qQZ8RC8u6iZ3xkTKex+VVaeioM9vRcfKooz0dsas5YseXUBwr7WMTgk
muh6pdwFP5pfgMNHIwNDMkz05cuJih+8Y+HYyO7Vv+aayNnHKyX6ZAycqZa7
cugjE12a5GK76815iImb9vVsqYmmluR+eNvmPMRPqTC71vvy63lGW1Z7YTRc
1e0unfrdRItzPlzokRAFKWmtxqdWtKLBm7MbZVeNgvRFKfkNalnRL0Py2CpD
z0FmkzEDfDVWdCrxZ5GD01nIu/sh5X5dK/Kta5cS+/w0FKzf0L1zUys6Xjvq
/IugU/C4c72YoLZWNPRdnYbOLifB/Cy2xfuuVhTa12da4won4PnufyP+dbIi
x1aK2sWJx+Bt7xLj8QFWdKZnSNfrm4/C569LdlQZaUV9P1qk1ht/BL4dtbSY
6G5FNRdUbt+gSyT8Hnl09dVp5b/foqzgj9VhqFTd4bvRx4omBff7Y64RAdXj
8+YsWm5Fh16kqj78OQR1pk5/nutnRRNjorHTn4Og0ld0bxNgRU5+hUMzqx0E
ffqeu1v2WFHjr+uHLG8fBnUXtx704pAVBRY2blLVex80bHrtmvNJK2od/LK0
+fkQaFow1iE8xoq6jc0cd6vOXrDb8Cn2d4IVxZe4tklevhva229qNSbNipp6
D4jK/7kT7J/Xj4zLsqLm9T4kJG0LBoc9cVbq+1ZkaOcS9k+7IOjVZ2DwnBIr
mqfe9vxd6Xbo881c89br8vfvOi1o2qlAGHhs2dpmZVY0Lu7Rp5TKATB0lPI/
vz9W9P1hjSbXs7bAqOrH5xVXt6ajt+4Nf3F5E4yPh5cOSmvaEdh2W7vUDTBp
6h2PUJM1dZ877fWxV/4wVT/z3tdG1nRh6aLufe38YFZ6JddhdtaU30i/xWLL
WvBZHJJ+rrM1GW73PVVYaQ0sbtq2R21Ha2qSGHEwPngV+BakxU3rZ03xcVvL
qi3zhbUbxre+NtSaGsyJ6+P+YxlssP9yxGacNQlv3vZ8c92VXv//1/zzKD/P
r4fyevz7UH4fvx+U98PvF+X98udB+Tz8eVE+L18PlOvB1wvlevH1RLmefL1R
rjffD5T7wfcL5X7x/US5n3y/Ue43nweU88DnBeW88HlCOU983lDOG59HlPPI
5xXlvPJ5RjnPfN5Rzjs/DyjPAz8vKM8LP08ozxM/byjPGz+PKM8jP68ozys/
zyjPMz/vKM871wOUesD1AqVecD1BqSdcb1DqDdcjlHrE9QqlXnE9Q6lnXO9Q
6h3XQ5R6yPUSpV5yPUWpp1xvUeot12OUesz1GqVecz1Hqedc71HqPfcDlH7A
/QKlX3A/Qekn3G9Q+g33I5R+xP0KpV9xP0PpZ9zvUPod90OUfsj9EqVfcj9F
6afcb1H6LfdjlH7M/RqlX3M/R+nn3O9R+j3PAyjzAM8LKPMCzxMo8wTPGyjz
Bs8jKPMIzyso8wrPMyjzDM87KPMOz0Mo8xDPSyjzEs9TKPMUz1so8xbPYyjz
GM9rKPMaz3Mo8xzPeyjzHs+DKPMgz4so8yLPkyjzJM+bKPMmz6Mo8yjPqyjz
Ks+zKPMsz7so8y7PwyjzMM/LKPMyz9Mo8zTP2yjzNs/jKPM4z+so8zrP8yjz
PM/7KPM+7wMo+wDvCyj7Au8TKPsE7xso+wbvIyj7CO8rKPsK7zMo+wzvOyj7
Du9DKPsQ70so+xLvUyj7FO9bKPsW72Mo+xjvayj7Gu9zKPsc73so+x7vgyj7
IO+LKPsi75Mo+yTvmyj7Ju+jKPso76so+yrvsyj7LO+7KPsu78Mo+zDvyyj7
Mu/TKPs079so+zbv4yj7OO/rKPs67/Mo+zzv+yj7PvMAFB7AvACFFzBPQOEJ
zBtQeAPzCBQewbwChVcwz0DhGcw7UHgH8xAUHsK8BIWXME9B4SnMW1B4C/MY
FB7DvAaF1zDPQeE5zHtQeA/zIBQexLwIhRcxT0LhScybUHgT8ygUHsW8CoVX
Mc9C4VnMu1B4F/MwFB7GvAyFlzFPQ+FpzNtQeBvzOBQex7wOhdcxz0Phecz7
UHgf80AUHsi8EIUXMk9E4YnMG1F4I/NIFB7JvBKFVzLPROGZzDtReCfzUBQe
yrwUhZcyT0XhqcxbUXgr81gUHsu8FoXXMs9F4bnMe1F4L/Ng/F8e/D+8GIUX
M09G4cnMm1F4M/NoFB7NvBqFVzPPRuHZzLtReDfzcBQezrwchZczT0fh6czb
UXg783gUHs+8HoXXM89H4fnM+1F4P+cBKHkA5wUoeQHnCSh5AucNKHkD5xEo
eQTnFSh5BecZKHkG5x0oeQfnISh5COclKHkJ5ykoeQrnLSh5C+cxKHkM5zUo
eQ3nOSh5Duc9KHkP50EoeRDnRSh5EedJKHkS500oeRPnUSh5FOdVKHkV51ko
eRbnXSh5F+dhKHkY52UoeRnnaSh5GudtKHkb53EoeRzndSh5Hed5KHke530o
eR/ngSh5IOeFKHkh54koeSLnjSh5I+eRKHkk55UoeSXnmSh5JuedKHkn56Eo
eSjnpSh5KeepKHkq560oeSvnsSh5LOe1KHkt57koeS7nvSh5L+fBKHkw58Uo
eTHnySh5MufNKHkz59EoeTTn1Sh5NefZKHk2590oeTfn4Sh5OOflKHk55+ko
eTrn7Sh5O+fxKHk85/UoeT3n+Sh5Puf9KHk/+wAoPgD7Aii+APsEKD4B+wYo
vgH7CCg+AvsKKL4C+wwoPgP7Dii+A/sQKD4E+xIovgT7FCg+BfsWKL4F+xgo
Pgb7Gii+BvscKD4H+x4ovgf7ICg+CPsiKL4I+yQoPgn7Jii+Cfso+L8+yv/4
Kii+CvssKD4L+y4ovgv7MCg+DPsyKL4M+zQoPg37Nii+Dfs4KD4O+zoovg77
PCg+D/s+KL4P+0AoPhD7Qii+EPtEKD4R+0YovhH7SCg+EvtKKL4S+0woPhP7
Tii+E/tQKD4U+1IovhT7VCg+FftWKL4V+1goPhb7Wii+FvtcKD4X+14ovhf7
YCg+GPtiKL4Y+2QoPhn7Zii+GftoKD4a+2oovhr7bCg+G/tuKL4b+3AoPhz7
cii+HPt0KD4d+3Yovh37eCg+Hvt6KL4e+3woPh/7fii+H/uAKD4g+4IoviD7
hCg+IfuGKL4h+4goPiL7iii+IvuMKD4j+44oviP7kCg+JPuSKL4k+5QoPiX7
lii+JfuYKD4m+5oovib7nCg+J/ueKL4n+6AoPij7oii+KPukKD4p+6Yovin7
qCg+KvuqKL4q+6woPiv7rii+K/uwKD4s+7Ioviz7tCg+Lfu2KL4t+7goPi77
uii+Lvu8KD4v+74ovi/7wCg+MPvCKL4w+8QoPjH7xii+MfvIKD4y+8oovjL7
zCg+8//rO/8fhC+nSA==
                    "]], {{{0.303163192521865, 0.}, {0., -1.}}, {1., 0.}}]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "6.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "5.9`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "5.1`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.5`"}}, 
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {FontFamily -> "Times"}, 
                    StripOnInput -> False]], Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 6.9}, {
                    Style["75%", Bold], 5.9}, {
                    Style["median", Bold], 5.5}, {
                    Style["25%", Bold], 5.1}, {
                    Style["min", Bold], 4.5}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {FontFamily -> "Times"}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}}, {}}, \
{}}, {}}, {}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0.8039430656936596, 4.5}, AxesStyle -> 
                  Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
                  True, FrameLabel -> {{None, None}, {None, None}}, 
                  FrameStyle -> Directive[
                    GrayLevel[0], 
                    AbsoluteThickness[0.2]], 
                  FrameTicks -> {{Automatic, Automatic}, {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
                   GridLines -> Automatic, GridLinesStyle -> Automatic, 
                  LabelStyle -> {FontFamily -> "Times"}, PlotLabel -> 
                  FormBox["\"PetalLength cm\"", TraditionalForm], 
                  PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
                    Automatic}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "c9c28a01-710c-404f-84ed-ff441d2a961c"][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{223., {141., 147.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{223., {141., 147.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.802893211879377*^9, 3.802893219409376*^9}, {
   3.802893266032709*^9, 3.8028932812818727`*^9}, 3.80289412431501*^9, 
   3.8033276401061616`*^9, 3.804286543930869*^9, 3.805820010123355*^9, 
   3.805821193281623*^9, {3.8058214483559446`*^9, 3.8058214715990562`*^9}, 
   3.805821546436493*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"b15bb19e-8ce7-4f0e-ac68-b0e63a285ef6"]
}, Open  ]],

Cell[BoxData["31"], "Input",
 CellChangeTimes->{{3.8062588201290073`*^9, 
  3.8062588202132053`*^9}},ExpressionUUID->"e471476d-6383-4552-8f80-\
1a05c42770da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fisher", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"BoxWhiskerChart", "[", 
     RowBox[{"#", ",", "\"\<Outliers\>\"", ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", "\"\<SepalLength cm\>\"", "}"}], ",", "Above"}], 
        "]"}]}], ",", 
      RowBox[{"BarOrigin", "\[Rule]", "Right"}], ",", 
      RowBox[{"ChartStyle", "\[Rule]", "Blue"}]}], "]"}], "&"}], ",", 
   "\"\<SepalLength\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8028922566644573`*^9, 3.802892291343625*^9}, {
  3.802892351254814*^9, 3.802892352451262*^9}, {3.8028929543764515`*^9, 
  3.8028930699929647`*^9}, {3.80289311220432*^9, 3.802893117277527*^9}, {
  3.802893297154608*^9, 3.8028933013974876`*^9}, {3.8028933407976494`*^9, 
  3.8028933681125765`*^9}, {3.802893406792704*^9, 3.8028934793713064`*^9}, {
  3.802893532879733*^9, 3.8028935427943745`*^9}, {3.802893577871569*^9, 
  3.8028936255393915`*^9}, {3.8028941301094723`*^9, 3.8028941305957556`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"03723490-42bc-4f29-9e4a-245e9ba3df14"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["setosa" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-4.225, -0.19605693430634064`}, {-5.875, 
            2.1960569343063403`}}]}, {
           CapForm[None], 
           Directive[
            RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
             Directive[
              RGBColor[0.982864, 0.7431472, 0.3262672]], {{
               Directive[
                RGBColor[0, 0, 1]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GraphicsGroup[{Antialiasing -> False, 
                   
                   Polygon[{{-5.2, 0.8039430656936596}, {-5.2, 
                    1.1960569343063403`}, {-4.8, 1.1960569343063403`}, {-4.8, 
                    0.8039430656936596}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    Line[{{-5., 1.1960569343063403`}, {-5., 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-4.8, 1.}, {-4.3, 1.}}, {{-5.2, 1.}, {-5.8, 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-4.3, 1.0980284671531702`}, {-4.3, 
                    0.9019715328468298}}, {{-5.8, 1.0980284671531702`}, {-5.8,
                     0.9019715328468298}}}]}, {}}], {"Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 5.8}, {
                    Style["75%", Bold], 5.2}, {
                    Style["median", Bold], 5.}, {
                    Style["25%", Bold], 4.8}, {
                    Style["min", Bold], 4.3}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}]]}}}, {}, {}}}, {{{{{{{}, {{}, 
                 Text[
                  Style["SepalLength cm", {}], 
                  Offset[{0, 4}, {-4.999999999999999, 1.1960569343063403`}], 
                  ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {4.225, 0.7843373722630256}, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}, {
             Charting`ScaledTicks[{-#& , -#& }], 
             Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
          GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{-#& , -#& }], {{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}}}], "versicolor" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-4.795, -0.19605693430634064`}, {-7.105, 
            2.1960569343063403`}}]}, {
           CapForm[None], 
           Directive[
            RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
             Directive[
              RGBColor[0.982864, 0.7431472, 0.3262672]], {{
               Directive[
                RGBColor[0, 0, 1]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GraphicsGroup[{Antialiasing -> False, 
                   
                   Polygon[{{-6.3, 0.8039430656936596}, {-6.3, 
                    1.1960569343063403`}, {-5.6, 1.1960569343063403`}, {-5.6, 
                    0.8039430656936596}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    Line[{{-5.9, 1.1960569343063403`}, {-5.9, 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-5.6, 1.}, {-4.9, 1.}}, {{-6.3, 1.}, {-7., 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-4.9, 1.0980284671531702`}, {-4.9, 
                    0.9019715328468298}}, {{-7., 1.0980284671531702`}, {-7., 
                    0.9019715328468298}}}]}, {}}], {"Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 7.}, {
                    Style["75%", Bold], 6.3}, {
                    Style["median", Bold], 5.9}, {
                    Style["25%", Bold], 5.6}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}]]}}}, {}, {}}}, {{{{{{{}, {{}, 
                 Text[
                  Style["SepalLength cm", {}], 
                  Offset[{0, 4}, {-5.9, 1.1960569343063403`}], 
                  ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {4.795, 0.7843373722630256}, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}, {
             Charting`ScaledTicks[{-#& , -#& }], 
             Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
          GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{-#& , -#& }], {{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}}}], "virginica" -> Graphics[{{
           Opacity[0], 
           
           Point[{{-4.75, -0.19605693430634064`}, {-8.05, 
            2.1960569343063403`}}]}, {
           CapForm[None], 
           Directive[
            RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
             Directive[
              RGBColor[0.982864, 0.7431472, 0.3262672]], {{
               Directive[
                RGBColor[0, 0, 1]], 
               Tooltip[
                Charting`DelayedMouseEffect[
                 GraphicsGroup[{Antialiasing -> False, 
                   
                   Polygon[{{-6.9, 0.8039430656936596}, {-6.9, 
                    1.1960569343063403`}, {-6.2, 1.1960569343063403`}, {-6.2, 
                    0.8039430656936596}}], {}, {{
                    Inset[
                    Style["\[FilledSmallCircle]", 10, 
                    GrayLevel[0]], {-4.9, 1.}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    Line[{{-6.5, 1.1960569343063403`}, {-6.5, 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-6.2, 1.}, {-5.6, 1.}}, {{-6.9, 1.}, {-7.9, 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    Line[{{{-5.6, 1.0980284671531702`}, {-5.6, 
                    0.9019715328468298}}, {{-7.9, 1.0980284671531702`}, {-7.9,
                     0.9019715328468298}}}]}, {}}], {"Style", 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}], 
                Style[
                 Grid[{{
                    Style["max", Bold], 7.9}, {
                    Style["75%", Bold], 6.9}, {
                    Style["median", Bold], 6.5}, {
                    Style["25%", Bold], 6.2}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}]]}}}, {}, {}}}, {{{{{{{}, {{}, 
                 Text[
                  Style["SepalLength cm", {}], 
                  Offset[{0, 4}, {-6.499999999999999, 1.1960569343063403`}], 
                  ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {False, False}, AxesLabel -> {None, None}, 
          AxesOrigin -> {4.75, 0.7843373722630256}, Frame -> True, 
          FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic,
           FrameTicks -> {{{{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}, {{1., 
               Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
               Spacer[0], {0, 0}}, {1.1960569343063403`, 
               Spacer[0], {0, 0}}}}, {
             Charting`ScaledTicks[{-#& , -#& }], 
             Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
          GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
             Scaled[0.05], 
             Scaled[0.05]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {
            Charting`ScaledTicks[{-#& , -#& }], {{1., 
              Spacer[0], {0.008`20., 0}}, {0.8039430656936596, 
              Spacer[0], {0, 0}}, {1.1960569343063403`, 
              Spacer[0], {0, 0}}}}}]], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Graphics], 3], "Meta" -> 
     Association["ID" -> 1116899777364], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90.], 
         TypeSystem`PackageScope`AtomShape[60]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`Atom[Graphics], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["setosa", 
                  Style[
                  "setosa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["setosa"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "8f13539e-5083-4b6b-a587-ef579a35cad2"][{
                 Key["setosa"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-4.225, -0.19605693430634064`}, {-5.875, 
                    2.1960569343063403`}}]}, {
                   CapForm[None], 
                   Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
                    Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    RGBColor[0, 0, 1]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{-5.2, 0.8039430656936596}, {-5.2, 
                    1.1960569343063403`}, {-4.8, 1.1960569343063403`}, {-4.8, 
                    0.8039430656936596}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{-5., 1.1960569343063403`}, {-5., 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-4.8, 1.}, {-4.3, 1.}}, {{-5.2, 1.}, {-5.8, 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-4.3, 1.0980284671531702`}, {-4.3, 
                    0.9019715328468298}}, {{-5.8, 1.0980284671531702`}, {-5.8,
                     0.9019715328468298}}}]}, {}}]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "5.8`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "5.2`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "4.8`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.3`"}}, 
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 5.8}, {
                    Style["75%", Bold], 5.2}, {
                    Style["median", Bold], 5.}, {
                    Style["25%", Bold], 4.8}, {
                    Style["min", Bold], 4.3}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {{}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"SepalLength cm\"", {}, StripOnInput -> False],
                     TraditionalForm], 
                    Offset[{0, 4}, {-4.999999999999999, 1.1960569343063403`}], 
                    ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {4.225, 0.7843373722630256}, Frame -> True, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Automatic, FrameTicks -> {{{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}, {
                    Charting`ScaledTicks[{-#& , -#& }], 
                    Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
                  GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
                    GrayLevel[0.4, 0.5], 
                    AbsoluteThickness[1], 
                    AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{-#& , -#& }], {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "8f13539e-5083-4b6b-a587-ef579a35cad2"][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["versicolor", 
                  Style[
                  "versicolor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["versicolor"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "8f13539e-5083-4b6b-a587-ef579a35cad2"][{
                 Key["versicolor"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-4.795, -0.19605693430634064`}, {-7.105, 
                    2.1960569343063403`}}]}, {
                   CapForm[None], 
                   Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
                    Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    RGBColor[0, 0, 1]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{-6.3, 0.8039430656936596}, {-6.3, 
                    1.1960569343063403`}, {-5.6, 1.1960569343063403`}, {-5.6, 
                    0.8039430656936596}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{-5.9, 1.1960569343063403`}, {-5.9, 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-5.6, 1.}, {-4.9, 1.}}, {{-6.3, 1.}, {-7., 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-4.9, 1.0980284671531702`}, {-4.9, 
                    0.9019715328468298}}, {{-7., 1.0980284671531702`}, {-7., 
                    0.9019715328468298}}}]}, {}}]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], "7.`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "6.3`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.9`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "5.6`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.9`"}}, 
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 7.}, {
                    Style["75%", Bold], 6.3}, {
                    Style["median", Bold], 5.9}, {
                    Style["25%", Bold], 5.6}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {{}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"SepalLength cm\"", {}, StripOnInput -> False],
                     TraditionalForm], 
                    Offset[{0, 4}, {-5.9, 1.1960569343063403`}], 
                    ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {4.795, 0.7843373722630256}, Frame -> True, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Automatic, FrameTicks -> {{{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}, {
                    Charting`ScaledTicks[{-#& , -#& }], 
                    Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
                  GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
                    GrayLevel[0.4, 0.5], 
                    AbsoluteThickness[1], 
                    AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{-#& , -#& }], {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "8f13539e-5083-4b6b-a587-ef579a35cad2"][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["virginica", 
                  Style[
                  "virginica", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["virginica"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "8f13539e-5083-4b6b-a587-ef579a35cad2"][{
                 Key["virginica"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                GraphicsBox[{{
                   Opacity[0], 
                   
                   PointBox[{{-4.75, -0.19605693430634064`}, {-8.05, 
                    2.1960569343063403`}}]}, {
                   CapForm[None], 
                   Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
                    Directive[
                    RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    RGBColor[0, 0, 1]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{-6.9, 0.8039430656936596}, {-6.9, 
                    1.1960569343063403`}, {-6.2, 1.1960569343063403`}, {-6.2, 
                    0.8039430656936596}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], 
                    TraditionalForm]], {-4.9, 1.}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{-6.5, 1.1960569343063403`}, {-6.5, 
                    0.8039430656936597}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-6.2, 1.}, {-5.6, 1.}}, {{-6.9, 1.}, {-7.9, 
                    1.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{-5.6, 1.0980284671531702`}, {-5.6, 
                    0.9019715328468298}}, {{-7.9, 1.0980284671531702`}, {-7.9,
                     0.9019715328468298}}}]}, {}}]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "7.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "6.9`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "6.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "6.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.9`"}}, 
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                    AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                    GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                     GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[
                    Grid[{{
                    Style["max", Bold], 7.9}, {
                    Style["75%", Bold], 6.9}, {
                    Style["median", Bold], 6.5}, {
                    Style["25%", Bold], 6.2}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                    Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {{}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"SepalLength cm\"", {}, StripOnInput -> False],
                     TraditionalForm], 
                    Offset[{0, 4}, {-6.499999999999999, 1.1960569343063403`}], 
                    ImageScaled[{0.5, 0}]]}}, {}}}, {}}, {}}, {}}, {}}, {
                 PlotRangeClipping -> True, Frame -> True, FrameStyle -> 
                  GrayLevel[0.85], Ticks -> None, FrameTicks -> None, Axes -> 
                  None, ImageSize -> 96, DisplayFunction -> Identity, 
                  AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {4.75, 0.7843373722630256}, Frame -> True, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Automatic, FrameTicks -> {{{{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}, {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}, {
                    Charting`ScaledTicks[{-#& , -#& }], 
                    Charting`ScaledFrameTicks[{-#& , -#& }]}}, 
                  GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
                    GrayLevel[0.4, 0.5], 
                    AbsoluteThickness[1], 
                    AbsoluteDashing[{1, 2}]], PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{-#& , -#& }], {{1., 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                    0.008, 0}}, {0.8039430656936596, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
                    1.1960569343063403`, 
                    FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 
                    0}}}}}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "8f13539e-5083-4b6b-a587-ef579a35cad2"][{
                 Key["virginica"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{223., {119., 125.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{223., {119., 125.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8028922600518494`*^9, 3.802892292099043*^9}, 
   3.8028923529834237`*^9, {3.802892981593104*^9, 3.802893070653866*^9}, 
   3.8028931178527164`*^9, 3.802893302089078*^9, 3.8028933691439466`*^9, {
   3.802893412570641*^9, 3.8028934801050096`*^9}, {3.8028935361771116`*^9, 
   3.802893543127145*^9}, {3.8028935809579606`*^9, 3.80289362607393*^9}, 
   3.8028941311989236`*^9, 3.803327644165955*^9, 3.80428654837593*^9, 
   3.8058216042067647`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"3e52a04b-b9cd-42d2-9c0c-1b5601d4c1a4"]
}, Open  ]],

Cell[BoxData["32"], "Input",
 CellChangeTimes->{{3.8062588248471503`*^9, 
  3.8062588249225035`*^9}},ExpressionUUID->"39ee60b4-c46d-4ac3-9257-\
32bec059d957"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fisher", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ColorFunction", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Hue", "[", 
            RowBox[{
             RowBox[{"3", "/", "5"}], ",", 
             RowBox[{"2", "/", "3"}], ",", "#"}], "]"}], "&"}], ")"}]}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Rotate", "[", 
         RowBox[{"\"\<Frequency\>\"", ",", 
          RowBox[{"90", " ", "Degree"}]}], "]"}], ",", 
        "\"\<SepalWidth cm\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}], "&"}], ",", 
   "\"\<SepalWidth\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.802892366400617*^9, 3.802892378342594*^9}, {
  3.802892421911957*^9, 3.8028924318689203`*^9}, {3.802892485188562*^9, 
  3.8028925432688293`*^9}, {3.802892586966663*^9, 3.8028926021614547`*^9}, {
  3.802892752613407*^9, 3.80289275986101*^9}, {3.802892808942713*^9, 
  3.8028928861026955`*^9}, {3.802893125202343*^9, 3.8028931330934873`*^9}, {
  3.802893978802273*^9, 3.8028939851951284`*^9}, {3.8028941482236657`*^9, 
  3.8028942517801485`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"54e07d47-f870-421d-a826-4c33bb6c292b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["setosa" -> Labeled[
         Graphics[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.651]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.651]]], 
               RGBColor[
               0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2., 0}, {2.5, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.5, 0}, {3., 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 1.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3., 0}, {3.5, 26.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 26], 
                 Style[26, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.6799999999999999]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.5, 0}, {4., 18.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 18], 
                 Style[18, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.12]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{4., 0}, {4.5, 4.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                 Style[4, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}}}, {
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {1.95, 0}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{2., 4.5}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
          Rotate["Frequency", 90 Degree], "SepalWidth cm"}, {Left, Bottom}], 
       "versicolor" -> Labeled[
         Graphics[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.63]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.63]]], 
               RGBColor[
               0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2., 0}, {2.2, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.3333333333333333]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.2, 0}, {2.4, 5.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 5], 
                 Style[5, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.49999999999999994`]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.4, 0}, {2.6, 7.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 7], 
                 Style[7, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.5833333333333333]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.6, 0}, {2.8, 8.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 8], 
                 Style[8, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 1.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.8, 0}, {3., 13.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 13], 
                 Style[13, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.8333333333333333]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3., 0}, {3.2, 11.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 11], 
                 Style[11, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.25]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.2, 0}, {3.4, 4.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                 Style[4, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.4, 0}, {3.6, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[
                 1, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}}}, {
          AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {1.968, 0}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{2., 3.6}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
          Rotate["Frequency", 90 Degree], "SepalWidth cm"}, {Left, Bottom}], 
       "virginica" -> Labeled[
         Graphics[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.623]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {
              Directive[
               EdgeForm[
                Directive[
                 Thickness[Small], 
                 Opacity[0.623]]], 
               RGBColor[
               0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.2, 0}, {2.4, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.2]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.4, 0}, {2.6, 4.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 4], 
                 Style[4, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.33333333333333337`]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.6, 0}, {2.8, 6.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 6], 
                 Style[6, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.6]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{2.8, 0}, {3., 10.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 10], 
                 Style[10, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 1.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3., 0}, {3.2, 16.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 16], 
                 Style[16, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.4666666666666667]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.2, 0}, {3.4, 8.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 8], 
                 Style[8, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.06666666666666667]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.4, 0}, {3.6, 2.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                 Style[2, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.6, 0}, {3.8, 1.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 1], 
                 Style[1, {}]]}, {
                Tooltip[
                 StatusArea[{
                   Directive[
                    Hue[
                    Rational[3, 5], 
                    Rational[2, 3], 0.06666666666666667]], 
                   Charting`DelayedMouseEffect[
                    Rectangle[{3.8, 0}, {4., 2.}, "RoundingRadius" -> 0], {
                    "Style", 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}]}]}, 2], 
                 Style[
                 2, {}]]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {2.164, 0}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{2.2, 4.}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
          Rotate["Frequency", 90 Degree], "SepalWidth cm"}, {Left, Bottom}]], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90.], 
         TypeSystem`PackageScope`UnknownShape[False]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`AnyType, 3], "Meta" -> Association["ID" -> 177193379044463],
      "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`AtomShape[10], "Type" -> TypeSystem`AnyType, 
     "Path" -> {
       Key["versicolor"]}, "BaseIndices" -> {2}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 3, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 4], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key["versicolor"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 
                    0.49470040000000004`]], {{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.987148, 0.8073604000000001, 0.49470040000000004`]], {{
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    Directive[
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.]], 
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{2., 0}, {2.2, 1.}, "RoundingRadius" -> 0]}],
                     "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    Directive[
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.3333333333333333]], 
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.2, 0}, {2.4, 5.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 5]& , 
                    TagBoxNote -> "5"], 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    Directive[
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    0.49999999999999994`]], 
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.4, 0}, {2.6, 7.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                    TagBoxNote -> "7"], 
                    StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                    Style[7, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    Directive[
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.5833333333333333]], 
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.6, 0}, {2.8, 8.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 8]& , 
                    TagBoxNote -> "8"], 
                    StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
                    Style[8, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    Directive[
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 1.]], 
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.8, 0}, {3., 13.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 13]& , 
                    TagBoxNote -> "13"], 
                    StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
                    Style[13, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    Directive[
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.8333333333333333]], 
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3., 0}, {3.2, 11.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 11]& , 
                    TagBoxNote -> "11"], 
                    StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
                    Style[11, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    Directive[
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.25]], 
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3.2, 0}, {3.4, 4.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                    TagBoxNote -> "4"], 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    Directive[
                    Hue[
                    NCache[
                    Rational[3, 5], 0.6], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0.]], 
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3.4, 0}, {3.6, 1.}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, \
{}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {1.968, 0}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    PlotRange -> {{2., 3.6}, {All, All}}, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
                   RotationBox[
                   "\"Frequency\"", BoxRotation -> 1.5707963267948966`], 
                   "\"SepalWidth cm\""}, "Labeled", 
                  DisplayFunction -> (GridBox[{{
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {"", 
                    ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 2}]& ), 
                  InterpretationFunction -> (RowBox[{"Labeled", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", 
                    RowBox[{#2, ",", #3}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]& )], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "21710568-49df-4620-bd72-d5a9011bdc51"][{
                 Key["versicolor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{408., {150.5, 156.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{408., {150.5, 156.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8028923683864284`*^9, {3.802892424833316*^9, 3.8028924323518767`*^9}, {
   3.80289248729272*^9, 3.8028925054215016`*^9}, 3.802892543952094*^9, 
   3.80289260280296*^9, 3.80289282908622*^9, {3.8028928659669123`*^9, 
   3.8028928866970234`*^9}, {3.8028931292313595`*^9, 3.802893133626195*^9}, 
   3.80289366564776*^9, 3.8028939807064953`*^9, {3.8028941493303585`*^9, 
   3.802894252230035*^9}, 3.803327654766068*^9, 3.8042865669565153`*^9, 
   3.8058218871023498`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"f5ebf651-5e42-4125-a223-cd513cc39cf1"]
}, Open  ]],

Cell[BoxData["33"], "Input",
 CellChangeTimes->{{3.8062588343107147`*^9, 3.8062588343951187`*^9}, {
  3.806258942063802*^9, 
  3.806258942366911*^9}},ExpressionUUID->"2f07db82-1771-4b8e-9363-\
c69532235e09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fisher", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<Species\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"{", 
        RowBox[{"#", ",", "#"}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Rotate", "[", 
         RowBox[{"\"\<Sepal width cm\>\"", ",", 
          RowBox[{"90", " ", "Degree"}]}], "]"}], ",", 
        "\"\<Sepal length cm\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8028937249242544`*^9, 3.8028937735328946`*^9}, {
   3.8028938159308004`*^9, 3.80289381843731*^9}, {3.802893864406024*^9, 
   3.8028939613749895`*^9}, {3.8028942282626514`*^9, 3.8028942364662414`*^9}, 
   3.802894266594719*^9, {3.8033271964845057`*^9, 3.803327205639512*^9}, {
   3.8033275505558133`*^9, 3.803327627505664*^9}, {3.803327677746254*^9, 
   3.8033278302858562`*^9}, {3.8033278824452085`*^9, 
   3.8033279032754393`*^9}, {3.8033279660453997`*^9, 
   3.8033279701851254`*^9}, {3.8058223292765465`*^9, 3.805822350654994*^9}, {
   3.805822438722687*^9, 3.8058224564064302`*^9}, {3.8058225268845587`*^9, 
   3.8058225569521217`*^9}, {3.8058226197633414`*^9, 
   3.8058226227625914`*^9}, {3.8058226847335644`*^9, 3.805822687668*^9}, {
   3.8058227506041594`*^9, 3.8058228105003133`*^9}, {3.8058241567789483`*^9, 
   3.805824158632944*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"d4bff990-7d94-47c9-a7aa-23368ac8070c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["setosa" -> Labeled[
         Graphics[{{}, {{{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Point[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
               "]]}, {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Point[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
               "]]}}, {{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]]}, {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]]}, {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, 
           AxesOrigin -> {4.26875, 2.1833333333333336`}, DisplayFunction :> 
           Identity, Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{4.26875, 5.8}, {2.1833333333333336`, 4.4}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rotate["Sepal width cm", 90 Degree], "Sepal length cm"}, {
         Left, Bottom}], "versicolor" -> Labeled[
         Graphics[{{}, {{{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Point[CompressedData["
1:eJx1UtsNwjAMDKW8Pwlpm/LDCrBAZmAEJPhlHpgJdoI2d0Z2hKXKOud6ti85
XO7na+WcO36/IefYp+djiBVyZ3Cf3q8hlinzQ7qNUQFH4Dl4QfBpjA54Db0t
6lPUI/AC/3vwZtD3yA71BpjztKhPoNeKXsbB6EfZh+fUy7xG+mee1Se/lnno
F/vb/cm35/RbzxvNPL3xNxb76/0Cci33Rb8ttvtqP2fIuz/9NoWf+r6rwl/2
px/EnJf+2PvQ+/hCX9/Xrx+x9se+Dy/z2Pf7AR6E+Q8=
               "]]}, {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Point[CompressedData["
1:eJx1UtsNwjAMDKW8Pwlpm/LDCrBAZmAEJPhlHpgJdoI2d0Z2hKXKOud6ti85
XO7na+WcO36/IefYp+djiBVyZ3Cf3q8hlinzQ7qNUQFH4Dl4QfBpjA54Db0t
6lPUI/AC/3vwZtD3yA71BpjztKhPoNeKXsbB6EfZh+fUy7xG+mee1Se/lnno
F/vb/cm35/RbzxvNPL3xNxb76/0Cci33Rb8ttvtqP2fIuz/9NoWf+r6rwl/2
px/EnJf+2PvQ+/hCX9/Xrx+x9se+Dy/z2Pf7AR6E+Q8=
               "]]}}, {{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]]}, {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]]}, {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, 
           AxesOrigin -> {4.856250000000001, 1.9222222222222225`}, 
           DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{4.856250000000001, 7.}, {1.9222222222222225`, 3.4}},
            PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rotate["Sepal width cm", 90 Degree], "Sepal length cm"}, {
         Left, Bottom}], "virginica" -> Labeled[
         Graphics[{{}, {{{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Point[CompressedData["
1:eJxtUtsNwjAMDKiUFhA/SG36RKwAC2QGRkCCX+aBmWAnaM8+FBdLlXWx7/yo
D5f7+Tp3zh2/3+BPo1XhNtoqAJfh+RhsIe9tcKNlQfPhl/JeM478nhg6O8GJ
8Dry36/BasaBW/Eb6kMnF1+xP+g0rAdeYeqV0ldq+Pmkf/B7yd8SwyeS54U/
E99QD7yC9WK9lPvT/nV+3b/Or3rAnnx4b/ZbmXqtiXdm/j3ns/z4Hn71dH6d
5/89rKmHvIz7ivtpGNf5Fdu4vUf93/F+7P7qSX96D///tzf9l4x/AMFQF9k=

               "]]}, {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Point[CompressedData["
1:eJxtUtsNwjAMDKiUFhA/SG36RKwAC2QGRkCCX+aBmWAnaM8+FBdLlXWx7/yo
D5f7+Tp3zh2/3+BPo1XhNtoqAJfh+RhsIe9tcKNlQfPhl/JeM478nhg6O8GJ
8Dry36/BasaBW/Eb6kMnF1+xP+g0rAdeYeqV0ldq+Pmkf/B7yd8SwyeS54U/
E99QD7yC9WK9lPvT/nV+3b/Or3rAnnx4b/ZbmXqtiXdm/j3ns/z4Hn71dH6d
5/89rKmHvIz7ivtpGNf5Fdu4vUf93/F+7P7qSX96D///tzf9l4x/AMFQF9k=

               "]]}}, {{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]]}, {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]]}, {
              Directive[
               PointSize[0.009166666666666668], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {{}, {}}}}, {
          DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, 
           AxesOrigin -> {4.8375, 2.1111111111111116`}, DisplayFunction :> 
           Identity, Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, 
           PlotRange -> {{4.8375, 7.9}, {2.1111111111111116`, 3.8}}, 
           PlotRangeClipping -> True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.08090169943749476]}}, 
           Ticks -> {Automatic, Automatic}}], {
          Rotate["Sepal width cm", 90 Degree], "Sepal length cm"}, {
         Left, Bottom}]], "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90.], 
         TypeSystem`PackageScope`UnknownShape[False]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["setosa", "versicolor", "virginica"]], 
       TypeSystem`AnyType, 3], "Meta" -> Association["ID" -> 177313638131054],
      "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`AtomShape[10], "Type" -> TypeSystem`AnyType, 
     "Path" -> {
       Key["setosa"]}, "BaseIndices" -> {1}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 3, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key["setosa"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   GraphicsBox[{{}, {{{
                    Directive[
                    PointSize[0.009166666666666668], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
                    "]]}, {
                    Directive[
                    PointSize[0.009166666666666668], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
                    "]]}}, {{
                    Directive[
                    PointSize[0.009166666666666668], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {
                    Directive[
                    PointSize[0.009166666666666668], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.009166666666666668], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {
                    Directive[
                    PointSize[0.009166666666666668], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {4.26875, 2.1833333333333336`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{False, False}, {False, False}}, 
                    FrameLabel -> {{None, None}, {None, None}}, 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLines -> {None, None}, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], 
                    Method -> {
                    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{4.26875, 5.8}, {2.1833333333333336`, 4.4}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.08090169943749476]}}, 
                    Ticks -> {Automatic, Automatic}}], 
                   RotationBox[
                   "\"Sepal width cm\"", BoxRotation -> 1.5707963267948966`], 
                   "\"Sepal length cm\""}, "Labeled", 
                  DisplayFunction -> (GridBox[{{
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {"", 
                    ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 2}]& ), 
                  InterpretationFunction -> (RowBox[{"Labeled", "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", 
                    RowBox[{#2, ",", #3}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]& )], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "0bc1f643-1740-405b-8062-89c7327f3109"][{
                 Key["setosa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{409., {147.5, 153.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{409., {147.5, 153.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8033276087808404`*^9, 3.8033276283960514`*^9}, {
   3.8033276723560567`*^9, 3.80332767965084*^9}, {3.8033277154657927`*^9, 
   3.8033278312654905`*^9}, 3.8033279718050413`*^9, 3.804286578560839*^9, 
   3.8058223011719313`*^9, {3.8058223453747444`*^9, 3.805822351140639*^9}, 
   3.8058224442083883`*^9, {3.805822669502828*^9, 3.8058226885197477`*^9}, {
   3.805822755651765*^9, 3.8058228116974792`*^9}, 3.8058241594301586`*^9, 
   3.805824189970354*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"12111eae-1fbe-49c8-bd3c-b0e2f6e09e06"]
}, Open  ]],

Cell[BoxData["34"], "Input",
 CellChangeTimes->{{3.8062588401365995`*^9, 3.8062588402497253`*^9}, {
  3.806258945812194*^9, 
  3.806258946083703*^9}},ExpressionUUID->"09e618aa-0fa6-4f44-9418-\
0da3e6397755"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"ResourceData", "[", 
   RowBox[{
    RowBox[{
    "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
    ",", "\"\<RawData\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.80264498649024*^9, 3.8026449883541994`*^9}, {
  3.8026450214722853`*^9, 3.8026450244096317`*^9}, {3.8029066727899313`*^9, 
  3.8029066844204917`*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"eb828403-e6da-492b-99e1-a953290d057d"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.802644988908887*^9, 3.8026450248492575`*^9, 3.8029066848547554`*^9, {
   3.802906719607245*^9, 3.802906766152397*^9}, 3.803328040904729*^9, 
   3.8042865860717597`*^9, 3.8058243860898523`*^9},
 CellLabel->
  "Out[140]//Short=",ExpressionUUID->"bcb8457f-cb7b-4cc0-bb01-5ae7f54b7c33"]
}, Open  ]],

Cell[BoxData["35"], "Input",
 CellChangeTimes->{{3.8062588431469345`*^9, 3.8062588434919434`*^9}, {
  3.8062589600158577`*^9, 
  3.806258960260168*^9}},ExpressionUUID->"afe1bd42-fffd-4aa9-99d4-\
e3469202b7a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"Values", "[", "%", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.80264518824095*^9, 3.8026451939100695`*^9}, {
   3.8026453122201557`*^9, 3.8026453131524153`*^9}, 3.802645536238782*^9, {
   3.8026456883516245`*^9, 3.802645689453921*^9}, {3.802906713234366*^9, 
   3.8029067151360087`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"9ba076e5-b898-49a6-bf50-5348b9a7f684"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.5`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"0.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", 
      TemplateBox[{"4.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"0.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "146", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", 
      TemplateBox[{"6.2`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"5.4`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"2.3`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", 
      TemplateBox[{"5.9`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"3.`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"5.1`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.8`", "\"cm\"", "centimeters", "\"Centimeters\""},
       "Quantity"]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.8026451943096437`*^9, 3.8026453134902105`*^9, 3.8026456898699217`*^9, {
   3.80290670791243*^9, 3.8029067672191863`*^9}, 3.8033280582450047`*^9, 
   3.8042865917145452`*^9, 3.805824412018637*^9},
 CellLabel->
  "Out[141]//Short=",ExpressionUUID->"7478bd93-6d05-43e1-9fa2-c64437edfa11"]
}, Open  ]],

Cell[BoxData["36"], "Input",
 CellChangeTimes->{{3.8062588461773796`*^9, 3.8062588465513773`*^9}, {
  3.806258963086192*^9, 
  3.806258963375025*^9}},ExpressionUUID->"5cdd89d5-837d-4ee6-83cb-\
83459eb255fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"Iris", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{"QuantityMagnitude", ",", "%", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", 
       RowBox[{"2", ";;", "5"}]}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.802645295187978*^9, 3.802645420475004*^9}, {
  3.8026454792082033`*^9, 3.8026455239326234`*^9}, {3.802645694879326*^9, 
  3.802645695818668*^9}, {3.802906737320156*^9, 3.8029067600100613`*^9}, {
  3.804286620837199*^9, 3.8042866216990223`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"74cf2dfc-a214-42e4-af01-f310ddf6edc0"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", "5.1`", ",", "3.5`", ",", "1.4`", ",", 
      "0.2`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "148", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", "5.9`", ",", "3.`", ",", "5.1`", ",", 
      "1.8`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.802645500706687*^9, 3.802645524687219*^9}, 
   3.802645696366043*^9, {3.8029067341855965`*^9, 3.8029067684584527`*^9}, {
   3.803328054135069*^9, 3.8033280605549245`*^9}, {3.8042866180710945`*^9, 
   3.80428662202007*^9}, 3.805824446730863*^9},
 CellLabel->
  "Out[142]//Short=",ExpressionUUID->"3b2bd6cf-f214-4664-8089-e25ff635c419"]
}, Open  ]],

Cell[BoxData["37"], "Input",
 CellChangeTimes->{{3.8062588517497487`*^9, 3.8062588519913893`*^9}, {
  3.8062589881670856`*^9, 
  3.806258988371825*^9}},ExpressionUUID->"04873d3e-0436-4b28-b675-\
631c33b0a0f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Row", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"Iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"Iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"Iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
        RowBox[{"ChartStyle", "\[Rule]", "\"\<SandyTerrain\>\""}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<All Species\>\""}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"ChartLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
      RowBox[{"DistributionChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"Iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"Iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"Iris", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
        RowBox[{"ChartStyle", "\[Rule]", "\"\<SouthwestColors\>\""}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<All Species\>\""}], ",", 
        RowBox[{"ChartLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], "&"}], "[", 
  RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.802906962918239*^9, 3.8029069658370457`*^9}, {
  3.8029076842857475`*^9, 3.802907772712658*^9}, {3.8029078410786934`*^9, 
  3.802907894274927*^9}, {3.8029079430509005`*^9, 3.802908113781331*^9}, {
  3.8029081459807873`*^9, 3.8029081610149755`*^9}, {3.802908389137947*^9, 
  3.8029084014001875`*^9}, {3.8029087297632184`*^9, 3.8029087837562385`*^9}, {
  3.8029090062943835`*^9, 3.8029091239523573`*^9}, {3.8029101406884966`*^9, 
  3.8029101568968573`*^9}, {3.803328156225191*^9, 3.8033281654352474`*^9}, {
  3.8033282078631477`*^9, 3.803328227203292*^9}, {3.803328361509413*^9, 
  3.8033284514277463`*^9}, {3.8033284902012076`*^9, 3.803328513315921*^9}, {
  3.8042867458142304`*^9, 3.8042868206328306`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"25d72a8e-0923-4651-891b-c81ecd6a44c7"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{
        Opacity[0], 
        PointBox[{{0.5097251739635205, -0.29000000000000004`}, {
         4.4902748260364795`, 8.290000000000001}}]}, {
        CapForm[None], 
        Directive[
         RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
          Directive[
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{
            Directive[
             RGBColor[0.658579, 0.316091, 0.207507]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GraphicsGroupBox[{Antialiasing -> False, 
                   
                   PolygonBox[{{0.7312248802544821, 6.4}, {1.268775119745518, 
                    6.4}, {1.268775119745518, 5.1}, {0.7312248802544821, 
                    5.1}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{1.268775119745518, 5.8}, {0.7312248802544821, 
                    5.8}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1., 5.1}, {1., 4.3}}, {{1., 6.4}, {1., 
                    7.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1.134387559872759, 4.3}, {0.865612440127241, 
                    4.3}}, {{1.134387559872759, 7.9}, {0.865612440127241, 
                    7.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "7.9`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "6.4`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "5.8`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "5.1`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "4.3`"}},
                  GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 7.9}, {
                  Style["75%", Bold], 6.4}, {
                  Style["median", Bold], 5.8}, {
                  Style["25%", Bold], 5.1}, {
                  Style["min", Bold], 4.3}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             RGBColor[
             0.9054976666666666, 0.7153413333333334, 0.2960873333333333]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GraphicsGroupBox[{Antialiasing -> False, 
                   
                   PolygonBox[{{1.731224880254482, 3.3}, {2.268775119745518, 
                    3.3}, {2.268775119745518, 2.8}, {1.731224880254482, 
                    2.8}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 2.}], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 4.4}], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 4.1}], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 4.2}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{2.268775119745518, 3.}, {1.7312248802544818`, 
                    3.}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2., 2.8}, {2., 2.2}}, {{2., 3.3}, {2., 
                    4.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2.134387559872759, 2.2}, {1.865612440127241, 
                    2.2}}, {{2.134387559872759, 4.}, {1.865612440127241, 
                    4.}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "4.4`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "3.3`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "3.`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "2.8`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "2.`"}}, 
                 GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 4.4}, {
                  Style["75%", Bold], 3.3}, {
                  Style["median", Bold], 3.}, {
                  Style["25%", Bold], 2.8}, {
                  Style["min", Bold], 2.}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             RGBColor[
             0.8486136666666667, 0.7211989999999999, 0.2780876666666667]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GraphicsGroupBox[{Antialiasing -> False, 
                   
                   PolygonBox[{{2.7312248802544823`, 5.1}, {3.268775119745518,
                     5.1}, {3.268775119745518, 1.6}, {2.7312248802544823`, 
                    1.6}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{3.268775119745518, 4.35}, {2.731224880254482, 
                    4.35}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3., 1.6}, {3., 1.}}, {{3., 5.1}, {3., 
                    6.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    LineBox[{{{3.134387559872759, 1.}, {2.865612440127241, 
                    1.}}, {{3.134387559872759, 6.9}, {2.865612440127241, 
                    6.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "6.9`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "5.1`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "4.35`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "1.6`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}}, 
                 GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 6.9}, {
                  Style["75%", Bold], 5.1}, {
                  Style["median", Bold], 4.35}, {
                  Style["25%", Bold], 1.6}, {
                  Style["min", Bold], 1.}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             RGBColor[0.290517, 0.358022, 0.190234]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GraphicsGroupBox[{Antialiasing -> False, 
                   
                   PolygonBox[{{3.7312248802544823`, 1.8}, {4.268775119745518,
                     1.8}, {4.268775119745518, 0.3}, {3.7312248802544823`, 
                    0.3}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{4.268775119745518, 1.3}, {3.731224880254482, 
                    1.3}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4., 0.3}, {4., 0.1}}, {{4., 1.8}, {4., 
                    2.5}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4.134387559872759, 0.1}, {3.865612440127241, 
                    0.1}}, {{4.134387559872759, 2.5}, {3.865612440127241, 
                    2.5}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "2.5`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "1.8`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "1.3`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.3`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "0.1`"}},
                  GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 2.5}, {
                  Style["75%", Bold], 1.8}, {
                  Style["median", Bold], 1.3}, {
                  Style["25%", Bold], 0.3}, {
                  Style["min", Bold], 0.1}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], 
              "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {0.5543473682799303, -0.29000000000000004`}, Frame -> 
       True, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{True, True}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.7312248802544821, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           4.268775119745518, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.7312248802544821, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           4.268775119745518, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
       GridLines -> Automatic, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Small, PlotLabel -> 
       FormBox["\"All Species\"", TraditionalForm], PlotRange -> Automatic, 
       PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.7312248802544821, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          4.268775119745518, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
         "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.658579, 0.316091, 0.207507]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9054976666666666, 0.7153413333333334, 
                    0.2960873333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8486136666666667, 0.7211989999999999, 
                    0.2780876666666667]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.290517, 0.358022, 0.190234]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.658579, 0.316091, 0.207507], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4390526666666667, 0.21072733333333335`, 
                    0.13833800000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.658579`", ",", "0.316091`", ",", "0.207507`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.658579, 0.316091, 0.207507]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.658579, 0.316091, 0.207507], Editable -> False,
                     Selectable -> False], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9054976666666666, 0.7153413333333334, 
                    0.2960873333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6036651111111111, 0.4768942222222223, 
                    0.19739155555555554`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9054976666666666`", ",", "0.7153413333333334`", ",", 
                    "0.2960873333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9054976666666666, 0.7153413333333334, 
                    0.2960873333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9054976666666666, 0.7153413333333334, 
                    0.2960873333333333], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8486136666666667, 0.7211989999999999, 
                    0.2780876666666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5657424444444445, 0.4807993333333333, 
                    0.1853917777777778], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8486136666666667`", ",", "0.7211989999999999`", ",", 
                    "0.2780876666666667`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8486136666666667, 0.7211989999999999, 
                    0.2780876666666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8486136666666667, 0.7211989999999999, 
                    0.2780876666666667], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.290517, 0.358022, 0.190234], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.19367800000000002`, 0.23868133333333336`, 
                    0.12682266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.290517`", ",", "0.358022`", ",", "0.190234`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.290517, 0.358022, 0.190234]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.290517, 0.358022, 0.190234], Editable -> False,
                     Selectable -> False], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{
        Opacity[0], 
        PointBox[{{0.5097251739635205, -0.29000000000000004`}, {
         4.4902748260364795`, 8.290000000000001}}]}, {
        Directive[
         EdgeForm[
          Directive[
           Opacity[0.7]]], 
         RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
          Directive[
           EdgeForm[
            Directive[
             Opacity[0.7]]], 
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.7]]], 
             RGBColor[0.396811, 0.31014, 0.204105]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GeometricTransformationBox[
                  PolygonBox[CompressedData["
1:eJxlmnlYDWrUt80yVbu53bRlyEymQ2gVmUNm0TEkZB4jc6ajSJRE0aDMp0hK
Ia1FKpGhNOxtijKEEBHSydd3fWt9f7zv+cO59tWmPTzPGu7f3dp9+YR5DerV
q/ep7o//+3/5r7BVy/VF9bTp6xOTw7WJK8Cy+UqdgUptyu14/2fp3lUwv0nh
yahe2pTQ7M91n31rIK7BgIGNx2iTf1VA5vHUtfCtNjJv4XxtuuVzxaC9+XoY
+LvRwvtbtelpx62t6l3YCDt/LPzTM1SbAk59cxvtvQXuVt4/dDhBm5qHdTBc
cN0H9Ct6dam5q01ZMaMGPXbbDtPLj9yc/VqbAhuWa5qa74Tosv+mZdRq0zq9
OTneNbvg/Sv3zx1NdMja3HNS4p/dYPsya1eArQ6d8l3V095mD3g/62JeOUqH
otd4PA9e4w+kCUyY6qFDaVPejen9LgC0CqtGpG7WoQyPdqkO6QdgXN6MYtVh
HToZdTL8S/sgCLlPXrvidSjsr6LUqVEH4fmddi3fZ+vQXrfoK0Y9DkH7rD3R
Y0t1qNvXOMWdwhBYlv6536UaHTIJNpnd6NAReDzr3NsWLXTpyIrI+LGLw6D2
2dOeaca65JiZ/qnv9GNg7aazZUVbXcqw3nTb2D0Chj12zLa21aVo/+KkBMco
WDRtjUHBIF26H/xmMMw6DvsKT83aPUqX6v8qfPPYLxouTtKc6z9Vlzy7+A05
eyMGCvJaVH2Yq0vJmjfOt5uchF8u9o4RK3SpSUUfDxfXU2D+YIW/y2Zd0s4q
j3W7chocxsQUNdijSw/CDp/92P4seNwtsE4K0aV10z8ZKaLPge9IrWULYnTJ
L6LcJqdTLMRm2V0xjdelDsPKdKxuxMGDoUsb5aTq0seHZT2bzLsAlemR47Zk
65KH7f4Rg/bGg/HgvLAehbr08+/XyiuLLsIAavSmpESXzjhfD6x0SYCZ9n/Z
HvqsSwPcFy14MegSbE9duGl4jS5tnO1d5m2bCKfsjmX90lLQ5jdRpYmdk+BO
yn29WEMF7XJwU+3tchk+9a0/c6a1guo7YsuvvZJBkdTrrG53BY36qioqdkyB
Pr3mf7s5QEFtHRw3j5pyBVwvHgGvEQp6dNLhbueVV2FT97t7bCYrSJeCT6wO
ugZRcf8VaOYoaJrj3RkmV1PhVucerf2XKSjh3J8CnbLrUHbWfYn9xrqfHxji
MtYcoWWHQ8kVuxU092aI/9zOBD1OZTWICVaQxijG4vJdgoltq8dMPq6gzhmf
WhgvvwHroruENj2vIJd8Z8VWw5twVDXr1ZWrCjpcM//dy7SbkBYR2H1JloIs
NpS86LU4HUrMb22wzFdQSlVm6QLlLWhytCrj4QsFHfMfbrYs5xZ0Mu2o2PFR
QdCxon3vbRkw9vAMtz7VChpX451xol8mrDIMOP22iR45OOVvOv01Ew4dpK+h
+nrk28fzpepCFlxRVA5yVunRl9yVzhVLb8Oz/e38arvoUQ+bwHVfumVDPe1p
+fH99ejHmLgWNV+yoa3/Hqu5w/ToRqblyZLLd2BE8+uLDCfq0bGInq9Wbb4L
S3w/J2XN0iNLry/2XkNz4EAT6/obluhRBzNNcaz2PUjcOcm5y3o9Clrb4YJa
fQ+KGuw+/HyXHl15bt4gPuY+/Pa5UnIgSI9Sn3V1fb3sAVj9+dB1SKQe6axv
dEbf4iEM3my5/vu/erRaq/2S/dsfwvzfLrdOp+jRUU2Nccrbh7Bn/Q6d6Rl6
dKCqWeTfzrlw/kfS9JZ5ehR6+Gb9sfG5kOdVdjLtuR6dXHOm1RT9PKiqVH5Z
8UGPPP1Gujh45YHpqjED2/zUoxlHOvQoLMiDQRVbdxc00idlYmeHl70fwZxl
CXm7Ffr0a+QNj05Bj2Bn+SsLO0t90t/+5MSGj4/gzCLjheWd9Cl42MFjR4fl
Q07ZyMSIv/RpdPfx36aG50PF/E1/XJz06a+CT202fckHg9fnRzUcr0+uZ1YO
LBxcAP3mvjyU9Lc+eXbavqNvYAHMeKn/csEifXL8ZVyx4mkBbJ01rItynT45
lR+LcGtbCDHPvNfl7NCn081zA/I9CyFzxr83txzQp5IP4TopZwvhveZZK9tw
fVpjcMr6w5tC0J6m61p6Vp/+XTxwzlRVEfQsHHzi0GV9mrdsWbcPk4tgyiSv
z8PT9WnpvtTZobuLYEPeabvqB/rUL3DefrekIgh3ebwr9qk+NbD94de7uAhu
3G+ZO/OdPr07c6STTWM1vHIGc0WVPnUfs2K6g40atO6uXJDewIDGGOs1Dhqq
hi4jTyR46RhQ1I7vE3vPVoNLVuF/NuYGlD1v2H9O69SwZmizkY87GNCS9TUv
Xu9Rw5H0AcH+fQyotjQ+C46qIdVxWbH9YAPa49YicusZNRRjVKcvYw1olGvA
+cIENTS0f+QVM8OASjTnzTdcVUP71MY3JnsaUMOevTyjUQ2j7Pq11PIyoNDH
fs323lTDspRFU69uM6CicQHXV6arIahvePSSAAMyGbQnLLju55cTH3y0PGpA
g46WK3qTGh73bNA/97QBHfgU6HYgVQ218b137kg0oMaeDSa9S1ZD6+4LHvS5
YUBegU/ub657PUPjQpVl9wxo7CWf+ntj1eDZOWde2GMDGlE/oXL0KTX4n62N
d35rQP+6+tf+jFRDvI1tTW2lAdWbVrE/M1QN+SfnDr9Yz5C866k+vT6ohp9t
QoLmtjKk1pbOn3YEqME8+vYzQ6Uh+XWBe7f91OCg+t3hdntD2pAf/6Jolxrm
RnRds6GXIc2pGOz6YLsadpvPxi4OhpSWbm1320cN58KCmhc7G1LEaKcXhVvV
cN8kY3KgqyEdWxw/vWndz7+G/IgaMt+Q0O5Gh7nb1GBk2Kn8+ypD+mX1bffH
HWqwO+j215mthqR0rOd/YrcaZir2b5/ub0hW845P2+avhu37b9xrGWpI+nMa
LvIOUsPJVt9M8KQhOQ2t+by+7v1l723vsTLBkFz67D+46rgaypu5XmiDhmS3
3GvQqHNq0PXdW11w15DerjaoenNJDb2bpA31VRtSTueivM5papi2s+KA3WtD
evM0s/DXbTVsatDmafkXQzLbHby2R74aonwm20TWGtKk1N8W54vVcKt296rx
LYwowf1UossHNbzddPV6QxMjylCE3qqqUkOL3+Val9saUXePtSGbG2ig23qr
SZ62RvRrV1D9jFYamPBjfKTS3oh+XhiTE2eigbVeO9/njDIin5DYvco2Ggir
vNxn61Qj0gosblzRRQNpK9/52HoYkes8xW7Dvhoo+WyWU7rCiDL/9e3kZa+B
JsvGGodsNiLD0OODaoZqoGO5j/uIPUZkatHqVZizBsYsuhRXHVL3+3/4/HCa
oIEVZa9/xsbUPT85PfTLFA0EzzdxmhVvRJ0aREYfna6BlFej9iuuG9HkqSF9
HP/WwFP3zY/Ts41oW8T+3NKZGqj38kK7tYVG1LhPwkjfWRpoO6tkRYdSI4L8
7It96x4Pf2aQ+vizEfmG+f77q+7vL54xvOm+GiNKilHcez5DA/s16ydAM2N6
eXXb7e/TNJAwNTb8i6ExNbXoV+syWQOFBc/LYqyN6czGPQMbjddA9URF7ynd
657f/KdP27r3Y5k3ZKvWQGOKu1fS5PYwDQx2WXvn6ghj8rm917SJowbm3z9j
uHSyMf1Iz5v53U4Dfs5PZlu5G1NNvYbKuN4aiLvTKjZ3mTH9pVXWwKmbBnJH
OPzYsdGYLijLTR/aaOBb5qrBfX2NSfFpetf5rTVgMvTkvrJgY/ItO7/W1EwD
A9OL1GHHjWnJhlNbfhtoYLZj87ZjzhvTjkOzSsx0NLATBy7/c9WYzlr6xu9u
poEzg5ZfvZhV9/q1dpwa2UgDd68db+yRb0zr21SGL/yjhs/9812MXhpTRvZR
1cdqNeilNDl2+6MxvbYOe1RYd5769u3/dkO1MU3WKbjVrlIN0xMX9+za1IS0
d9q6FX5Ww5aeEZuL9U3ozZs5bUrK1RAd//B2oMqEXiUFb4T3asjs1tDAqasJ
NZxpp13yVg3vY/vMqupvQrmT4m5efa2GVp09z50ZZkKzBgcYp5SqwfZs2Pfp
E+sen/cflflSDZNs7jm0mm1CLhO2tXhQd/69T/7Zi0tM6L3XwzFXn6nhWJue
RSvXm9CMCT2nLXuiBjruYd32HxOqHJ/Y7KG6rp5bHV5aGGRCowYUtE4vqKvn
EdkpvpEm1HVwjEunvLp6bl7TcECsCT0o3tSs7J4axoV1G/cxxYSGq/saFtfd
x9Umc8IiM0xoU2KJ6Ze6ehoScvD1+DwTepLaMqxeXf28apDZo1GxCc3OeJtV
UXe/nwf93Hj5gwm56yX7nay7/w0UnbM8f5pQjt3YFw2j6ur5/r/1zBqb0sjd
Llpf6+rhqFYH/r6nMKXB1q0fT/2nrp7vvXlmq6Upnd4S986qrp8ENvteadvZ
lCKj7vzuPV8NSbtt4NVfpnT5zIDtOyeqQd14+p4QJ1NK+fTCudZeDTU7/AtG
jDcldzMf9cEOalA1QNXvv01pavNHof101eDk82Vx3CJTKtCJOVbyvQg8a9sk
z1pnSgYWxlf9NEXgv2lKA72dppS8qrdDp2tFEF/tO+bWAVMqbq+1EsOK4JH3
tSNrw03pvfWxl8O9i+BH1cfSDudMaYBytvmtiUWg9FJ1f3LZlNI+hOzu27UI
7CsnbNiXbkorvxaPiGlUBO4rd2XAQ1OKbnr/p87jQvjnc7Lu16em1PplotOO
uEI4t/T9jBPvTKnUIupu062FcP+D+ekpVaa0IfRI31NjC+HrwnFftRoqKfZc
J/+F5oVgWLZt0DUdJVXq/lP8d1kB9J+f6LvUXEkdP/Y2P5BQAG6v3jyy6lj3
eLFLdquNBeDjbmqV10dJGb2sxrx2LIATL0Yv2jlYSa8/u9m1a1oAt2duSeo7
TklT+h1s8vxOPpQ/ja/3boaS2ri/aWy1Lx90Z5SOPuqppDzHUP+fY/Kht8bw
8BgvJbms7+O8sVU+TJ06ouTPNiUdDV7snHL3EWws2NA1IUBJq8b5vSHfRxAx
Mc7b46iSdvltuXnK6RHczC1ONzqjpElXa1I2/smDN+P0dLITleRtqXCdcCUP
mt93mr7xhpKWHr9sMGhVHnRzXney630leQ1Y/nRspzyYcOdsRfFjJdWW7/kV
9jIX1o54OiDorZI2l3VQ9DmSC6GZ2rudvinp/dzA9rZjc+G6k2NeVT0zypi8
41hMw1x4cXO1xdlWZnQg2d8rKuUhNHI85TlDaUZ/sOFy+6UPoQOqL7WyMSOL
ZrXtg1o/BOdBLf5gLzPaUmCf7v7vA1hxbdCoVQ5mdOJQ+SoP/QcQ3H/FobZj
zKjE3stgysb7kJwc/aLQ1YxeGjjf9ii9B0/6FHT2m29GZ9Jtq6+Pvgd/LjVd
N2B13eORbyL2JeaAdU+7mx+3mpH6dZtLjSxzYFj8klZR/mY01+GQwTjfu7Co
W+S0CaFmVKqV8W9o5R0IiM2NaXTKjKoy3lsrZt+BhE6NPl9OMKMAl5J1L+9l
Q8GZvnYL0YwOz+p/r8+gbPjVfuEusxwzmpfgOaDf+dtgcfLow3tqMzp0V3ea
buvb4NjmvpnPazPy+Nm3V9mhLJh3vN6Cnl/N6MWvyuRXLbPA16pXwqtaM3q9
8k12x38yITZ83n8hLcyp1K93tqZ+Jjw0OzJipIk5OR+OVBr6ZMC30DsHf7c1
pxEaal5dLwOMTf57HmdrTvOchyed2HkLBoR07zTb3pz2hv9w7driFswycPfS
G21ObQqLvM8Hp8OOoGC6NdWcPm0aOHZg63Q4rZvVYp2HOYVXTPpcFn8T7gT8
mtJxpTllubaNvDXkJnxq2SX6yWZz2v/9V+dnmhugt3fmx317zGnt0qTPg1bf
gL7NAvs5HDYn6+WOeZ91boDr7vQdX2PMKVo3U+vnBYLNjavun4g3p3aW2aVu
EwmO7+ignHrdnPRyI1bAN4SM+jPmNbtjTt3+q56+ZQTCu6374q8VmpPfZ4PA
FTFp0LIWfy8tNafArv9tb9E4DXps+jpMVWFOfy/6ru+w9DpMqm4blFdjTv+5
ap+ufpIK3t5Tn+1sZkGF4UO7WY9PhaNVfh3+MrKgQ2ufZh7NuQa4JnX1O2sL
sg5afHzY2GtQ+vVT2tHuFnS3fGNhTcFVaLqydfOxAy3Irr1JefDcq9Dp88TJ
9UZaUHjWbZuXVVdg7NJ/ohImW5Beu3HHLuy/Aqs+pHzwcLegUYM97e50vQIh
Cz/0NV5uUdcP36q+P0yBq28ttmdvtKAFI39mf/NOgWfzXO5t9LUg14hYS992
KVD/1XaTbocs6F5Lm5IFhcnQzj1p7ovjFhRje1F79N5kGPni7fmg8xaUpBju
+npIMiyZqax2umZBuQOOrH775zIceOo89EdW3e+v0J72J+0yJE7feuBsvgWN
PXVRp8jnMqjVF5/MeGlBiR72Rsqhl6Fmyqv22p/qfv/xRhUrW1wGqwKjVVRt
QbEj2gXueJQEQyaOvL6qqSUNCTns8P1YEizI3ajVzsCS2uZ067B0QRLsHXd+
YpHKkkaPGFIS2DMJzt97EeHX1ZJMPnZq1aI2EfJG678fYGdJrSYWVPtkJ0JV
9tA+n4ZZ0tE38z9GBieCcoS3T9RES+o5enuE8axEsM88d3fCbEsKst/odKRD
IsxxembUeKklZWUNCCyquAS7buq4J6+3pMJr7bP3J1+Csw6D4xb+Y0neefPG
+Gy6BPfS1vw0O2hJkbOqzJfBJagYeHrI/UhL8mh8IsC63iUwuKYJ8Im1pNI1
9jor0hKgX/+Wj3tesaTHmXfce21IALdk+3avMyxp7LSt80f0SgCfPitXHM6z
pB9lH5qGvLsIMZdiro0stiSv1xcuNw+/CFm2hU1qPliS04L6G46NuQgfLmhN
OP/TkhaG9qkc8TsedLoNCJ/d2IrmDXnZw+BUPPSMXVqmp2dFJ64/iG0+Nh6m
dIrqlWFpRW59ddD3zQXYcCZvy7rOVrS+OOTwxc4XIKJ94zsd+1mRsnLg/LzF
5+Hmib8MnzpZUbXWkP/6n46D19aLZgeMt6LU7I4HBz+PhWbHj/3rMLPu+dMz
0lwUsdDV6kHV10VWlByea5nr8C+MD68/+OQ6K5rwqmBNv6XnYI1Z731Td1rR
h5bKh80Pn4UjofPVzQKtCD63pYy0M5BqHNomNdyK8mPPtqt4dRpeHLq7bNk5
K7pkf+iTfvPT0NCg9ooq2YqiAt7fT+12CmyCejR+lG5FHX0O/1k78SSM1p3r
suuhFf1e3fDcPe8TsDzg0NG/nlnRlrRhe0ZGxsDBlrffvHtnRbMU286uyYqG
y3uqbY9VWZFmWYOgB1+Ow9KdIfan66topktefbXlcdia3t2jnpaKItu1e9V4
XBQENsj2c9VWUaNrrUwPNY6EaEf3CwkGKprQ7piRyiscEn1+57cwU1Gp6XLP
5R+PQiYGV3u0VtHWMreWXZaHgbq2qyrNRkVFLdsrjX8fgfeDsoYad1NRu2We
mecDD0PNptmLV/RWkVv2/rSVvUJAO/XXgWw7FTUNO/93zotgUP0OumztqKLe
uPqKSdhB6GnX5enG4SoKujv0ccSsIHBan1G/YIyKKsuKC4JtA2FKykybbpNU
pP79dYNS9wB4/vjhvHu6irYPjz8dXbUPNvQNXPVitorGV8fFL32zF/y9Oh3p
v0BFd2/ld9/+2Q/CE9OvBy2tez0h2aPjFb5wodKt9MNqFbnaPrA97/wP3OhZ
pTV0g4qiZ8R1VUbthEcr93eL8FFRZsyfvE0tdsCr+A6Tfvyjoj9trj63C9gG
VZ9vrHfZp6I5isMXntj4gFb3GZFnD6qo5bKcXIcLm0G57NutBmEqmtKhy4uo
/huhS9y+9zOiVBSzfNvB8R+9wb68vW7SKRW1D4+dc+32WnDpTH2041TUpN8j
0/531oD7ItcZCy7VPT/neLhZxSpYc/arD11R0dBhNrdO9lsJ/5TtPWVKKhK+
fsSmXc6qzP/9mJ+P8nz+91D+Pf59KL+PXw/K6+HXi/J6+f2gvB9+vyjvlz8P
lM+DPy+Uz4s/T5TPkz9vlM+bvw+U74O/L5Tvi79PlO+Tv2+U75vPA8p54POC
cl74PKGcJz5vKOeNzyPKeeTzinJe+TyjnGc+7yjnne8Dyn3g+4JyX/g+odwn
vm8o943vI8p95PuKcl/5PqPcZ77vKPed6wFKPeB6gVIvuJ6g1BOuNyj1husR
Sj3ieoVSr7ieodQzrnco9Y7rIUo95HqJUi+5nqLUU663KPWW6zFKPeZ6jVKv
uZ6j1HOu9yj1nvsBSj/gfoHSL7ifoPQT7jco/Yb7EUo/4n6F0q+4n6H0M+53
KP2O+yFKP+R+idIvuZ+i9FPutyj9lvsxSj/mfo3Sr7mfo/Rz7vco/Z7nAZR5
gOcFlHmB5wmUeYLnDZR5g+cRlHmE5xWUeYXnGZR5hucdlHmH5yGUeYjnJZR5
iecplHmK5y2UeYvnMZR5jOc1lHmN5zmUeY7nPZR5j+dBlHmQ50WUeZHnSZR5
kudNlHmT51GUeZTnVZR5ledZlHmW512UeZfnYZR5mOdllHmZ52mUeZrnbZR5
m+dxlHmc53WUeZ3neZR5nud9lHmf9wGUfYD3BZR9gfcJlH2C9w2UfYP3EZR9
hPcVlH2F9xmUfYb3HZR9h/chlH2I9yWUfYn3KZR9ivctlH2L9zGUfYz3NZR9
jfc5lH2O9z2UfY/3QZR9kPdFlH2R90mUfZL3TZR9k/dRlH2U91WUfZX3WZR9
lvddlH2X92GUfZj3ZZR9mfdplH2a922UfZv3cZR9nPd1lH2d93mUfZ73fZR9
n3kACg9gXoDCC5gnoPAE5g0ovIF5BAqPYF6BwiuYZ6DwDOYdKLyDeQgKD2Fe
gsJLmKeg8BTmLSi8hXkMCo9hXoPCa5jnoPAc5j0ovId5EAoPYl6EwouYJ6Hw
JOZNKLyJeRQKj2JehcKrmGeh8CzmXSi8i3kYCg9jXobCy5inofA05m0ovI15
HAqPY16HwuuY56HwPOZ9KLyPeSAKD2ReiMILmSei8ETmjSi8kXkkCo9kXonC
K5lnovBM5p0ovJN5KAoPZV6KwkuZp6LwVOatKLyVeSwKj2Vei8Jrmeei8Fzm
vSi8l3kwCg9mXozCi5kno/Bk5s0ovJl5NAqPZl6NwquZZ6PwbObdKLybeTgK
D2dejsLLmaej8HTm7Si8nXk8Co9nXo/C65nno/B85v0ovJ/zAJQ8gPMClLyA
8wSUPIHzBpS8gfMIlDyC8wqUvILzDJQ8g/MOlLyD8xCUPITzEpS8hPMUlDyF
8xaUvIXzGJQ8hvMalLyG8xyUPIfzHpS8h/MglDyI8yKUvIjzJJQ8ifMmlLyJ
8yiUPIrzKpS8ivMslDyL8y6UvIvzMJQ8jPMylLyM8zSUPI3zNpS8jfM4lDyO
8zqUvI7zPJQ8j/M+lLyP80CUPJDzQpS8kPNElDyR80aUvJHzSJQ8kvNKlLyS
80yUPJPzTpS8k/NQlDyU81KUvJTzVJQ8lfNWlLyV81iUPJbzWpS8lvNclDyX
816UvJfzYJQ8mPNilLyY82SUPJnzZpS8mfNolDya82qUvJrzbJQ8m/NulLyb
83CUPJzzcpS8nPN0lDyd83aUvJ3zeJQ8nvN6lLye83yUPJ/zfpS8n30AFB+A
fQEUX4B9AhSfgH0DFN+AfQQUH4F9BRRfgX0GFJ+BfQcU34F9CBQfgn0JFF+C
fQoUn4J9CxTfgn0MFB+DfQ0UX4N9DhSfg30PFN+DfRAUH4R9ERRfhH0SFJ+E
fRMU34R9FBQfhX0VFF+FfRYUn4V9FxTfhX0YFB+GfRkUX4Z9GhSfhn0bFN+G
fRwUH4d9HRRfh30eFJ+HfR8U34d9IBQfiH0hFF+IfSIUn4h9IxTfiH0kFB+J
fSUUX4l9JhSfiX0nFN+JfSgUH4p9KRRfin0qFJ+KfSsU34p9LBQfi30tFF+L
fS4Un4t9LxTfi30wFB+MfTEUX4x9MhSfjH0zFN+MfTQUH419NRRfjX02FJ+N
fTcU3419OBQfjn05FF+OfToUn459OxTfjn08FB+PfT0UX499PhSfj30/FN+P
fUAUH5B9QRRfkH1CFJ+QfUMU35B9RPz/PuL/8xVRfEX2GVF8RvYdUXxH9iFR
fEj2JVF8SfYpUXxK9i1RfEv2MVF8TPY1UXxN9jlRfE72PVF8T/ZBUXxQ9kVR
fFH2SVF8UvZNUXxT9lFRfFT2VVF8VfZZUXxW9l1RfFf2YVF8WPZlUXxZ9mlR
fFr2bVF8W/ZxUXxc9nVRfF32eVF8XvZ9UXxf9oFRfGD2hVF8YfaJUXxi9o1R
fGP2kVF8ZPaVUXxl9plRfGb2nVF8Z/ahUXxo9qVRfGn2qVF8avatUXxr9rFR
fGz2tVF8bfa5UXxu9r1RfG/2wVF8cPbFUXxx9slRfHL2zVF8c/bRUXx09tVR
fPX/6bP/H5F9tAs=
                   "]], {{{0.6779446715082128, 0.}, {0., -1.}}, {1., 0.}}]}], 
               "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "7.9`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "6.4`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "5.8`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "5.1`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "4.3`"}},
                  GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 7.9}, {
                  Style["75%", Bold], 6.4}, {
                  Style["median", Bold], 5.8}, {
                  Style["25%", Bold], 5.1}, {
                  Style["min", Bold], 4.3}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.7]]], 
             RGBColor[0.726732, 0.538136, 0.31593]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GeometricTransformationBox[
                  PolygonBox[CompressedData["
1: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
jkVfa8Hs6vGhN5vr0L9LL8TF1tTCLffjXlM665D2X601E8pqYfWI47mv+umQ
dc8LM/berYUWBsf11v+lQ+1uRalOT68FKoh0VpukQxttnEb/FVELKw9FBh6Y
r0PdIOzJpl21YPJ3ZIG5qw5Fv1XT7zSnFrLaRpok7dShrnn5Pb3tamHxq2NT
IECHHHT2XnymqAXDU8dC88N1yLWx/bM7dz9BusuxkjkJOnRl46B2j9Z9gnl9
jrX6kKFD49ZN819q+gl0vkbM3nFLh+Y1/k5vkvIRkjMjIvUf6ZBX3Pc+65w/
wt+7I16Gv9Kh+7WzdZtVfgD1oREWlnU6FNbKDw5t/QBndSIWX1LRpaS0smW7
DD/A1HtH40ca61LJYf/Xs6NqoOHA0TeP2+iS1TVLl3TrGjg57ajlMitd8hxo
9k735nuY0Pqoy1d7XfrZKvxK/vT38P1F+Lm9o3SpR1Bz1Q3v30FMbHit6Yw/
P/82VXX+nncwZkW4dexSXfIbNOjrp2bv4HOP8A19N+rSpA6uM7ecfwvH6o6k
X/fQJY0NFqOcRr+F4RlHvk0M1qXQ77tS/avfwKftR+zLo3RJL0anfJ/3Gzg8
+MiONed1ybvbl9D1lm/ASfPI1cYrurRWg5ovKKiGd7cPq+y/q0tObw6WrN5a
DSGBh4e0faZL+xp6+J/tVA0Okw97Jr7VpTXZ1bnmj15DVfPDtxy+6VJ24Fib
296vIbA0TOeulh4NSJqYFz7oNdhGh42e1VSPwo926ez+tQpeLgkLeNdBjxYH
q71blFIFvpZh+Vut9aj1lX97tllbBdafQhW6TnqkOid3iqd1FTy7EDrp8Hg9
Sg9a3n3510rw3BJ6sMtcPXr81jogOKsSegwKLU530aMfSYpbOZ6VUKwa2mL4
dj1a1mOV261xlbD71qG/H/nqUZsVDUPGtqqErv6HIhYf1qNvvZYtNa1+BQ/G
Hyqrj//zdZ8n5kWpr2Cb6SFzjzQ9sj2R23ywxyuweHJwoUm2HlnVLm1qMukV
3D12MDa6UI8278tRqrZ/BRsWHnzdu1yPdi6b4pDzqQLadjnYlT7pUaT/FxWL
qxVw633IyvENepQ9uq1GkX8FrEkKOVtmoE9xS9sPjZ5RAS02hnxc1VqfzNr2
s5/ZsQKuDwjp/bubPh02fhGZ/7EcVjYErwuw06fqx522lGaUg+mN4NTWI/Qp
O6zSbPHucsjyDv56eqo+RQwLsZwyrByWOgfb2S/Wp2HWHnHHdcvBSBm87fY6
fXJeG0hD7r6Ei48OZM1w06ffbnfN/9r3EuaHH2io3q9PH4Ys1z7v/BL05h0Y
vDlSn7JcZmse03sJKR0OuGsl/nn98rutpge+gNlvgrIPXf7z/5mH7qlovgCN
xCCtTnf06RVZ6wRtLYNza4NGppbo0/2jERUrap7DNJsgv7+q9el4StzJX3Oe
g8rP/XcLv+hTfaZHHuaXwincb7RQw+DP5xln0AdKYZLn/gn/mhjQz18XdxSc
fwY/Ru4P3tPegEKTtpZ0bv8MYg33PzTubUCTQtOuXwx5Cs6Fgc2OOxrQlKIh
zXR1nsLX0MAZPcca0Oke6zIO73oCkbMCw6/MMqBr9wccePVfCYw0Dyx1XmlA
Kwbn1szdUAK1lfvalm4xoC2urd9t/vxHjyXsm/+PtwGFL/JrE7zlMQxZvS/m
xyEDChz4z1Qt1cdQY72v0jfWgIyGp1a0DyyGg/8FdG55wYBWTbRw72heDI5Z
ActPXTMg57Rp3Z0yHsHrPQGnbQsMSOXm4pyIyY8gaFhAza0yAxqvMyJv5JeH
YKcX0HPaBwMqG518d2rEQ6jI919T9dOAFH4Vc66MfAh+If4pG/QMyb5bqOqy
H0XQb4b/Z/WWhjQ4/Ixt7+QiKDXztwnpYkgrnvZu8talCLzK/bZY2BjSxOt6
76b0KIKe8X6ZyUMNqbHpV8vudYVQstLv1+DJhvRq4tHpLS4Xwp5efo4FCwzp
bLsm5uhdCJaffffMW2NI1z4VR1yaXgiFF32vf9xlSG5zkk+EWxbCjp2+Grv2
GVI5Fff91PgAOg7xHW4YYUjH91R8hscPIF/L1yfitCEpn04oViQ9gE15Pne6
XzKkJaXz5r31fQDmQT4Gl3MMqb9Jh5XjFz+A3Ck+40YXG9LJiIxWuY4PYE1L
n6AnlYb05GablmUtHkCrMu/C5fWG5N/plln7ugK4HuNt+k3ViGr7HZjd5U4B
uCzznuatMKIdV12qAqMKwNTK+3Czdkb08lvbwoYNf/xKrdfTuB5GlBxrO6/r
iAJYmuZl1t/BiFLnmrTPbfbHr2zzmps92ohC9p+PGZNzHy46ekVNnmlEOSWt
C7vPug8L1b0qKpYZkfOm74vq3+SDXu7ejus2GdGtv1d6b1uTD6kBe5eq7jWi
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
XvE8Q5lnPO9Q5h3PQ5R5yPMSZV7yPEWZpzxvUeYtz2OUeczzGmVe8zxHmec8
71HmPe8DlH3A+wJlX/A+QdknvG9Q9g3vI5R9xPsKZV/xPkPZZ7zvUPYd70OU
fcj7EmVf8j5F2ae8b1H2Le9jlH3M+xplX/M+R9nnvO9R9j3rARQ9wHoBRS+w
nkDRE6w3UPQG6xEUPcJ6BUWvsJ5B0TOsd1D0DushFD3EeglFL7GeQtFTrLdQ
9BbrMRQ9xnoNRa+xnkPRc6z3UPQe60EUPch6EUUvsp5E0ZOsN1H0JutRFD3K
ehVFr7KeRdGzrHdR9C7rYRQ9zHoZRS+znkbR06y3UfQ263EUPc56HUWvs55H
0fOs91H0PvsBFD/AfgHFL7CfQPET7DdQ/Ab7ERQ/wn4Fxa+wn0HxM+x3UPwO
+yEUP8R+CcUvsZ9C8VPst1D8FvsxFD/Gfg3Fr7GfQ/Fz7PdQ/B77QRQ/yH4R
xS+yn0Txk+w3Ufwm+1EUP8p+FcWvsp9F8bPsd1H8LvthFD/MfhnFL7OfRvHT
7LdR/Db7cRQ/zn4dxa+zn0fx8+z3Ufw+5wEoeQDnBSh5AecJKHkC5w0oeQPn
ESh5BOcVKHkF5xkoeQbnHSh5B+chKHkI5yUoeQnnKSh5CuctKHkL5zEoeQzn
NSh5Dec5KHkO5z0oeQ/nQSh5EOdFKHkR50koeRLnTSh5E+dRKHkU51UoeRXn
WSh5FuddKHkX52EoeRjnZfj/87L/l6eh5Gmct6HkbZzHoeRxnNeh5HWc56Hk
eZz3oeR9nAei5IGcF6LkhZwnouSJnDei5I2cR6LkkZxXouSVnGei5Jmcd6Lk
nZyHouShnJei5KWcp6LkqZy3ouStnMei5LGc16LktZznouS5nPei5L2cB6Pk
wZwXo+TFnCej5MmcN6PkzZxHo+TRnFej5NWcZ6Pk2Zx3o+TdnIej5OGcl6Pk
5Zyno+TpnLej5O2cx6Pk8ZzXo+T1nOej5Pmc96Pk/dwHoPQB3Beg9AXcJ6D0
Cdw3oPQN3Eeg9BHcV6D0FdxnoPQZ3Heg9B3ch6D0IdyXoPQl3Keg9Cnct6D0
LdzHoPQx3Neg9DXc56D0Odz3oPQ93Aeh9EHcF6H0RdwnofRJ3Deh9E3cR6H0
UdxXofRV3Geh9Fncd6H0XdyHofRh3Jeh9GXcp6H0ady3ofRt3Meh9HHc16H0
ddznofR53Peh9H3cB6L0gdwXovSF3Cei9IncN6L0jdxHovSR3Fei9JXcZ6L0
mdx3ovSd3Iei9KHcl6L0pdynovSp3Lei9K3cx6L0sdzXovS13Oei9Lnc96L0
vdwHo/TB3Bej9MXcJ6P0ydw3o/TN3Eej9NHcV6P01dxno/TZ3Hej9N3ch6P0
4dyXo/Tl3Kej9Onct6P07dzHo/Tx3Nej9PXc56P0+dz3o/T9zAOg8ADMC6Dw
AswToPAEzBug8AbMI6DwCMwroPAKzDOg8AzMO6DwDsxDoPAQzEug8BLMU6Dw
FMxboPAWzGOg8BjMa6DwGsxzoPAczHug8B7Mg6DwIMyLoPAizJOg8CTMm6Dw
JsyjoPAozKug8CrMs6DwLMy7oPAuzMOg8DDMy6DwMszToPA0zNug8DbM46Dw
OMzroPA6zPOg8DzM+6DwPswDofBAzAuh8ELME6HwRMwbofBGzCOh8EjMK6Hw
SswzofBMzDuh8E7MQ6HwUMxLofBSzFOh8FTMW6HwVsxjofBYzGuh8FrMc6Hw
XMx7ofBezIOh8GDMi6HwYsyTofBkzJuh8GbMo6HwaMyrofBqzLOh8GzMu6Hw
bszDofBwzMuh8HLM06HwdMzbofB2zOOh8HjM66HweszzofB8zPuh8H7MA6Lw
gMwLovCCzBOi8ITMG6LwhswjovCIzCui8IrMM6LwjMw7ovCOzEOi8JDMS6Lw
ksxTovCUzFui8JbMY6LwmMxrovCazHOi8JzMe6LwnsyDovCgzIui8KLMk6Lw
pMybovCmzKOi8KjMq6LwqsyzovCszLui8K7Mw6LwsMzLovCyzNOi8LTM26Lw
tszjovC4zOui8LrM86LwvMz7ovC+zAOj8MDMC6PwwswTo/DEzBuj8MbMI6Pw
yMwro/DKzDOj8MzMO6PwzsxDo/DQzEuj8NLMU6Pw1Mxbo/DWzGOj8NjMa6Pw
2sxzo/DczHuj8N7Mg6Pw4MyLo/DizJOj8OTMm6Pw5syjo/DozKuj8OrMs6Pw
7My7o/DuzMOj8PDMy6Pw8szTo/D0zNuj8PbM46Pw+Mzro/D6/5Pn/z8S0iUA

                   "]], {{{0.2531391740999533, 0.}, {0., -1.}}, {2., 0.}}]}], 
               "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "4.4`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "3.3`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "3.`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "2.8`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "2.`"}}, 
                 GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 4.4}, {
                  Style["75%", Bold], 3.3}, {
                  Style["median", Bold], 3.}, {
                  Style["25%", Bold], 2.8}, {
                  Style["min", Bold], 2.}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.7]]], 
             RGBColor[0.831964, 0.810543, 0.372854]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GeometricTransformationBox[
                  PolygonBox[CompressedData["
1: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
MiFof0oWDHD92st9aBcxr3nwac9jmTA40sN/x7IuYtj3qvHFzndheG1nm6d/
FyGneSjayjoDRmkcXOOd0UW80836cWJYOljOkb/v+6GLaG77Djt73QE4GDD2
mK60sJkUlBCscxum3NWKCrCWFgNKwiIO6abBzG9hqsEe0uKcZ6eVpE8qzDXt
4xUaJS32lbXlNo1OgQVrY95drJQWyd8rfBbbJYN9mNniKJmuYutEg4gV+26B
Y0UKxo7sKiqmG3Ssu5UEKxTGDU5c3VU4ZEmpJzQnwrqp94JTT3UVxrlo6zk+
ETbssZa+K7qKfyOmu7UGJoBbcrlbdlNXEeTVvdy/8SZsa1z8NN9IRsRn37FS
LYoHj741U0vnygijqfM2ns+8AV5OqxIe7JERTem771kWx4HPmbf6j2NlxNze
axI/fI4F31I3v9rqv38fN0Q1fHAsHJP51vxSrptQ1LqJw7yvw8lxnsvfjukm
Mrbs3+rZGAOB26WKG126CcvsIIUJ7jFwLu7QqObgbiIKyl9Z9IyB8AaFS215
3USI95aZOpnRcMUgUKHzWzdxoGBzor9vNFxbrLtLum93YXOzZObotdEQ6x/x
SnZRd/FdtktrkkM0JOb2m6+4v7tw+nVx0dnV0ZDSEZuulthdtOYGVHv6RMMd
8xH9deq6C/eCl9aNydGArrdPGSrLioV7SwM9OqIhJ3JCZ+8JskK/q+u1GPsY
KKjNXT/QTVakmlnMUcyPgTKN2RVDwmRFXFbN8CEzrsODOQ9gZImsGHCi7Ojp
6uvw+KB97JifssLL6ahqwb5YqLn7TGvCoB5CZB4qsLWIgxff1uyf4tBDjBmd
OL24Mw5em374ZO3XQ/TdajY/sfIGvF/rvmReag9RFa5VFJwZD5/Cvucuet1D
dPF+XSGXchNaKvYMW6IhJ0bGNHwtXZYAbQpdw5ZPkROvfre7ub5LgM6pR2TX
bpUTQzwmV5p4JkIXL+VtGy7JiU2bN514oJYE3VKCnm+WyImEz+d/DUpKgp6f
9Gdt/yMnBrxSPd5pfwuU+11O2T1UXlxyPp+hKZMM6ssG/rNvmbzI8c56Y5Wa
DLpB8f4H/eVF/Rbz4ZabU8CwzLz9SIa86FVf7Vw1OBX+6Zax5uQHebFt7MlP
NZ9TYcD4SffP6PYUdgHLP6mkpcHgHQVjz1v3FEH2gQ7jDt6G4TfmRkV49BSR
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
9jvkh5D9EPklZL9EfgrZT5HfQvZb5MeQ/Rj5NWS/Rn4O2c+R30P2e+QHkf0g
+UVkv0h+EtlPkt9E9pvkR5H9KPlVZL9KfhbZz5LfRfa75IeR/TD5ZWS/TH4a
2U+T30b22+THkf04+XVkv05+HtnPk99H9vuUByDnAZQXIOcFlCcg5wmUNyDn
DZRHIOcRlFcg5xWUZyDnGZR3IOcdlIcg5yGUlyDnJZSnIOcplLcg5y2UxyDn
MZTXIOc1lOcg5zmU9yDnPZQHIedBlBch50WUJyHnSZQ3IedNlEch51GUVyHn
VZRnIedZlHch512UhyHnYZSXIedllKch52mUtyHnbZTHIedxlNch53WU5yHn
eZT3Ied9lAci54GUFyLnhZQnIueJlDci542URyLnkZRXIueVlGci55mUdyLn
nZSHIuehlJci56WUpyLnqZS3IuetlMci57GU1yLntZTnIue5lPci572UByPn
wZQXI+fFlCcj58mUNyPnzZRHI+fRlFcj59WUZyPn2ZR3I+fdlIcj5+GUlyPn
5ZSnI+fplLcj5+2UxyPn8ZTXI+f1lOcj5/mU9yPn/dQHIPcB1Bcg9wXUJyD3
CdQ3IPcN1Ecg9xHUVyD3FdRnIPcZ1Hcg9x3UhyD3IdSXIPcl1Kcg9ynUtyD3
LdTHIPcx1Ncg9zXU5yD3OdT3IPc91Ach90HUFyH3RdQnIfdJ1Dch903URyH3
UdRXIfdV1Gch91nUdyH3XdSHIfdh1Jch92XUpyH3adS3Ifdt1Mch93HU1yH3
ddTnIfd51Pch933UByL3gdQXIveF1Cci94nUNyL3jdRHIveR1Fci95XUZyL3
mdR3Ived1Ici96HUl+L/70v/X5+K3KdS34rct1Ifi9zHUl+L3NdSn4vc51Lf
i9z3Uh+M3AdTX4zcF1OfjNwnU9+M3DdTH43cR1NfjdxXU5+N3GdT343cd1Mf
jtyHU1+O3JdTn47cp1Pfjty3Ux+P3MdTX4/c11Ofj9znU9+P3PcTD4DMAxAv
gMwLEE+AzBMQb4DMGxCPgMwjEK+AzCsQz4DMMxDvgMw7EA+BzEMQL4HMSxBP
gcxTEG+BzFsQj4HMYxCvgcxrEM+BzHMQ74HMexAPgsyDEC+CzIsQT4LMkxBv
gsybEI+CzKMQr4LMqxDPgsyzEO+CzLsQD4PMwxAvg8zLEE+DzNMQb4PM2xCP
g8zjEK+DzOsQz4PM8xDvg8z7EA+EzAMRL4TMCxFPhMwTEW+EzBsRj4TMIxGv
hMwrEc+EzDMR74TMOxEPhcxDES+FzEsRT4XMUxFvhcxbEY+FzGMRr4XMaxHP
hcxzEe+FzHsRD4bMgxEvhsyLEU+GzJMRb4bMmxGPhsyjEa+GzKsRz4bMsxHv
hsy7EQ+HzMMRL4fMyxFPh8zTEW+HzNsRj4fM4xGvh8zrEc+HzPMR74fM+xEP
iMwDEi+IzAsST4jMExJviMwbEo+IzCMSr4jMKxLPiMwzEu+IzDsSD4nMQxIv
icxLEk+JzFMSb4nMWxKPicxjEq+JzGsSz4nMcxLvicx7Eg+KzIMSL4rMixJP
isyTEm+KzJsSj4rMoxKvisyrEs+KzLMS74rMuxIPi8zDEi+LzMsST4vM0xJv
i8zbEo+LzOMSr4vM6xLPi8zzEu+LzPsSD4zMAxMvjMwLE0+MzBMTb4zMGxOP
jMwjE6+MzCsTz4zMMxPvjMw7Ew+NzEMTL43MS/9Pnvr/AAqTO1c=
                   "]], {{{1.0355111520443916`, 0.}, {0., -1.}}, {3., 0.}}]}],
                "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "6.9`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "5.1`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "4.3`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "1.6`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}}, 
                 GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 6.9}, {
                  Style["75%", Bold], 5.1}, {
                  Style["median", Bold], 4.3}, {
                  Style["25%", Bold], 1.6}, {
                  Style["min", Bold], 1.}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], "Tooltip"]& ]}, {
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.7]]], 
             RGBColor[0.35082, 0.595178, 0.853742]], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 GeometricTransformationBox[
                  PolygonBox[CompressedData["
1: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
95U/Y3RFgmfVXLzbrLPBXXbmnvaxUnSq2Xl0jTgLnFt3mgRESzE4cdgzN6Ms
WHrS6I9XusX4Lf3OjOUhmaBfL+17xa4Yp5z7PCBXKxP+PHRStDOlGOWbnKo+
uWbA/B/9G+dplODiFVn9LZUzQG+3X7nqwRLskeyYu9ouHWZIFhZWfijBmYYH
tya2pcHUTdkpMb1K8dD8CT4L/kuDSVkHo7w2luLaDy/n9TSlwgQz+dATT0ux
KcZifI58Kmgn3ntm1lyKMuqv/D00UkBz2UyvCcu+oqVy0bJC/WRQFxKdZVy/
4jALo42alkkwbMGuCwWlX9Fj/gRRqf8XGBzadjJ4+jc8Jkm2cfqVCKrTb1lc
t/+GZVtqH17QT4T+ARO27039hlpb0jz/eJgAvccLaxaN/I67s0dH3O2dAIqP
Niwfeug7Vr48sm+eQzzIatTMqw3/jn2UDJ7M7BUP3W6XdBJ6l6G6ncOhgPtx
0Kk6cvSjTWX4dsy9blwYB61OIYNP+Zdhv+OiGfZVsdCovFJ5XUsZ3nUxLWz0
j4Vah28dU5aX45Sm+EnqR2OhqvtUjcKdcrRKOCuuMo6FCptBXyVfy/Gpefju
VbqxUNb4POfdjB94d59F5yStWCi1NEh0PvcDZdzNUzf+/lpSkR+xP+0HxoT0
lQn8/f0Fe63eGIz6idOWO15v+f16OcXKT0Yc/olbVWa/7LCKhazN3u6NH3+i
lavGctsnsZCWM+d6cp8KdBH/bajzPRaSVqfa+f1TgeNXXVZJ0I2D+CTzo3bP
KvBQyJbgrstxEGvYbb6xtQK9Ncx3Hq+Ig6ioO/9MN6xEWbdG7awN8fBpoY5p
77uVOGaQbPnH1Hj4EBaz+Ou3StTu//Va8uoECJ25ZfbHmVVYVTHS0lucAEGB
DRPunK/C5e+fBSRZJ0LgxGvqh9OrsOyBmXmZyhd47jtGxVCzGkfeslKwe/cF
/EZ9kNO0rMZP7mAz1jwJHnmubmmNqEaLM/5W5urJ8GjIz4r0vr/w1or4iOT8
ZHjgbC95vvkXXl94YFypVwp49hmW4fD8F/YuGJY1eV8q3L306vOWtl9Y1XV7
xTD1NHCRMXw/26gGtyecPPnhUhrcOC0J6O9Wg4UFQbqfGtLAseW4d/n3Grxz
RkX4tisdlrxXNN4xvBY9XU4MrslMh8gTGdFJi2vR7MjUXK/lGQCzHiyct78W
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
MkJ3y+PU6do5EKrcqqerJSO4KFvc21uZDSfKxUfL9GQErWPnH+94kw2zYqNf
3zeWEYYu/y478kQ2NPo+q16zTUaIMatc5zEvG4Icbk7qZS0jeB2MjEzpyALr
Xcf/xYsywjTFiD7hH7NAd/Fm3+MeMsIQv11em09nQe2oxSWTX8oIt/Tr3QLn
Z/32Z+NGlgoyQud5w9Kglkw4LO672T1LRnhVnjdnX3AmTP1Y72b6Q0bY/sRr
TuqhTKjyzMuS75QRSi2WBf8YlwkBNp8Ghg+QFb4rHjsTJsmAAxt9Ta20ZAXz
Lf3VDe5kwKQ5jtfGz5EVbLtVcq4aZ8CPIUfixcaywvX9O67e6U4H/8b1Cq7b
ZIXiNvHig2/SwTxzgYGxtazw527zxWq702Fc0Gg70SVZwaVYVtFrUDqUOSt9
DPWQFUbKjjXtE50GvpbVrQdfygqi/xKHH7JKgz2mmbO1ImWFzyk6Tqkj02CM
znvr/CxZYV3pYL3zd1OhtM/DVzd/yApR2+xm+VangHfFhaplnbKCd33S+HFL
UmBHwoGJnQPkhNRjO1dOcUuGkf6rzIO05IRp8ps0xT+TQHJJ7/G+OXLCDf0p
C3cuSIL7e9WLR5rICX3sMvW/XvsCW5bKamRvkxP8j91/fLMwEdS1fmy6Zi0n
1E6rv+k6KREKZFLuLr4kJ1TH7AoZbZMAnsXBmS0ev18/NjjAPC4eNqKHSuBL
OWHz6OYL7kPiYdgDu5V7IuWERaMmdfzYHQc5p/c6Ds+WEwbG7X9wLSgW7m42
iUv7ISfYr8gLeCsTC+vmT5e/3CknSE/E+biv/gyD/xi6eKGKvJCb69Zm8SgG
Mlo6zzRoyQvLXJY17WqMBpec0g/P5sgLCS0jt70xjIZVIfEt203khRGTNY0d
70eBimvgLLXt8sKtsfopGg2RkGbtapVkLS80pWZvfmgSCTdW2waevyQvbBtf
76HvJ4Cp7o7KuZ7ywoK+grqOnAB9ByyfUPNSXth/68LBMZ8/QVL15L1PIuWF
sEITx6lXI8AxaeCjzdnyQrvj2UGpaz6C8YsWycCf8sKqXvZdZmPCQdlRPCK+
8/fv746zaG15D/H7ojeeVVEQbmrcsOqdFQaXDJ/dmaWtIJTV5ZtEhb6D5eNu
ZlTMURBE9u5y67xDQVHh+AAfEwVBQxLj3O4cAjFf//lrw3YFYfoUH6eiK2/h
QpT+1X5HFQQ1ow9mmleCwcBnXGz0JQUh5vK77WU3gkDWvq+craeC8LeTtc0K
rzcgbKsH3UAF4aL9Nddtwa/BfmHe6bJIBaHfnbUV+x+9gkXqn97fz1YQXn0b
dDWg+iV0tz9uXvNTQbA/nbPTySgAPuZfndmrS0Go2qAysifoOZwOszyCKorC
tlg/qbLOM/jTbf3L49qKglrv7+OdQ59C+/EFFZPnKgo/XMu/Wpr5wYd1o8eX
migKf0UtnmrX4gv/zVTa475dUdA2PfX4euBjmKta7W16VFGY8eTPym3HHkFz
bYZY/rKicPW5jGGIkQ+EpoYND/dUFEKnDRtrNNkbjgU+2GAVqCiE6Ow/dHvO
A5jldMF1fJSicEtxf2DCzPtQb3EgXZz9+/Wvmdw6b+wJQcar+rv+VBQKcG1r
/1PucGSinolxl6LwSC+q95OYu6CrrH5FNFBJONng8ej0uDvwq0zmc6i2knD2
2eTJ8Q9vQ+DncplDc5WELkv7jyHTXOCwb/Iirb+UBJmGmTpHsp1hikPwqfzt
SkKJbuEMfc2bULXTI+zmUSVhM/iG50dch+f6dk3LLisJvRZ87d1xzhEOjNo7
o9NTSRi9bGXozwNXYEK3sWVQoJIwtzVW1PfkJfhRpBuwL0pJqAyNKXrpewH8
wtV+jsxREiZZKZ+fVH8ezD07x2b/VBKO6Hhlftt6DrRtSndd61ISXlRN9LqZ
ZAffNsQ/XDxQWWg5Xjvu5qAz8EgvsKhFW1m4MKTOJ8bJFnYNcf0jcK6ykJ7b
rWkw9z8Y02jz956/lIWlRxISdVVOQHHG9tvDdygLnMd7v1mWlnb0/39N34/8
/fR6yK9Hvw/599H7QX4/9H6R3y99HuTPQ58X+fPS9UC+HnS9kK8XXU/k60nX
G/l60/1Avh90v5DvF91P5PtJ9xv5ftPzgPw80POC/LzQ84T8PNHzhvy80fOI
/DzS84r8vNLzjPw80/OO/LzTeUA+D3RekM8LnSfk80TnDfm80XlEPo90XpHP
K51n5PNM5x35vNM8QJ4HNC+Q5wXNE+R5QvMGed7QPEKeRzSvkOcVzTPkeUbz
Dnne0TxEnoc0L5HnJc1T5HlK8xZ53tI8Rp7HNK+R5zXNc+R5TvMeed7TPkDe
B7QvkPcF7RPkfUL7Bnnf0D5C3ke0r5D3Fe0z5H1G+w5539E+RN6HtC+R9yXt
U+R9SvsWed/SPkbex7Svkfc17XPkfU77Hnnfkx5A1gOkF5D1AukJZD1BegNZ
b5AeQdYjpFeQ9QrpGWQ9Q3oHWe+QHkLWQ6SXkPUS6SlkPUV6C1lvkR5D1mOk
15D1Guk5ZD1Heg9Z75EeRNaDpBeR9SLpSWQ9SXoTWW+SHkXWo6RXkfUq6Vlk
PUt6F1nvkh5G1sOkl5H1MulpZD1NehtZb5MeR9bjpNeR9TrpeWQ9T3ofWe+T
H0D2A+QXkP0C+QlkP0F+A9lvkB9B9iPkV5D9CvkZZD9DfgfZ75AfQvZD5JeQ
/RL5KWQ/RX4L2W+RH0P2Y+TXkP0a+TlkP0d+D9nvkR9E9oPkF5H9IvlJZD9J
fhPZb5IfRfaj5FeR/Sr5WWQ/S34X2e+SH0b2w+SXkf0y+WlkP01+G9lvkx9H
9uPk15H9Ovl5ZD9Pfh/Z71MegJwHUF6AnBdQnoCcJ1DegJw3UB6BnEdQXoGc
V1CegZxnUN6BnHdQHoKch1BegpyXUJ6CnKdQ3oKct1Aeg5zHUF6DnNdQnoOc
51Deg5z3UB6EnAdRXoScF1GehJwnUd6EnDdRHoWcR1FehZxXUZ6FnGdR3oWc
d1EehpyHUV6GnJdRnoacp1Hehpy3UR6HnMdRXoec11Geh5znUd6HnPdRHoic
B1JeiJwXUp6InCdS3oicN1IeiZxHUl6JnFdSnomcZ1LeiZx3Uh6KnIdSXoqc
l1KeipynUt6KnLdSHoucx1Jei5zXUp6LnOdS3ouc91IejJwHU16MnBdTnoyc
J1PejJw3Ux6NnEdTXo2cV1OejZxnU96NnHdTHo6ch1NejpyXU56OnKdT3o6c
t1Mej5zHU16PnNdTno+c51Pej5z3Ux+A3AdQX4DcF1CfgNwnUN+A3DdQH4Hc
R1BfgdxXUJ+B3GdQ34Hcd1AfgtyHUF+C3JdQn4Lcp1Dfgty3UB+D3MdQX4Pc
11Cfg9znUN+D3PdQH4TcB1FfhNwXUZ+E3CdR34TcN1EfhdxHUV+F3FdRn4Xc
Z1Hfhdx3UR+G3IdRX4bcl1GfhtynUd+G3LdRH4fcx1Ffh9zXUZ+H3OdR34fc
91EfiNwHUl+I3BdSn4jcJ1LfiNw3Uh+J3EdSX4ncV1KfidxnUt+J3HdSH4rc
h1JfityXUp+K3KdS34rct1Ifi9zHUl+L3NdSn4vc51Lfi9z3Uh+M3AdTX4zc
F1OfjNwnU9+M3DdTH43cR1NfjdxXU5+N3GdT343cd1MfjtyHU1+O3JdTn47c
p1Pfjty3Ux+P3MdTX4/c11Ofj9znU9+P3PcTD4DMAxAvgMwLEE+AzBMQb4DM
GxCPgMwjEK+AzCsQz4DMMxDvgMw7EA+BzEMQL4HMSxBPgcxTEG+BzFsQj4HM
YxCvgcxrEM+BzHMQ74HMexAPgsyDEC+CzIsQT4LMkxBvgsybEI+CzKMQr4LM
qxDPgsyzEO+CzLsQD4PMwxAvg8zLEE+DzNMQb4PM2xCPg8zjEK+DzOsQz4PM
8xDvg8z7EA+EzAMRL4TMCxFPhMwTEW+EzBsRj4TMIxGvhMwrEc+EzDMR74TM
OxEPhcxDES+FzEsRT4XMUxFvhcxbEY+FzGMRr4XMaxHPhcxzEe+FzHsRD4bM
gxEvhsyLEU+GzJMRb4bMmxGPhsyjEa+GzKsRz4bMsxHvhsy7EQ+HzMMRL4fM
yxFPh8zTEW+HzNsRj4fM4xGvh8zrEc+HzPMR74fM+xEPiMwDEi+IzAsST4jM
ExJviMwbEo+IzCMSr4jMKxLPiMwzEu+IzDsSD4nMQxIvicxLEk+JzFMSb4nM
WxKPicxjEq+JzGsSz4nMcxLvicx7Eg+KzIMSL4rMixJPisyTEm+KzJsSj4rM
oxKvisyrEs+KzLMS74rMuxIPi8zDEi+LzMsST4vM0xJvi8zbEo+LzOMSr4vM
6xLPi8zzEu+LzPsSD4zMAxMvjMwLE0+MzBMTb4zMGxOPjMwjE6+MzCsTz4zM
MxPvjMw7Ew+NzEMTL43MSxNPjcxTE2+NzFsTj43MYxOvjcxrE8+NzHMT743M
exMPjsyDEy+OzIsTT47MkxNvjsybE4+OzKMTr47MqxPPjsyzE++OzLsTD4/M
w/9fXv5/AGKpQTc=
                   "]], {{{0.5402328279174488, 0.}, {0., -1.}}, {4., 0.}}]}], 
               "DelayedMouseEffectStyle"], 
              StyleBox[
               TagBox[
                GridBox[{{
                   StyleBox["\"max\"", Bold, StripOnInput -> False], "2.5`"}, {
                   StyleBox["\"75%\"", Bold, StripOnInput -> False], "1.8`"}, {
                   StyleBox["\"median\"", Bold, StripOnInput -> False], 
                   "1.3`"}, {
                   StyleBox["\"25%\"", Bold, StripOnInput -> False], "0.3`"}, {
                   StyleBox["\"min\"", Bold, StripOnInput -> False], "0.1`"}},
                  GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                 AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                 GridBoxFrame -> {
                  "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> Directive[
                   AbsoluteThickness[1], 
                   Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
             Annotation[#, 
              Style[
               Grid[{{
                  Style["max", Bold], 2.5}, {
                  Style["75%", Bold], 1.8}, {
                  Style["median", Bold], 1.3}, {
                  Style["25%", Bold], 0.3}, {
                  Style["min", Bold], 0.1}}, Dividers -> {{
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                Frame -> GrayLevel[0], BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], {}], 
              "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}, \
{{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
      DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.7312248802544821, 0.1}, 
       Frame -> True, FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
       Automatic, FrameTicks -> {{True, True}, {{{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.7312248802544821, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           4.268775119745518, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
           0.7312248802544821, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
           4.268775119745518, 
            FormBox[
             TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
       GridLines -> Automatic, GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Small, PlotLabel -> 
       FormBox["\"All Species\"", TraditionalForm], PlotRange -> Automatic, 
       PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
          0.7312248802544821, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          4.268775119745518, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
         Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
         "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]], 
                    RGBColor[0.396811, 0.31014, 0.204105]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]], 
                    RGBColor[0.726732, 0.538136, 0.31593]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]], 
                    RGBColor[0.831964, 0.810543, 0.372854]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]], 
                    RGBColor[0.35082, 0.595178, 0.853742]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.396811, 0.31014, 0.204105], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2645406666666667, 0.20676000000000003`, 
                    0.13607000000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.396811`", ",", "0.31014`", ",", "0.204105`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.396811, 0.31014, 0.204105]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.396811, 0.31014, 0.204105], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.726732, 0.538136, 0.31593], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.48448800000000003`, 0.3587573333333333, 0.21062], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.726732`", ",", "0.538136`", ",", "0.31593`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.726732, 0.538136, 0.31593]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.726732, 0.538136, 0.31593], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.831964, 0.810543, 0.372854], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5546426666666667, 0.540362, 0.24856933333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.831964`", ",", "0.810543`", ",", "0.372854`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.831964, 0.810543, 0.372854]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.831964, 0.810543, 0.372854], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.7`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.35082, 0.595178, 0.853742], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.23388000000000003`, 0.3967853333333333, 
                    0.5691613333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.35082`", ",", "0.595178`", ",", "0.853742`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.35082, 0.595178, 0.853742]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.35082, 0.595178, 0.853742], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.8029087713128185`*^9, 3.8029087850009775`*^9}, {
   3.8029090279412165`*^9, 3.8029091200001273`*^9}, 3.802910158000455*^9, {
   3.803328150219643*^9, 3.8033281668047085`*^9}, 3.803328210623062*^9, {
   3.803328365299454*^9, 3.8033284519583707`*^9}, {3.8033284992779408`*^9, 
   3.8033285138982115`*^9}, 3.804286823343447*^9, 3.805824481158784*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"1eabbcf1-40b5-419b-8be3-cd46c150f0c1"]
}, Open  ]],

Cell[BoxData["38"], "Input",
 CellChangeTimes->{{3.8062588574010468`*^9, 3.806258857611652*^9}, {
  3.806259009830516*^9, 
  3.8062590101649323`*^9}},ExpressionUUID->"f71f43d0-c011-455e-8bdb-\
d9c763a47acc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Short", "[", 
  RowBox[{"Setosa", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"Iris", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<setosa\>\"", ",", "__"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", 
  RowBox[{"Versi", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"Iris", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<versicolor\>\"", ",", "__"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", 
  RowBox[{"Virgin", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"Iris", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<virginica\>\"", ",", "__"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8029082368204412`*^9, 3.802908245327283*^9}, {
  3.802908284589223*^9, 3.802908346603833*^9}, {3.802908871382617*^9, 
  3.802908873355364*^9}, {3.8029100114216137`*^9, 3.8029100173371844`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"9eac531c-834b-4cf1-916d-25d2d4c23c94"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", "5.1`", ",", "3.5`", ",", "1.4`", ",", 
      "0.2`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "48", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"setosa\"\>", ",", "5.`", ",", "3.3`", ",", "1.4`", ",", 
      "0.2`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.8029083408987813`*^9, 3.8029083469901896`*^9}, 
   3.8029088750384045`*^9, 3.8029100204714518`*^9, 3.8033285510936546`*^9, 
   3.804286870906495*^9, 3.805824620788291*^9},
 CellLabel->
  "Out[145]//Short=",ExpressionUUID->"85dfc158-6855-4a84-8374-2f7c34be1461"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"versicolor\"\>", ",", "7.`", ",", "3.2`", ",", "4.7`", ",", 
      "1.4`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "48", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"versicolor\"\>", ",", "5.7`", ",", "2.8`", ",", "4.1`", ",",
       "1.3`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.8029083408987813`*^9, 3.8029083469901896`*^9}, 
   3.8029088750384045`*^9, 3.8029100204714518`*^9, 3.8033285510936546`*^9, 
   3.804286870906495*^9, 3.8058246208051243`*^9},
 CellLabel->
  "Out[146]//Short=",ExpressionUUID->"2b424f0b-1a0d-4ea8-a32d-5c765dcda8ff"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", "6.3`", ",", "3.3`", ",", "6.`", ",", 
      "2.5`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "48", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"virginica\"\>", ",", "5.9`", ",", "3.`", ",", "5.1`", ",", 
      "1.8`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.8029083408987813`*^9, 3.8029083469901896`*^9}, 
   3.8029088750384045`*^9, 3.8029100204714518`*^9, 3.8033285510936546`*^9, 
   3.804286870906495*^9, 3.805824620812335*^9},
 CellLabel->
  "Out[147]//Short=",ExpressionUUID->"293b8de1-970f-4984-8800-cb46f70ead65"]
}, Open  ]],

Cell[BoxData["39"], "Input",
 CellChangeTimes->{{3.8062588616820917`*^9, 3.8062588617702847`*^9}, {
  3.806259012221841*^9, 3.8062590377603703`*^9}, {3.806259096235735*^9, 
  3.8062590973641005`*^9}},ExpressionUUID->"63fc525a-90dd-4141-93c1-\
be4881b0ab67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Column", "@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Setosa", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"Setosa", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"Setosa", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"Setosa", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
        RowBox[{"ChartStyle", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Setosa\>\""}], ",", 
        RowBox[{"ChartLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ",", 
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Versi", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"Versi", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"Versi", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"Versi", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
        RowBox[{"ChartStyle", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Versicolor\>\""}], ",", 
        RowBox[{"ChartLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ",", 
      RowBox[{"BoxWhiskerChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Virgin", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#1"}], "]"}], "]"}], ",", 
          RowBox[{"Virgin", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#2"}], "]"}], "]"}], ",", 
          RowBox[{"Virgin", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#3"}], "]"}], "]"}], ",", 
          RowBox[{"Virgin", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#4"}], "]"}], "]"}]}], "}"}], ",", 
        "\"\<Outliers\>\"", ",", 
        RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", 
        RowBox[{"ChartStyle", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Virginica\>\""}], ",", 
        RowBox[{"ChartLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<SepalLength\>\"", ",", "\"\<SepalWidth\>\"", ",", 
             "\"\<PetalLength\>\"", ",", "\"\<PetalWidth\>\""}], "}"}], ",", 
           "Bottom"}], "]"}]}], ",", 
        RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], "&"}], "[", 
  RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.802908826685126*^9, 3.802908893463276*^9}, {
  3.8029089255897665`*^9, 3.8029089516473627`*^9}, {3.802910027348115*^9, 
  3.8029100705169964`*^9}, {3.803328572440686*^9, 3.8033286281360316`*^9}, {
  3.8042868875208335`*^9, 3.8042869646647243`*^9}, {3.8058247286810465`*^9, 
  3.805824773573738*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"26bcbf0a-3c95-4f09-9a9d-ce97b24d3be7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{
          Opacity[0], 
          
          PointBox[{{0.5097251739635205, -0.18500000000000003`}, {
           4.4902748260364795`, 6.085}}]}, {
          CapForm[None], 
          Directive[
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
            Directive[
             RGBColor[0.982864, 0.7431472, 0.3262672]], {{
              Directive[
               RGBColor[0.471412, 0.108766, 0.527016]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{0.7312248802544821, 5.2}, {1.268775119745518,
                     5.2}, {1.268775119745518, 4.8}, {0.7312248802544821, 
                    4.8}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{1.268775119745518, 5.}, {0.7312248802544821, 
                    5.}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1., 4.8}, {1., 4.3}}, {{1., 5.2}, {1., 
                    5.8}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1.134387559872759, 4.3}, {0.865612440127241, 
                    4.3}}, {{1.134387559872759, 5.8}, {0.865612440127241, 
                    5.8}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "5.8`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "5.2`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "4.8`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.3`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 5.8}, {
                    Style["75%", Bold], 5.2}, {
                    Style["median", Bold], 5.}, {
                    Style["25%", Bold], 4.8}, {
                    Style["min", Bold], 4.3}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{1.731224880254482, 3.7}, {2.268775119745518, 
                    3.7}, {2.268775119745518, 3.2}, {1.731224880254482, 
                    3.2}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    2., 2.3}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{2.268775119745518, 3.4}, {1.7312248802544818`, 
                    3.4}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2., 3.2}, {2., 2.9}}, {{2., 3.7}, {2., 
                    4.4}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2.134387559872759, 2.9}, {1.865612440127241, 
                    2.9}}, {{2.134387559872759, 4.4}, {1.865612440127241, 
                    4.4}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "4.4`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "3.7`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "3.4`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "3.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "2.3`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 4.4}, {
                    Style["75%", Bold], 3.7}, {
                    Style["median", Bold], 3.4}, {
                    Style["25%", Bold], 3.2}, {
                    Style["min", Bold], 2.3}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{2.7312248802544823`, 1.6}, {
                    3.268775119745518, 1.6}, {3.268775119745518, 1.4}, {
                    2.7312248802544823`, 1.4}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    3., 1.}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{3.268775119745518, 1.5}, {2.731224880254482, 
                    1.5}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3., 1.4}, {3., 1.1}}, {{3., 1.6}, {3., 
                    1.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3.134387559872759, 1.1}, {2.865612440127241, 
                    1.1}}, {{3.134387559872759, 1.9}, {2.865612440127241, 
                    1.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "1.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "1.6`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "1.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "1.4`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}},
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 1.9}, {
                    Style["75%", Bold], 1.6}, {
                    Style["median", Bold], 1.5}, {
                    Style["25%", Bold], 1.4}, {
                    Style["min", Bold], 1.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.857359, 0.131106, 0.132128]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{3.7312248802544823`, 0.3}, {
                    4.268775119745518, 0.3}, {4.268775119745518, 0.2}, {
                    3.7312248802544823`, 0.2}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    4., 0.5}]}, {
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0.5], StripOnInput -> False], 
                    TraditionalForm]], {4., 0.6}]}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{4.268775119745518, 0.2}, {3.731224880254482, 
                    0.2}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4., 0.2}, {4., 0.1}}, {{4., 0.3}, {4., 
                    0.4}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4.134387559872759, 0.1}, {3.865612440127241, 
                    0.1}}, {{4.134387559872759, 0.4}, {3.865612440127241, 
                    0.4}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "0.6`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "0.3`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "0.2`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "0.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "0.1`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 0.6}, {
                    Style["75%", Bold], 0.3}, {
                    Style["median", Bold], 0.2}, {
                    Style["25%", Bold], 0.2}, {
                    Style["min", Bold], 0.1}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
        DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, 
         AxesOrigin -> {0.5543473682799303, -0.18500000000000003`}, Frame -> 
         True, FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{True, True}, {{{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
         GridLines -> Automatic, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], PlotLabel -> 
         FormBox["\"Setosa\"", TraditionalForm], PlotRange -> Automatic, 
         PlotRangePadding -> {{
            Scaled[0.05], 
            Scaled[0.05]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {{{1., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
            0.7312248802544821, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
            4.268775119745518, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
           Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
           "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.471412, 0.108766, 0.527016]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.471412, 0.108766, 0.527016], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3142746666666667, 0.07251066666666667, 
                    0.35134400000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.471412`", ",", "0.108766`", ",", "0.527016`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.471412, 0.108766, 0.527016]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.471412, 0.108766, 0.527016], Editable -> False,
                     Selectable -> False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2160706666666667, 0.4059797777777778, 
                    0.4722275555555556], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.324106`", ",", "0.6089696666666666`", ",", 
                    "0.7083413333333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334], 
                    Editable -> False, Selectable -> False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.509808, 0.48553488888888885`, 0.18240555555555557`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.764712`", ",", "0.7283023333333333`", ",", 
                    "0.27360833333333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`], 
                    Editable -> False, Selectable -> False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.857359, 0.131106, 0.132128], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5715726666666667, 0.08740400000000001, 
                    0.08808533333333333], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.857359`", ",", "0.131106`", ",", "0.132128`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.857359, 0.131106, 0.132128]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.857359, 0.131106, 0.132128], Editable -> False,
                     Selectable -> False], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{
          Opacity[0], 
          PointBox[{{0.5097251739635205, 0.7}, {4.4902748260364795`, 7.3}}]}, {
          CapForm[None], 
          Directive[
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
            Directive[
             RGBColor[0.982864, 0.7431472, 0.3262672]], {{
              Directive[
               RGBColor[0.471412, 0.108766, 0.527016]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{0.7312248802544821, 6.3}, {1.268775119745518,
                     6.3}, {1.268775119745518, 5.6}, {0.7312248802544821, 
                    5.6}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{1.268775119745518, 5.9}, {0.7312248802544821, 
                    5.9}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1., 5.6}, {1., 4.9}}, {{1., 6.3}, {1., 
                    7.}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1.134387559872759, 4.9}, {0.865612440127241, 
                    4.9}}, {{1.134387559872759, 7.}, {0.865612440127241, 
                    7.}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], "7.`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "6.3`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.9`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "5.6`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.9`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 7.}, {
                    Style["75%", Bold], 6.3}, {
                    Style["median", Bold], 5.9}, {
                    Style["25%", Bold], 5.6}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{1.731224880254482, 3.}, {2.268775119745518, 
                    3.}, {2.268775119745518, 2.5}, {1.731224880254482, 
                    2.5}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    LineBox[{{2.268775119745518, 2.8}, {1.7312248802544818`, 
                    2.8}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    LineBox[{{{2., 2.5}, {2., 2.}}, {{2., 3.}, {2., 3.4}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2.134387559872759, 2.}, {1.865612440127241, 
                    2.}}, {{2.134387559872759, 3.4}, {1.865612440127241, 
                    3.4}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "3.4`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], "3.`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "2.8`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "2.5`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "2.`"}},
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 3.4}, {
                    Style["75%", Bold], 3.}, {
                    Style["median", Bold], 2.8}, {
                    Style["25%", Bold], 2.5}, {
                    Style["min", Bold], 2.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{2.7312248802544823`, 4.6}, {
                    3.268775119745518, 4.6}, {3.268775119745518, 4.}, {
                    2.7312248802544823`, 4.}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    3., 3.}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{3.268775119745518, 4.35}, {2.731224880254482, 
                    4.35}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3., 4.}, {3., 3.3}}, {{3., 4.6}, {3., 
                    5.1}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3.134387559872759, 3.3}, {2.865612440127241, 
                    3.3}}, {{3.134387559872759, 5.1}, {2.865612440127241, 
                    5.1}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "5.1`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "4.6`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "4.35`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], "4.`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "3.`"}},
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 5.1}, {
                    Style["75%", Bold], 4.6}, {
                    Style["median", Bold], 4.35}, {
                    Style["25%", Bold], 4.}, {
                    Style["min", Bold], 3.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.857359, 0.131106, 0.132128]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{3.7312248802544823`, 1.5}, {
                    4.268775119745518, 1.5}, {4.268775119745518, 1.2}, {
                    3.7312248802544823`, 1.2}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{4.268775119745518, 1.3}, {3.731224880254482, 
                    1.3}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    LineBox[{{{4., 1.2}, {4., 1.}}, {{4., 1.5}, {4., 
                    1.8}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4.134387559872759, 1.}, {3.865612440127241, 
                    1.}}, {{4.134387559872759, 1.8}, {3.865612440127241, 
                    1.8}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "1.8`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "1.5`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "1.3`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "1.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], "1.`"}},
                    GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 1.8}, {
                    Style["75%", Bold], 1.5}, {
                    Style["median", Bold], 1.3}, {
                    Style["25%", Bold], 1.2}, {
                    Style["min", Bold], 1.}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
        DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0.5543473682799303, 0.7}, 
         Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{True, True}, {{{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
         GridLines -> Automatic, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], PlotLabel -> 
         FormBox["\"Versicolor\"", TraditionalForm], PlotRange -> Automatic, 
         PlotRangePadding -> {{
            Scaled[0.05], 
            Scaled[0.05]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {{{1., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
            0.7312248802544821, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
            4.268775119745518, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
           Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
           "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.471412, 0.108766, 0.527016]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.471412, 0.108766, 0.527016], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3142746666666667, 0.07251066666666667, 
                    0.35134400000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.471412`", ",", "0.108766`", ",", "0.527016`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.471412, 0.108766, 0.527016]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.471412, 0.108766, 0.527016], Editable -> False,
                     Selectable -> False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2160706666666667, 0.4059797777777778, 
                    0.4722275555555556], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.324106`", ",", "0.6089696666666666`", ",", 
                    "0.7083413333333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334], 
                    Editable -> False, Selectable -> False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.509808, 0.48553488888888885`, 0.18240555555555557`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.764712`", ",", "0.7283023333333333`", ",", 
                    "0.27360833333333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`], 
                    Editable -> False, Selectable -> False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.857359, 0.131106, 0.132128], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5715726666666667, 0.08740400000000001, 
                    0.08808533333333333], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.857359`", ",", "0.131106`", ",", "0.132128`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.857359, 0.131106, 0.132128]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.857359, 0.131106, 0.132128], Editable -> False,
                     Selectable -> False], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{
          Opacity[0], 
          
          PointBox[{{0.5097251739635205, 1.075}, {4.4902748260364795`, 
           8.225}}]}, {
          CapForm[None], 
          Directive[
           RGBColor[0.982864, 0.7431472, 0.3262672]], {{}, {
            Directive[
             RGBColor[0.982864, 0.7431472, 0.3262672]], {{
              Directive[
               RGBColor[0.471412, 0.108766, 0.527016]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{0.7312248802544821, 6.9}, {1.268775119745518,
                     6.9}, {1.268775119745518, 6.2}, {0.7312248802544821, 
                    6.2}}], {}, {{
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[FilledSmallCircle]\"", 10, 
                    GrayLevel[0], StripOnInput -> False], TraditionalForm]], {
                    1., 4.9}]}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{1.268775119745518, 6.5}, {0.7312248802544821, 
                    6.5}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1., 6.2}, {1., 5.6}}, {{1., 6.9}, {1., 
                    7.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{1.134387559872759, 5.6}, {0.865612440127241, 
                    5.6}}, {{1.134387559872759, 7.9}, {0.865612440127241, 
                    7.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "7.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "6.9`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "6.5`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "6.2`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.9`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 7.9}, {
                    Style["75%", Bold], 6.9}, {
                    Style["median", Bold], 6.5}, {
                    Style["25%", Bold], 6.2}, {
                    Style["min", Bold], 4.9}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.324106, 0.6089696666666666, 0.7083413333333334]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{1.731224880254482, 3.2}, {2.268775119745518, 
                    3.2}, {2.268775119745518, 2.8}, {1.731224880254482, 
                    2.8}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{2.268775119745518, 3.}, {1.7312248802544818`, 
                    3.}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2., 2.8}, {2., 2.2}}, {{2., 3.2}, {2., 
                    3.8}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{2.134387559872759, 2.2}, {1.865612440127241, 
                    2.2}}, {{2.134387559872759, 3.8}, {1.865612440127241, 
                    3.8}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "3.8`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "3.2`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "3.`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "2.8`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "2.2`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 3.8}, {
                    Style["75%", Bold], 3.2}, {
                    Style["median", Bold], 3.}, {
                    Style["25%", Bold], 2.8}, {
                    Style["min", Bold], 2.2}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.764712, 0.7283023333333333, 0.27360833333333334`]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    PolygonBox[{{2.7312248802544823`, 5.9}, {
                    3.268775119745518, 5.9}, {3.268775119745518, 5.1}, {
                    2.7312248802544823`, 5.1}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{3.268775119745518, 5.55}, {2.731224880254482, 
                    5.55}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3., 5.1}, {3., 4.5}}, {{3., 5.9}, {3., 
                    6.9}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{3.134387559872759, 4.5}, {2.865612440127241, 
                    4.5}}, {{3.134387559872759, 6.9}, {2.865612440127241, 
                    6.9}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "6.9`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "5.9`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "5.55`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "5.1`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "4.5`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 6.9}, {
                    Style["75%", Bold], 5.9}, {
                    Style["median", Bold], 5.55}, {
                    Style["25%", Bold], 5.1}, {
                    Style["min", Bold], 4.5}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], "Tooltip"]& ]}, {
              Directive[
               RGBColor[0.857359, 0.131106, 0.132128]], 
              TagBox[
               TooltipBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   GraphicsGroupBox[{Antialiasing -> False, 
                    
                    PolygonBox[{{3.7312248802544823`, 2.3}, {
                    4.268775119745518, 2.3}, {4.268775119745518, 1.8}, {
                    3.7312248802544823`, 1.8}}], {}, {{}, {}}, {}, {
                    GrayLevel[0], 
                    GrayLevel[1], 
                    
                    LineBox[{{4.268775119745518, 2.}, {3.731224880254482, 
                    2.}}]}, {}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4., 1.8}, {4., 1.4}}, {{4., 2.3}, {4., 
                    2.5}}}]}, {
                    GrayLevel[0], 
                    GrayLevel[0.5], 
                    
                    LineBox[{{{4.134387559872759, 1.4}, {3.865612440127241, 
                    1.4}}, {{4.134387559872759, 2.5}, {3.865612440127241, 
                    2.5}}}]}, {}}]}], "DelayedMouseEffectStyle"], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False], 
                    "2.5`"}, {
                    StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                    "2.3`"}, {
                    StyleBox["\"median\"", Bold, StripOnInput -> False], 
                    "2.`"}, {
                    StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                    "1.8`"}, {
                    StyleBox["\"min\"", Bold, StripOnInput -> False], 
                    "1.4`"}}, 
                   GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                   AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                   GridBoxFrame -> {
                    "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}},
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], "Grid"], {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[
                 Grid[{{
                    Style["max", Bold], 2.5}, {
                    Style["75%", Bold], 2.3}, {
                    Style["median", Bold], 2.}, {
                    Style["25%", Bold], 1.8}, {
                    Style["min", Bold], 1.4}}, Dividers -> {{
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
                  Frame -> GrayLevel[0], BaseStyle -> Directive[
                    AbsoluteThickness[1], 
                    Dashing[{}]]], {}], 
                "Tooltip"]& ]}}}, {}, {}}}, {{{{{{{}, {}}, {}}, {{{}, {}}, \
{}}, {{{}, {}}, {}}, {{{}, {}}, {}}}, {}}, {}}, {}}, {}}, {
        DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, 
         AxesOrigin -> {0.5543473682799303, 1.075}, Frame -> True, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{True, True}, {{{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             2., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             3., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             4., 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
             0.7312248802544821, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
             4.268775119745518, 
              FormBox[
               TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}}, 
         GridLines -> Automatic, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], PlotLabel -> 
         FormBox["\"Virginica\"", TraditionalForm], PlotRange -> Automatic, 
         PlotRangePadding -> {{
            Scaled[0.05], 
            Scaled[0.05]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {{{1., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {2., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {3., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {4., 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
            0.7312248802544821, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
            4.268775119745518, 
             FormBox[
              TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
           Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"SepalLength\"", "\"SepalWidth\"", "\"PetalLength\"", 
           "\"PetalWidth\""}, "SwatchLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.471412, 0.108766, 0.527016]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}],
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.471412, 0.108766, 0.527016], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3142746666666667, 0.07251066666666667, 
                    0.35134400000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.471412`", ",", "0.108766`", ",", "0.527016`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.471412, 0.108766, 0.527016]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.471412, 0.108766, 0.527016], Editable -> False,
                     Selectable -> False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2160706666666667, 0.4059797777777778, 
                    0.4722275555555556], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.324106`", ",", "0.6089696666666666`", ",", 
                    "0.7083413333333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.324106, 0.6089696666666666, 0.7083413333333334], 
                    Editable -> False, Selectable -> False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.509808, 0.48553488888888885`, 0.18240555555555557`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.764712`", ",", "0.7283023333333333`", ",", 
                    "0.27360833333333334`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.764712, 0.7283023333333333, 0.27360833333333334`], 
                    Editable -> False, Selectable -> False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.857359, 0.131106, 0.132128], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5715726666666667, 0.08740400000000001, 
                    0.08808533333333333], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.857359`", ",", "0.131106`", ",", "0.132128`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.857359, 0.131106, 0.132128]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.857359, 0.131106, 0.132128], Editable -> False,
                     Selectable -> False], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.802908855576047*^9, 3.8029088940938845`*^9, 3.802908952379348*^9, {
   3.802910058011207*^9, 3.8029100717711697`*^9}, {3.803328604477809*^9, 
   3.803328629858695*^9}, 3.804286965892277*^9, 3.805824656055377*^9, {
   3.805824733244107*^9, 3.8058247743933086`*^9}},
 CellLabel->
  "Out[153]=",ExpressionUUID->"666faca4-c4df-4c2c-9eb7-710136787ba3"]
}, Open  ]],

Cell[BoxData["40"], "Input",
 CellChangeTimes->{{3.8062588685059834`*^9, 3.80625886857332*^9}, {
  3.8062591010593095`*^9, 
  3.8062591015755215`*^9}},ExpressionUUID->"b2046383-aa77-46a8-9d29-\
7e5bef6d2a70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Setosa", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Versi", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Virgin", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Sepal length cm\>\"", ",", "\"\<Sepal width cm\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Setosa\>\"", ",", "\"\<Versicolor\>\"", ",", "\"\<Virginica\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8029103643125057`*^9, 3.8029103670795364`*^9}, {
  3.8029105440683126`*^9, 3.8029106024016523`*^9}, {3.8029106389905214`*^9, 
  3.8029107202371073`*^9}, {3.8029109471470118`*^9, 3.8029111373750753`*^9}, {
  3.8042871019866905`*^9, 3.804287111183745*^9}, {3.8042872645546255`*^9, 
  3.80428730786347*^9}, {3.805825237053261*^9, 3.80582524251873*^9}, {
  3.805825924902645*^9, 3.8058259937257233`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"23b315b3-2d25-42d9-8926-ce8cabd7626b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJxtUtsNwjAMjPpDSwOkD8o3K8ACmYERkOCXeWAmuhO0vnMUt5ai6OzzxbF9
vr9uj8I5d/mf6X7O1kc3m4+f92QdcBnH72Qt/FUUfgt/CV4PzPxjvM52UL7g
WvnEwm+AN/o+9akn9w68TvOJWa/gxuATcIDuoO+u15v6Qb749xonzvNrjbPe
vF/e5G8X/2F/WL/tl+jY+mw8zYv6tp9WT+oJ0B3gD4t5sB7qk2/3J9+HNA/+
f/2/HncLXmHmVC34dh52H2yc88j7k/aL+pzPD0V++78=
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJx1UtsNwjAMDKW8Pwlpm/LDCrBAZmAEJPhlHpgJdoI2d0Z2hKXKOud6ti85
XO7na+WcO36/IefYp+djiBVyZ3Cf3q8hlinzQ7qNUQFH4Dl4QfBpjA54Db0t
6lPUI/AC/3vwZtD3yA71BpjztKhPoNeKXsbB6EfZh+fUy7xG+mee1Se/lnno
F/vb/cm35/RbzxvNPL3xNxb76/0Cci33Rb8ttvtqP2fIuz/9NoWf+r6rwl/2
px/EnJf+2PvQ+/hCX9/Xrx+x9se+Dy/z2Pf7AR6E+Q8=
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        PointBox[CompressedData["
1:eJxtUtsNwjAMDKiUFhA/SG36RKwAC2QGRkCCX+aBmWAnaM8+FBdLlXWx7/yo
D5f7+Tp3zh2/3+BPo1XhNtoqAJfh+RhsIe9tcKNlQfPhl/JeM478nhg6O8GJ
8Dry36/BasaBW/Eb6kMnF1+xP+g0rAdeYeqV0ldq+Pmkf/B7yd8SwyeS54U/
E99QD7yC9WK9lPvT/nV+3b/Or3rAnnx4b/ZbmXqtiXdm/j3ns/z4Hn71dH6d
5/89rKmHvIz7ivtpGNf5Fdu4vUf93/F+7P7qSX96D///tzf9l4x/AMFQF9k=

         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     1, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {4.225, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Sepal width cm\"", TraditionalForm], None}, {
        FormBox["\"Sepal length cm\"", TraditionalForm], None}}, 
     FrameTicks -> {{All, All}, {All, All}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{4.225, 7.9}, {0, 4.4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Setosa\"", "\"Versicolor\"", "\"Virginica\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.805825959623212*^9, 3.8058259943107805`*^9}},
 CellLabel->
  "Out[187]=",ExpressionUUID->"12246e43-433a-44b0-ac59-5d9394393de6"]
}, Open  ]],

Cell[BoxData["41"], "Input",
 CellChangeTimes->{{3.806258873666607*^9, 3.806258873784692*^9}, {
  3.8062591043584757`*^9, 
  3.80625910468571*^9}},ExpressionUUID->"0e1fd4fb-e3c8-49c3-9d31-\
ea162d2739b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Setosa", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Versi", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Virgin", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Ticks", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Sepal length cm\>\"", ",", "\"\<Sepal width cm\>\"", ",", 
      "\"\<Petal Length cm\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Setosa\>\"", ",", "\"\<Versicolor\>\"", ",", "\"\<Virginica\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.805825500189498*^9, 3.8058255847613087`*^9}, {
  3.805825797219762*^9, 3.8058257993218403`*^9}, {3.8058258375989876`*^9, 
  3.805825909720949*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"a4317849-bdea-4767-8898-6295c3948016"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{{{
        RGBColor[0, 0, 1], 
        PointSize[
         NCache[
          Rational[1, 72], 0.013888888888888888`]], 
        Point3DBox[CompressedData["
1:eJyFU0FuwjAQjOAABdomIYRzv9A+IH4DT0AqV94Db2r/0gqEiJCqQmZnI4+L
ulJk7dgZr2d2X9bb1fsgy7LX6ze8fpsuqpB1MQvIT81+d4u54WPHPz9uUQbs
PwTkxwb7peVj++/cYK0MV/5FeOvi2daL8yCf+nnyECc/eArDR0n9Wg/vxfro
OP6fOz/2W8dVB+CF4zj/bfjS8Nz4DqZbHViv1kMdYj1TX8iD/El0qxz/m3+a
nFcdYh9nhn8J/8R5VDfs/7hfsT5t4iNx3Ne/l/UQ137QPlS/6Dtx1UH5wZtL
39bGk//bV3wX66Hv5OG76G/Mo3PR95X2g9Yf69zzIy+NdyD3Fsn8Kg91076i
v/fmQs/HPL1f8Ryl88h62G88/wuSj6Gc
         "]]}, {
        RGBColor[1, 0, 0], 
        PointSize[
         NCache[
          Rational[1, 72], 0.013888888888888888`]], 
        Point3DBox[CompressedData["
1:eJx1VFtywjAMdEMKtE0hr5qQ9IcrwAVyBo7ADP3teeBM7Z3aRLvKSGk9w2i8
suXVasPh8nm+JiGE4+9vEbje+/ttWE/999ewSuz3iss54h3OrbGvkI/9x7gS
7HPEFvgSscT9qDjrn8a1B/7s+FTILzQvsQW+cvVr3HtEfot3asSAmOHcDvs1
7pN/g/yD9iXvNPoueQoeHZ4htk63Qs/zXavDTvnLuRz3PZ/S1Um1X/bFOQpe
KX+rf676sw519+e9T9ivxELnwr7Yr+Q7rUM+1MfqwDlNOrNf+kdiqnOkD61P
NjNc+LzOdLY+aZz+9NPbbF6W54vjOc2dulmfJ//6gXMnf86F8yJOHWydxtWZ
fGV1Y51a+djvK6oO/C6oP+t73Pp/8u3fPuGcU1cvuv+NvP8B+NByEA==
         "]]}, {
        RGBColor[0, 1, 0], 
        PointSize[
         NCache[
          Rational[1, 72], 0.013888888888888888`]], 
        Point3DBox[CompressedData["
1:eJx9U1tOAzEMXKBst4D4YNNtun0grgAXyBk4AlL72/PAmeid2q5nZmWjEimy
4kzG9th5+zp87m6rqno/77vz/hjWsuyH9VCqYeVi/kX5+b6se9wn2DVwDe4X
hTxmp8B1wPXCk9fut/LbuQdfC/8E9gXvNuJnvOPvZfXCk9/8a9gn8GflY3Fm
qsvOS9VrPHPYlfI024G3C3mmUF99hX8m/qiP59/i/bPqpN/sBHzML+N8o3x4
z7jMm/1hntTdx60Vl3pTH4/vNT/kp/6My/zMn8VvvG3oTyN+6ub1HPnjXBl+
E/DU5VV6+n785ff/og7zn6W/zyfOcw7/4lF4xrV3Y9+pk6+rVR+Jt/M8zEUT
+FfBn67+a845+8V//X9/x7m1c1K98V/EOSee80B9WBfjez1TOQEwmZyf
         "]]}}, {}, {}}, {}}, AspectRatio -> 1, Axes -> True, 
    AxesEdge -> {{-1, -1}, {1, -1}, {-1, -1}}, AxesLabel -> {
      FormBox["\"Sepal length cm\"", TraditionalForm], 
      FormBox["\"Sepal width cm\"", TraditionalForm], 
      FormBox["\"Petal Length cm\"", TraditionalForm]}, 
    BoxRatios -> {1, 1, 0.4}, Boxed -> {Left, Bottom, Back}, DisplayFunction -> 
    Identity, FaceGrids -> NCache[{{{0, 0, -1}, {{4, 5, 6, 7, 8}, {2, 
          Rational[5, 2], 3, 
          Rational[7, 2], 4, 
          Rational[9, 2]}}}, {{0, 1, 0}, {{4, 5, 6, 7, 8}, {0, 2, 4, 6, 
        8}}}, {{-1, 0, 0}, {{2, 
          Rational[5, 2], 3, 
          Rational[7, 2], 4, 
          Rational[9, 2]}, {0, 2, 4, 6, 8}}}}, {{{0, 
        0, -1}, {{4, 5, 6, 7, 8}, {2, 2.5, 3, 3.5, 4, 4.5}}}, {{0, 1, 0}, {{4,
         5, 6, 7, 8}, {0, 2, 4, 6, 8}}}, {{-1, 0, 
        0}, {{2, 2.5, 3, 3.5, 4, 4.5}, {0, 2, 4, 6, 8}}}}], FaceGridsStyle -> 
    Directive[
      GrayLevel[0.3, 1], 
      AbsoluteDashing[{1, 2}]], ImageSize -> {360., 247.13601962321823`}, 
    PlotRange -> {{4.3, 7.9}, {2., 4.4}, Automatic}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {{{4.5, 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"4.5\"", 4.5`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {5., 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"5.0\"", 5.`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {5.5, 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"5.5\"", 5.5`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {6., 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"6.0\"", 6.`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {6.5, 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"6.5\"", 6.5`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {7., 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"7.0\"", 7.`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {7.5, 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"7.5\"", 7.5`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {4., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.1, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.3, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.7, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5.1, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5.3, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5.7, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5.9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {6.1, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {6.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {6.3, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {6.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {6.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {6.7, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {6.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {6.9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7.1, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7.3, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7.7, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7.9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {8., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
       2., 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"2.0\"", 2.`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.5, 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"2.5\"", 2.5`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {3., 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"3.0\"", 3.`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {3.5, 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"3.5\"", 3.5`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {4., 
        FormBox[
         TagBox[
          InterpretationBox[
          "\"4.0\"", 4.`15.954589770191003, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {2.1, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {2.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {2.3, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {2.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {2.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {2.7, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {2.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {2.9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3.1, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3.3, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3.6, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3.7, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3.8, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3.9, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.1, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.2, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.3, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.4, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.5, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
       0., 
        FormBox["0", TraditionalForm], {0.01, 0.}}, {2., 
        FormBox["2", TraditionalForm], {0.01, 0.}}, {4., 
        FormBox["4", TraditionalForm], {0.01, 0.}}, {6., 
        FormBox["6", TraditionalForm], {0.01, 0.}}, {0.5, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {1., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {1.5, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {2.5, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {3.5, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {4.5, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {5.5, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {6.5, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {7.5, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {8., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}, 
    ViewAngle -> 0.34300710800482664`, ViewPoint -> {0., -3., 3.}, 
    ViewVertical -> {0., 0., 1.}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Setosa\"", "\"Versicolor\"", "\"Virginica\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    PointSize[
                    NCache[
                    Rational[1, 2], 0.5]], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.805825545760174*^9, 3.8058255855601482`*^9}, 
   3.80582580007078*^9, {3.805825846231064*^9, 3.8058259107200823`*^9}, 
   3.805826107471159*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"8143cade-84d0-4ff8-b66c-a7b06e36370b"]
}, Open  ]],

Cell[BoxData["42"], "Input",
 CellChangeTimes->{{3.8062588798582544`*^9, 3.8062588799270525`*^9}, {
  3.8062591143966846`*^9, 
  3.8062591149372597`*^9}},ExpressionUUID->"3ca813be-5b3f-46ba-acac-\
8cb4e4dba9f3"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "Fisher", "]"}], "\[IndentingNewLine]", 
 RowBox[{"DeleteObject", "[", 
  RowBox[{
  "ResourceObject", "[", "\"\<Sample Data: Fisher's Irises\>\"", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8033295192484217`*^9, 3.80332952090411*^9}, {
  3.8033296033668766`*^9, 3.8033296380966873`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"63521f1a-2960-42f5-a526-7b85b3befc60"]
}, Closed]]
}, Open  ]]
},
WindowSize->{682, 669},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e32eb4bd-a169-4f16-b3c7-a743ac9a6d05"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 163, 3, 67, "Section",ExpressionUUID->"d9c3cce5-6edc-4d13-98ff-ca5496d76db5"],
Cell[CellGroupData[{
Cell[768, 29, 308, 4, 53, "Subsection",ExpressionUUID->"29e87de7-0a5a-47db-b547-ba20b409e47b"],
Cell[1079, 35, 131, 3, 28, "Input",ExpressionUUID->"eecc3fda-5b1e-4e58-8064-eb0c1131ca5c"],
Cell[CellGroupData[{
Cell[1235, 42, 307, 5, 28, "Input",ExpressionUUID->"923a7197-aac6-4fef-a24c-120c23a7b043"],
Cell[1545, 49, 53294, 903, 67, "Output",ExpressionUUID->"2e6f9c00-1ed0-4017-93b8-e32e9faa0b87"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[54888, 958, 198, 3, 37, "Subsection",ExpressionUUID->"6c9b0bab-9b6e-41c5-9058-379ead34e316"],
Cell[55089, 963, 129, 3, 28, "Input",ExpressionUUID->"fc1e340b-d76c-4e19-aad9-8e7a337c2c7c"],
Cell[CellGroupData[{
Cell[55243, 970, 184, 3, 28, "Input",ExpressionUUID->"0f0b3ef2-195f-4a5b-99a9-1da8bdaf2bea"],
Cell[55430, 975, 17801, 356, 87, "Output",ExpressionUUID->"11ebd9b1-1eb6-4489-b9f8-ecc22fcfcd72"]
}, Open  ]],
Cell[73246, 1334, 129, 3, 28, "Input",ExpressionUUID->"bb69e93a-a301-4312-bfae-1d920b871299"],
Cell[CellGroupData[{
Cell[73400, 1341, 450, 8, 28, "Input",ExpressionUUID->"6019d43b-9a73-461b-a32a-8d12f0f496df"],
Cell[73853, 1351, 1522, 24, 166, "Output",ExpressionUUID->"b9fabc7b-f589-48ce-a121-33bb01d64109"]
}, Open  ]],
Cell[75390, 1378, 131, 3, 28, "Input",ExpressionUUID->"39658651-2776-41a6-9121-9e3f380996ed"],
Cell[CellGroupData[{
Cell[75546, 1385, 435, 8, 28, "Input",ExpressionUUID->"0cdb6125-ff01-4ceb-b307-9a8b94f0a966"],
Cell[75984, 1395, 878, 20, 51, "Output",ExpressionUUID->"eea4c1c4-9ad2-4723-8218-fc10d359781e"]
}, Open  ]],
Cell[76877, 1418, 131, 3, 28, "Input",ExpressionUUID->"672f8592-333c-45bd-8ad7-aafdd4eeec22"],
Cell[CellGroupData[{
Cell[77033, 1425, 313, 6, 28, "Input",ExpressionUUID->"8569c508-a52a-4568-b8eb-89b1b6fda475"],
Cell[77349, 1433, 640, 13, 57, "Output",ExpressionUUID->"60e2c232-84fe-4f33-91b3-c2e377cb2adf"]
}, Open  ]],
Cell[78004, 1449, 131, 3, 28, "Input",ExpressionUUID->"bc8d36c0-c4cb-4061-96a5-5174f3ea4683"],
Cell[CellGroupData[{
Cell[78160, 1456, 300, 6, 28, "Input",ExpressionUUID->"51addd16-10f8-4490-b027-6734d1a7d74f"],
Cell[78463, 1464, 352, 8, 39, "Output",ExpressionUUID->"9148dc70-cb77-4272-909b-414baa3cbccc"]
}, Open  ]],
Cell[78830, 1475, 129, 3, 28, "Input",ExpressionUUID->"2019a394-bf7e-4697-941d-5fa6020c89ed"],
Cell[CellGroupData[{
Cell[78984, 1482, 368, 7, 28, "Input",ExpressionUUID->"e3e887ba-be0c-4138-88e5-147d8890ff6f"],
Cell[79355, 1491, 143724, 3018, 559, "Output",ExpressionUUID->"42d5e3d2-8d12-4b2b-9bc1-48e6cfe9b5f1"]
}, Open  ]],
Cell[223094, 4512, 131, 3, 28, "Input",ExpressionUUID->"b742de8e-a68f-42d3-b3be-b7daca59f9cc"],
Cell[CellGroupData[{
Cell[223250, 4519, 307, 6, 28, "Input",ExpressionUUID->"45a4cdf2-8f25-497d-81fb-2682a4b168a5"],
Cell[223560, 4527, 539, 9, 52, "Output",ExpressionUUID->"c425bec7-d396-4c8f-b722-4b402602c61a"]
}, Open  ]],
Cell[224114, 4539, 129, 3, 28, "Input",ExpressionUUID->"a309246e-35f1-442e-95a1-94f2d18b3616"],
Cell[CellGroupData[{
Cell[224268, 4546, 338, 7, 48, "Input",ExpressionUUID->"0c561bf4-2362-4461-a717-2035dae55e03"],
Cell[224609, 4555, 430, 7, 32, "Output",ExpressionUUID->"1c9ed470-46ec-4f1d-b729-56b5c6742280"]
}, Open  ]],
Cell[225054, 4565, 156, 3, 28, "Input",ExpressionUUID->"3dceac82-08e8-4370-ba16-bc3db48e811a"],
Cell[CellGroupData[{
Cell[225235, 4572, 687, 16, 48, "Input",ExpressionUUID->"16196530-789d-42f6-a1a3-a24976ef1f57"],
Cell[225925, 4590, 1065, 23, 128, "Output",ExpressionUUID->"86db8feb-b15e-49ae-848b-a4089dd271f4"]
}, Open  ]],
Cell[227005, 4616, 154, 3, 28, "Input",ExpressionUUID->"13912813-f3c3-49ee-b42c-08f1bfb52694"],
Cell[227162, 4621, 518, 11, 28, "Input",ExpressionUUID->"613b477f-76c9-4fe1-b57c-5bc54e522f13"],
Cell[227683, 4634, 156, 3, 28, "Input",ExpressionUUID->"deea52ab-338a-4006-8b1c-a70a4785b3b1"],
Cell[CellGroupData[{
Cell[227864, 4641, 305, 5, 28, "Input",ExpressionUUID->"8fb5e7b6-2341-4443-a908-6869615690a4"],
Cell[228172, 4648, 138434, 2826, 483, "Output",ExpressionUUID->"6ef44993-088c-47c0-8fe3-0ccf2f170f08"]
}, Open  ]],
Cell[366621, 7477, 156, 3, 28, "Input",ExpressionUUID->"db3f3d1c-6267-4bd9-80ca-051a254758ec"],
Cell[CellGroupData[{
Cell[366802, 7484, 557, 13, 86, "Input",ExpressionUUID->"d05e31ac-d856-44b1-91d3-66ee52d1388d"],
Cell[367362, 7499, 124966, 2541, 483, "Output",ExpressionUUID->"b216d864-d265-48dd-8742-51c63af1c1f2"]
}, Open  ]],
Cell[492343, 10043, 156, 3, 28, "Input",ExpressionUUID->"9d0a8eb2-422c-424a-9dc5-f0d0bf5c1e53"],
Cell[CellGroupData[{
Cell[492524, 10050, 595, 14, 48, "Input",ExpressionUUID->"ca207510-1a7d-47c4-a33c-45116c2e2a52"],
Cell[493122, 10066, 176147, 3691, 559, "Output",ExpressionUUID->"66f70f2d-ba02-45b3-b9b5-ce2973fda33e"]
}, Open  ]],
Cell[669284, 13760, 156, 3, 28, "Input",ExpressionUUID->"bb6351c2-f76f-4805-9f60-df5e8b127426"],
Cell[CellGroupData[{
Cell[669465, 13767, 248, 4, 28, "Input",ExpressionUUID->"f5627fae-f6cc-4afd-95a2-e87d01b07114"],
Cell[669716, 13773, 25037, 453, 125, "Output",ExpressionUUID->"b799d079-df3a-4aac-b4c7-aa2a95fa523d"]
}, Open  ]],
Cell[694768, 14229, 156, 3, 28, "Input",ExpressionUUID->"272bbaae-8c98-4b0e-8f3e-b793f6d3f3b6"],
Cell[CellGroupData[{
Cell[694949, 14236, 591, 14, 86, "Input",ExpressionUUID->"264e0969-7edb-4306-a4cd-f2a0a6ada4a9"],
Cell[695543, 14252, 41273, 803, 147, "Output",ExpressionUUID->"4d944412-737b-46a1-a72a-02c07bd0880d"]
}, Open  ]],
Cell[736831, 15058, 154, 3, 28, "Input",ExpressionUUID->"c3537d3b-9364-421e-842b-e4cd3fab33ab"],
Cell[CellGroupData[{
Cell[737010, 15065, 445, 10, 28, "Input",ExpressionUUID->"e8665366-6285-4961-84b8-0985ca250c51"],
Cell[737458, 15077, 28202, 520, 147, "Output",ExpressionUUID->"5c34f795-4c53-435f-9d22-4f78d33d6454"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[765709, 15603, 326, 5, 37, "Subsection",ExpressionUUID->"236eeccb-6612-445b-9663-df4017cbacd9"],
Cell[766038, 15610, 156, 3, 28, "Input",ExpressionUUID->"12df0dbf-c9b5-4a03-aa19-139f5cc9c08e"],
Cell[766197, 15615, 1991, 50, 181, "Input",ExpressionUUID->"9f947879-50f9-4a91-9c42-83f1e61414e0"],
Cell[768191, 15667, 156, 3, 28, "Input",ExpressionUUID->"8368c88a-7bd8-41dc-be40-c611c1ad157d"],
Cell[CellGroupData[{
Cell[768372, 15674, 1356, 30, 67, "Input",ExpressionUUID->"2fd82c3a-3fdd-4704-8fb5-cd1970539ec5"],
Cell[769731, 15706, 93670, 1662, 258, "Output",ExpressionUUID->"23618f01-c309-44d7-97b5-806f5a137b87"]
}, Open  ]],
Cell[863416, 17371, 154, 3, 28, "Input",ExpressionUUID->"50c04017-495c-44a0-b409-9d998a65e3ed"],
Cell[CellGroupData[{
Cell[863595, 17378, 1009, 25, 67, "Input",ExpressionUUID->"74bc1528-36b7-47a1-ba42-a11d306861e6"],
Cell[864607, 17405, 89877, 1620, 257, "Output",ExpressionUUID->"8f51204e-3d64-409e-960d-3e0f404e2481"]
}, Open  ]],
Cell[954499, 19028, 154, 3, 28, "Input",ExpressionUUID->"cc7cf560-4079-4a94-8c10-90ca4d04bcc3"],
Cell[CellGroupData[{
Cell[954678, 19035, 977, 22, 48, "Input",ExpressionUUID->"fe1c9239-b142-4d7e-9d74-1e4177d38da6"],
Cell[955658, 19059, 2698, 56, 121, "Output",ExpressionUUID->"990ac14d-d8a7-4a96-904c-6f05917c2d82"]
}, Open  ]],
Cell[958371, 19118, 154, 3, 28, "Input",ExpressionUUID->"f29b9927-810a-4842-95b6-3422f8d82e97"],
Cell[958528, 19123, 1181, 27, 86, "Input",ExpressionUUID->"e56dda36-2412-4ef5-bda3-da4795f05375"],
Cell[959712, 19152, 154, 3, 28, "Input",ExpressionUUID->"42a824cf-85ba-47f2-8ad7-756ca38b5951"],
Cell[CellGroupData[{
Cell[959891, 19159, 4137, 83, 276, "Input",ExpressionUUID->"4e80f19f-a903-4cc7-bb64-e12efb860bc2"],
Cell[964031, 19244, 9460, 243, 184, "Output",ExpressionUUID->"82c3c7c5-1281-4fc3-8dd7-12606b767e50"]
}, Open  ]],
Cell[973506, 19490, 153, 3, 28, "Input",ExpressionUUID->"d7e78a27-b180-428c-b10d-6984a2967ffb"],
Cell[973662, 19495, 1906, 43, 143, "Input",ExpressionUUID->"e89b0308-caa5-43b6-a638-b416e725764b"],
Cell[975571, 19540, 156, 3, 28, "Input",ExpressionUUID->"6c0ee3ce-9ed5-4088-88f8-c458466ff63d"],
Cell[CellGroupData[{
Cell[975752, 19547, 1480, 32, 105, "Input",ExpressionUUID->"803252e4-c093-45cf-bd7e-23c99cdff73f"],
Cell[977235, 19581, 7460, 192, 481, "Output",ExpressionUUID->"ab4986c0-fa5f-40d9-8876-cef78fb6e857"]
}, Open  ]],
Cell[984710, 19776, 158, 3, 28, "Input",ExpressionUUID->"113e11c5-9130-4866-bf1a-32c673aebcc0"],
Cell[CellGroupData[{
Cell[984893, 19783, 545, 11, 28, "Input",ExpressionUUID->"79ba8383-04cd-4430-a7aa-753cd1a11bb6"],
Cell[985441, 19796, 842, 13, 46, "Output",ExpressionUUID->"8fdcf120-28a9-49b0-b660-666eaba6918a"]
}, Open  ]],
Cell[986298, 19812, 154, 3, 28, "Input",ExpressionUUID->"85c670b4-f765-4067-8775-915280f590f5"],
Cell[CellGroupData[{
Cell[986477, 19819, 1168, 28, 48, "Input",ExpressionUUID->"c58c803d-b776-4619-b9c9-d74e1fcb029b"],
Cell[987648, 19849, 483, 8, 46, "Output",ExpressionUUID->"68bb7b7e-1570-42a7-a193-ca18a4a3e7ac"]
}, Open  ]],
Cell[988146, 19860, 156, 3, 28, "Input",ExpressionUUID->"4c349d8a-d872-4f7f-9fc8-7260c62d98ae"],
Cell[988305, 19865, 3529, 80, 276, "Input",ExpressionUUID->"207dc2c1-a361-4d7b-931d-1015e3fa65ab"],
Cell[991837, 19947, 153, 3, 28, "Input",ExpressionUUID->"caadc346-5d52-4aa3-9708-b71414277335"],
Cell[CellGroupData[{
Cell[992015, 19954, 1100, 27, 105, "Input",ExpressionUUID->"c4442004-c9e9-4cac-87f5-8146921a986a"],
Cell[993118, 19983, 7940, 203, 481, "Output",ExpressionUUID->"51f682b8-9efc-478f-9c42-84f664537a26"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1001107, 20192, 169, 3, 37, "Subsection",ExpressionUUID->"6c27b176-50e0-4f28-9c1e-848ee5a922f3"],
Cell[1001279, 20197, 154, 3, 28, "Input",ExpressionUUID->"e7b905d9-6544-4af2-a89d-0d647a5ed125"],
Cell[CellGroupData[{
Cell[1001458, 20204, 887, 16, 67, "Input",ExpressionUUID->"cae67db9-d37e-43cb-87db-5c48a8545e3e"],
Cell[1002348, 20222, 119304, 2172, 307, "Output",ExpressionUUID->"b15bb19e-8ce7-4f0e-ac68-b0e63a285ef6"]
}, Open  ]],
Cell[1121667, 22397, 158, 3, 28, "Input",ExpressionUUID->"e471476d-6383-4552-8f80-1a05c42770da"],
Cell[CellGroupData[{
Cell[1121850, 22404, 1225, 23, 86, "Input",ExpressionUUID->"03723490-42bc-4f29-9e4a-245e9ba3df14"],
Cell[1123078, 22429, 59719, 1190, 263, "Output",ExpressionUUID->"3e52a04b-b9cd-42d2-9c0c-1b5601d4c1a4"]
}, Open  ]],
Cell[1182812, 23622, 158, 3, 28, "Input",ExpressionUUID->"39ee60b4-c46d-4ac3-9257-32bec059d957"],
Cell[CellGroupData[{
Cell[1182995, 23629, 1401, 34, 86, "Input",ExpressionUUID->"54e07d47-f870-421d-a826-4c33bb6c292b"],
Cell[1184399, 23665, 46529, 990, 326, "Output",ExpressionUUID->"f5ebf651-5e42-4125-a223-cd513cc39cf1"]
}, Open  ]],
Cell[1230943, 24658, 207, 4, 28, "Input",ExpressionUUID->"2f07db82-1771-4b8e-9363-c69532235e09"],
Cell[CellGroupData[{
Cell[1231175, 24666, 1642, 35, 67, "Input",ExpressionUUID->"d4bff990-7d94-47c9-a7aa-23368ac8070c"],
Cell[1232820, 24703, 34904, 656, 320, "Output",ExpressionUUID->"12111eae-1fbe-49c8-bd3c-b0e2f6e09e06"]
}, Open  ]],
Cell[1267739, 25362, 207, 4, 28, "Input",ExpressionUUID->"09e618aa-0fa6-4f44-9418-0da3e6397755"],
Cell[CellGroupData[{
Cell[1267971, 25370, 479, 11, 28, "Input",ExpressionUUID->"eb828403-e6da-492b-99e1-a953290d057d"],
Cell[1268453, 25383, 430, 10, 32, "Output",ExpressionUUID->"bcb8457f-cb7b-4cc0-bb01-5ae7f54b7c33"]
}, Open  ]],
Cell[1268898, 25396, 209, 4, 28, "Input",ExpressionUUID->"afe1bd42-fffd-4aa9-99d4-e3469202b7a2"],
Cell[CellGroupData[{
Cell[1269132, 25404, 455, 9, 28, "Input",ExpressionUUID->"9ba076e5-b898-49a6-bf50-5348b9a7f684"],
Cell[1269590, 25415, 2278, 51, 121, "Output",ExpressionUUID->"7478bd93-6d05-43e1-9fa2-c64437edfa11"]
}, Open  ]],
Cell[1271883, 25469, 207, 4, 28, "Input",ExpressionUUID->"5cdd89d5-837d-4ee6-83cb-83459eb255fa"],
Cell[CellGroupData[{
Cell[1272115, 25477, 602, 13, 28, "Input",ExpressionUUID->"74cf2dfc-a214-42e4-af01-f310ddf6edc0"],
Cell[1272720, 25492, 745, 17, 32, "Output",ExpressionUUID->"3b2bd6cf-f214-4664-8089-e25ff635c419"]
}, Open  ]],
Cell[1273480, 25512, 209, 4, 28, "Input",ExpressionUUID->"04873d3e-0436-4b28-b675-631c33b0a0f0"],
Cell[CellGroupData[{
Cell[1273714, 25520, 3745, 81, 295, "Input",ExpressionUUID->"25d72a8e-0923-4651-891b-c81ecd6a44c7"],
Cell[1277462, 25603, 109957, 2139, 371, "Output",ExpressionUUID->"1eabbcf1-40b5-419b-8be3-cd46c150f0c1"]
}, Open  ]],
Cell[1387434, 27745, 207, 4, 28, "Input",ExpressionUUID->"f71f43d0-c011-455e-8bdb-d9c763a47acc"],
Cell[CellGroupData[{
Cell[1387666, 27753, 960, 26, 67, "Input",ExpressionUUID->"9eac531c-834b-4cf1-916d-25d2d4c23c94"],
Cell[1388629, 27781, 668, 16, 32, "Output",ExpressionUUID->"85dfc158-6855-4a84-8374-2f7c34be1461"],
Cell[1389300, 27799, 678, 16, 32, "Output",ExpressionUUID->"2b424f0b-1a0d-4ea8-a32d-5c765dcda8ff"],
Cell[1389981, 27817, 673, 16, 32, "Output",ExpressionUUID->"293b8de1-970f-4984-8800-cb46f70ead65"]
}, Open  ]],
Cell[1390669, 27836, 257, 4, 28, "Input",ExpressionUUID->"63fc525a-90dd-4141-93c1-be4881b0ab67"],
Cell[CellGroupData[{
Cell[1390951, 27844, 4421, 104, 333, "Input",ExpressionUUID->"26bcbf0a-3c95-4f09-9a9d-ce97b24d3be7"],
Cell[1395375, 27950, 106644, 2281, 512, "Output",ExpressionUUID->"666faca4-c4df-4c2c-9eb7-710136787ba3"]
}, Open  ]],
Cell[1502034, 30234, 208, 4, 28, "Input",ExpressionUUID->"b2046383-aa77-46a8-9d29-7e5bef6d2a70"],
Cell[CellGroupData[{
Cell[1502267, 30242, 1678, 42, 86, "Input",ExpressionUUID->"23b315b3-2d25-42d9-8926-ce8cabd7626b"],
Cell[1503948, 30286, 16970, 369, 393, "Output",ExpressionUUID->"12246e43-433a-44b0-ac59-5d9394393de6"]
}, Open  ]],
Cell[1520933, 30658, 204, 4, 28, "Input",ExpressionUUID->"0e1fd4fb-e3c8-49c3-9d31-ea162d2739b0"],
Cell[CellGroupData[{
Cell[1521162, 30666, 1656, 45, 124, "Input",ExpressionUUID->"a4317849-bdea-4767-8898-6295c3948016"],
Cell[1522821, 30713, 26170, 568, 266, "Output",ExpressionUUID->"8143cade-84d0-4ff8-b66c-a7b06e36370b"]
}, Open  ]],
Cell[1549006, 31284, 211, 4, 28, "Input",ExpressionUUID->"3ca813be-5b3f-46ba-acac-8cb4e4dba9f3"],
Cell[1549220, 31290, 416, 9, 48, "Input",ExpressionUUID->"63521f1a-2960-42f5-a526-7b85b3befc60"]
}, Closed]]
}, Open  ]]
}
]
*)

