(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2346579,      45165]
NotebookOptionsPosition[   2331791,      44936]
NotebookOutlinePosition[   2332189,      44952]
CellTagsIndexPosition[   2332146,      44949]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Training a Neural Network", "Subsection",
 CellChangeTimes->{{3.8065306408994083`*^9, 3.8065306429790645`*^9}, {
  3.8083343309238443`*^9, 3.8083343406576586`*^9}, {3.8092031048053727`*^9, 
  3.809203106561033*^9}, {3.8092761599546146`*^9, 
  3.809276168922126*^9}},ExpressionUUID->"16e4cec8-d06b-44fb-a8a2-\
63562cde3ad6"],

Cell[BoxData["1"], "Input",
 CellChangeTimes->{
  3.8096376178985453`*^9},ExpressionUUID->"966ceb9a-a1d3-412a-b75a-\
6ce6527e32c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.8"}], ",", 
          RowBox[{"-", "1.5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1.7"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", 
          RowBox[{"-", "1.2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "0.7"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1.7", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.6", ",", "1.3"}], "}"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", "Red"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.808600106962902*^9, 3.8086001353206096`*^9}, {
  3.8086596884302235`*^9, 3.808659805246936*^9}, {3.808936495174296*^9, 
  3.8089365043702602`*^9}, {3.8089370042433987`*^9, 3.8089370231302166`*^9}, {
  3.808937086770107*^9, 3.8089370911613755`*^9}, {3.808937138404024*^9, 
  3.8089371387868595`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"74d1bcd1-6047-49eb-9cc4-51dc85d6b2b6"],

Cell[BoxData[
 GraphicsBox[{{}, {{
     {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 1, 0]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[
        9.75]], {{{-1.8, -1.5}}, {{-1., -1.7}}, {{-1.5, -1.}}, {{-1., -1.}}, \
{{-0.5, -1.2}}, {{-1., -0.7}}}]}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], GeometricTransformationBox[InsetBox[
        FormBox[
         StyleBox[
          GraphicsBox[{
            {GrayLevel[1], 
             PolygonBox[
              NCache[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                Offset[{2 3^Rational[1, 2], -2}]}, {
               Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                Offset[{3.4641016151377544`, -2}]}]]}, 
            {AbsoluteThickness[1.5], Dashing[{}], 
             JoinedCurveBox[NCache[
              Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                 Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
               Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                 Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
              CurveClosed->True]}}],
          StripOnInput->False,
          GraphicsBoxOptions->{DefaultBaseStyle->Directive[
            PointSize[0.012833333333333334`], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]]}],
         TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 1.}}, {{
       1.7, 1.}}, {{0.5, 2.}}, {{0.1, 0.3}}, {{0.5, 1.}}, {{0.6, 1.3}}}]}}, {
     {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, 
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-1.8, 1.7}, {-1.7, 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8086000954277463`*^9, 3.8086001358686543`*^9}, 
   3.808659749377303*^9, {3.8086597830363655`*^9, 3.808659805568845*^9}, 
   3.8089365048167415`*^9, {3.808937006405337*^9, 3.808937024185524*^9}, 
   3.808937092365244*^9, 3.808937139114006*^9, 3.809560528989445*^9, 
   3.809566602585322*^9, 3.8096133610724916`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"f5fe0565-8f67-4be1-a311-5ed7c917620a"]
}, Open  ]],

Cell[BoxData["2"], "Input",
 CellChangeTimes->{
  3.809637622303808*^9},ExpressionUUID->"54d6cf7e-6ede-4772-bcff-\
b5093c15395a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.8"}], ",", 
       RowBox[{"-", "1.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1.7"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "1.2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "0.7"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.7", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6", ",", "1.3"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Target", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainData", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "\[Rule]", " ", 
       RowBox[{"{", "#2", "}"}]}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Standardize", "[", "Data", "]"}], ",", "Target"}], "}"}], ",",
      "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.808600598246149*^9, 3.808600622410307*^9}, {
   3.80860068006481*^9, 3.8086008423693113`*^9}, {3.8086013107677746`*^9, 
   3.808601339210273*^9}, {3.808601382602316*^9, 3.808601424137957*^9}, 
   3.808601792959199*^9, {3.8086019380480576`*^9, 3.80860194472834*^9}, {
   3.808602213728652*^9, 3.8086022233625636`*^9}, 3.8086027659329834`*^9, {
   3.8086598186660433`*^9, 3.8086598468114395`*^9}, {3.808660482006234*^9, 
   3.8086604903883533`*^9}, {3.8086666183268538`*^9, 
   3.8086666279980288`*^9}, {3.8088353310465403`*^9, 3.8088353707571173`*^9}, 
   3.8088354159312944`*^9, {3.808848651502532*^9, 3.8088486631455393`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"d96903ee-1280-47b1-ad26-48d4696d03f6"],

Cell["3", "Text",
 CellChangeTimes->{{3.8086009721771*^9, 3.80860097588523*^9}, 
   3.8096376287709537`*^9},ExpressionUUID->"eddc053b-8c5c-4ae2-b2f6-\
208bc847b145"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Model", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\"\<Input\>\"", "\[Rule]", " ", "2"}]}], "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", 
       RowBox[{
        RowBox[{"Ramp", "[", "#", "]"}], "&"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.808600992433234*^9, 3.8086009951243987`*^9}, {
  3.8086602425762577`*^9, 3.808660243838919*^9}, {3.8086605505638075`*^9, 
  3.8086605685943546`*^9}, {3.8086678333056583`*^9, 3.808667834808708*^9}, {
  3.8089357963554597`*^9, 3.808935798872633*^9}, {3.808935926460507*^9, 
  3.8089359270701756`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"a19f7971-9937-4e06-aa81-a96d12f85f81"],

Cell["4", "Text",
 CellChangeTimes->{{3.8086010023194475`*^9, 3.808601011946212*^9}, {
   3.8086605922345314`*^9, 3.8086606340278206`*^9}, 3.809390855833251*^9, 
   3.8095607409608774`*^9, {3.8096376368004737`*^9, 
   3.809637639502982*^9}},ExpressionUUID->"7adfbf94-4597-4309-8752-\
0bd4bb60c6c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Net", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"Model", ",", "TrainData", ",", "All", ",", 
    RowBox[{"LearningRate", "\[Rule]", "0.01"}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<TrainingSpeed\>\""}], ",", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"RandomSeeding", "\[Rule]", "88888"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "\"\<Real64\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8086010264282813`*^9, 3.8086010756769485`*^9}, {
   3.808667837777246*^9, 3.8086678384008245`*^9}, {3.808692428656076*^9, 
   3.808692445949525*^9}, {3.8089358761428385`*^9, 3.8089358809450426`*^9}, 
   3.809566144775087*^9},ExpressionUUID->"af8ef2a7-10a5-401e-921d-\
31fd943e001d"],

Cell[BoxData[
 FrameBox[GridBox[{
    {
     ItemBox[
      FrameBox[
       StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
        StripOnInput->False,
        FontSize->12],
       FrameMargins->{{10, 5}, {-4, 2}},
       FrameStyle->None,
       StripOnInput->False],
      Alignment->{Left, Bottom},
      Background->RGBColor[0.96, 0.96, 0.96],
      Frame->{{False, False}, {True, False}},
      FrameStyle->Opacity[0.1],
      ItemSize->{Automatic, 1},
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"summary\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "10000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "10000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"time:\"", "\"12s\""}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"examples/s:\"", "10179"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"data\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"training examples:\"", "12"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"processed examples:\"", "120000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"method\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "12"}, 
               "RowWithSeparators"], "\"CPU\""},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"round\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"5.22\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], 0.522188614685533, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            ItemBox[GridBox[{
               {"", 
                ItemBox["\<\"rounds\"\>",
                 DefaultBaseStyle->"LabeledLabel"]},
               {
                RotationBox[
                 ItemBox["\<\"loss\"\>",
                  DefaultBaseStyle->"LabeledLabel"],
                 BoxRotation->1.5708], 
                GraphicsBox[
                 {AbsoluteThickness[1.25], {
                   {Hue[0.083, 1., 1.], LineBox[CompressedData["
1:eJxFWHlcjmkXjrJElncpxr6lhGpkK0ZXQiFKloSZNjHG0mpJJVGERIii0i5S
6m3vrd4llawTMpYk2SKEQiLznefru5+vf/qdzrnPvZxzXdd5GunsZuvaVUVF
ZUIXFRXuN/sp0bN6PXNOtazSMlDaXAC8Sy33cEpjtg1ql+tMH/KgWqb3zixq
vaY9HsTsr9r7jfkd8WWQhsM//W7Lvp12ujD+1Vq8CPJxP6B5+3/xG5AyVjvB
m+w1pqNCEs03I/KdwZfhZHeud0dVjFQrnOx6j4+SPn97Qn/9jPBATZbPG8ZX
bhx+Lb4tE16ujp//cxvUqiReVnx+H6iutNhyj/zmWpKjwRN8UXz99ic3fj9/
NB9rcXEie+ufxwIUqwJgtz66Yhe//25ELh7Q5En20t+N83ddDkTqUdv0rWJ2
nj0Ii3I+tZ38m/adz4h+tBd57t+NHfnzBSHy2asBVhQffOmXlKJPwZDmG2Zz
+TrPuw9bcsyGnSI79v6BmPvqIVDsVm/RFrPzH8DQLlX7ZpGd36X9xJcRB1FY
23ZLyd/nEHREuX4+ZP+t91eoeHooPrYGTIsUs/sdRlNae3SV6Lbs9dKHeydZ
h2Gsesy1ejG77xFsqY+7Z0T7B85K/k3X6ChUxzU3c/7O+x/FJQfT587k78M9
wKxw6B5vyNgvYu8RjpkOb7W1yX96veaUeQuOYU6WVdM0vl7H0OeV+pZrlG+s
3w3DmuXH0RAQoTZXzN7rOPxuDa+MpnzZdJu1TifwT0DvoEwxe78T+LWi5ftV
sk3peC2bImDwMzNrliZ7zwiUTPJRG0jrrxV+Hr1nx0nEe9msrBWx9z2Jfm13
RJNp/cqb6cMFQafge0atl6mYvXckTPI3b0um+OcNroPjjkSicsnkpOdC9v5R
CC+y7xpB8R5fhw4wOBOFUk9Znqsmq8dptCWM+vM6xXf0vicsTTmNK0NzJxWL
WH3O4MZjwfcXZB8cEdZ3keQM9jeIdqposnpF437JzdCZlF9ryrxetSXRyJjV
I9KFr18Mvguq3uRR/oT5P7ttrIrBtO7WoyFm9YxFQ8/G6PlkG/yR16X9biz2
9VliWs3X9yy0vPxyf6f9pZ5bOkLqzyLV8vPnZhGrdxxWxw4z7El2kvnxH723
xWGibenNhXz94zDKurvHKrLfLHLbeed7HMZc/KXQQMz6IR7qR703c+czXLmw
7XRgPHxOhkx5zfdHPII0dR+IKH67s8425x4J2HPSbVGCmPVLAraVeuEHxZds
Um0ddzgBI7ReagSIWP8kYEJ57SNjyq+6/YnHR2EiNgqyTPX4fkrEZpfrrcfJ
ns8dNzIRvk9Gf9Dm+ysRvXMrNzTT+iOHTm3ePSwJTxZpFszi+y0Jlcabflen
+HsRXk0WSUkQDvFS+PH9l4RpUwe99CJ7SJz1hn56yfCw171+WMj6MRl5K3xl
PmQ7U/S9S8mItPHu90rE+jMZ438mewXQ+tScHq6xU1Iw9qDtlx5i1q8p+Np7
xZlYim8ufdbgKk1BfnZBgaWQ9W8KDrmk3hVS/JQqmeNEs3Nw2e5+WJXv53OQ
zI9f/ZBs3ztn6lorzmGky29bewlZf6diY9Sku+Mov+Lx9jXFVqkwXxlWYsj3
eyoCPMd24+rRo5Ea6nYq2rTMJJdFrP/PQ0O1wrYv+Rd/Mli5cOV56P05s6ZR
wPBwHjENXQVXKf7EDwJA3XmEJ8e8axcxfFxA7okHKd60/mF32sCF7A87zG7x
eLmAaesO24dQ/AgBXfj1Bax95dHfXcjwk4YCzJTXkH/dYCqAWxpMC53cRooZ
ntLQa95gw6fkT9emhvichsmGFjY7eD68iJLXE7u8JH8LHb9t50XEtxxK5vbv
xNtFdNjs+XaR7mNsMrlKppIO/b463g0ihr90XLwdv9WZ8gXM6W+xf186VLTM
0q6JGB7TEfNg8x8LyF+x+O3lxRoZ8I/Tue3E4zMDoVY9gn9Qfg37K7O1jmVg
mFzt8UEhw2sGhrQY2ThRPluXJPnjAZcwxl71xC4ev5fQ09TYMpv8kZt3z0qO
uYQhdTHHH/F4Jjvsyscyim+eof9HniATAWXzaxQChu9MFOu8nqTF8aHZkKGn
l2Vi5M7jm18JGd4z0TvU928Prr/oOfxPZcK/9MzsHBHDfyYi+qpocO9rT/B2
epiJil9DF67l+SATi9zuj7pL+fxsXtrPHZoF59CghNUixg9ZsJ0tcRxM/rPL
7w4c55gFP9VG71IR44ss/FExo2ow5VOuUv6jkZiFjrYVGdd4/siC5GuNkHv/
Fw6ZJz+8yEKLjX44d55OPpFgqNr0q9sof0/X2OV3dSVYesDcIlbA+EWC0TFP
9Ospfjy1Q8FGCU7v+VZuLWZ8I4FWkeRcFvkX03XOZEjw07J5gAGv7xKMEFuI
j3L8700F+ShBx8ExLSUCxkfZsPhx/3047R/hs2KJy+RsrDmr7ICI8VM2uoQ7
DQqm9QW7qIG2Z+PyeLvMQBHjq2zUqJcZp5P9aO+kW3pF2XiZPC/jJs9f2bAy
rKy4Qfv9DKGG78iGv/24YVw9O/ksB0M/iJ6dpf1HEhw+meYgva2yzFHM+C0H
eglpXTj9n0PlvrcnB6t1spoUIsZ3OXirvsaPm0/WR765Wlieg+rWt+3fhYz/
clBkEHV9DKdfMUQoPXMxKVJ7fjch48NcpJ1MupPA4S+hwjJwYS6sTU+pmfN6
nYsRG5aEJZG/+hwRYFguWoNq5nD46OTLXDRuGGPP4a31IiWozoXdSM8VK4SM
P3Nhn6EZEUz3H8DRgTgPOsl9BnF47uTTPHz3eq9pQvlM8umB7fIwb1S6VMrP
A3mI1/o8uj/5fy+mgkflQf3BO+8LYsa3eWhfnXY5gPLvVlAD1uaheOnapFSe
f/NQGjN3hxHlS6TrSYfn48/gfY6hPB/noyK4y6O15K+4NhVnnfOxvu/8VedE
jJ/zkb7apzqf44O/x/y7JzkfZkedhSIh4+t8pCwI1Lbm8EJ0uK4xH+4DUo0X
8PxdgFdRNvmTaL3hIxX/BeMLYOlXaHKf5/MC7Go1GJjC4aX+/Qz9LQWoL5MG
zhYzfqf1s79lq5J/24vadkFWAeZreN/TFzG+L4CX557H7+n+UVT+zy0FiOli
/jOa5/9CCCIFfpz+FzcX7HgwtRCSHv4zE0VMDwpRmKpfx9XzSWvKtBKfQiQ5
df/B8X+nPhQisJ+ucjLdpyvJQVxxIc6l3NfeK2B6UYj9f20SPaB47X/35Ab9
Wwi7iA79/8+7RVieM/Ec57dUIwTOLoKbv3QRx3+delKECRnx3XI5vKg7GFkF
F6F9bkSkl4DpSxHeV4t3yTn9J3gYXClC/LKwJf15vSmC0WrfG4dpvUQ0I0vU
W4qpn+y+ruTnNynqbrSNLie7ZuA496+LpDC3SzGKFjM9kqLjfaPAnvK30XUf
HZViRtHFpun8vCeF3LzObBL5B4/u9r70jhRxhqbWamKmV1Jcy1DJaqT4Wbot
FxO0ilE+tUjK9U+nfhUjOfdYnj7FO018unGffTHODz7xYTqvZ8VYEW1xXpvs
IKKPv6KLcTbmueMFAdO3Yny1SvCWcHiZVvJ60ZNivFhTGGsnZnpXgpPJyyNL
OLzMTEv9dVQJpploCqfz82cJXJ5ljOf48D3XDq4lKJPPcfgiYHpI9mzj7Rlk
Cyz2j/12rgQ/rIt73eL1sQQve1k3c+efbLX1Re2bElxPNGxrEjG9LIVUsO4u
Nz/YLSEBnFiK7BMZZwt5/SyFh6g9z5fy7yR6TXIvRd4yq/71QqanpRipL1Z9
S3bMajpwdimeapp8PM3Pw6Ww/s1krgvllzvSA34pxYBDRb41vN7KsHta2SdX
Di8EF2tjGUbf3f92h5DprwxzPw8bacnhZSM1mJ8Mc8bneE0UMj2Wwed5r9qH
HF7cqeFlMuxssptcz+uzDGqmIQe574GUIvqDihz+N+90mPB6LUeCzFEvmPzT
qTxuo+ToNVO5htPnTv2Wo2pt2I4Quv9Vopun5nJsSJuzVMHruRyWB9I/c3q2
muRzqascQ0a5Xs/n53k5xr5Nko0n/7vL9OD75Oiz85jeBF7v5ZDM3erJ1XNX
Zfm1qalyWB3qvv+RgOm/HC7+J0YWUr7+V6lBquTYrivJ+1XM5gE5fD8tS71H
/vjr2QcHNclRf8qsnKt/53wgh3vTT88Mijei9gzVUODoprTWYwI2LygwM/hN
PjeP/ZduJyrwW3iU5jMhmx8UGLRx2EuOb1fQ+OBurYDxL2PfcvzUOU8oELJg
8JwbZDfeO9KzwV0BHYehnovFbL5QICjZs2wv5fN5QIRxTIELXsaJJiI2byjQ
3GhTYUr+3rX+leXZtH9xTpWUnz8UWG7b9pDTm+g6IrgaOk/+9BpuPuqcRxRw
uBP7cyXtp0/wPP9FgepqDc8Ufj5RYuLygkoZ5ZeR3AweqMSHLbq9Of7rnFeU
GOPZUVdB8UvoOQ4bK2G5LPnCbP77SIkfvzjkcPs1NJKArFKSXpakcXjqnGeU
+AtGwy3I9m6yUPPwU6LOYeuy1wI23ygR1uvprfG0f/f3JHgxSmyvGzfEjZ93
lLi5oCmF+x4/9WFK2TKZEsZjuu0r57+/lIjuafuc238c0VNFvRK6PYXdcvh5
iPaz1TPl9LmI5HZ61zJMTvS83Mh/r5Vha4R+2FOyrahdLowug5nLKZMtYjYv
lSH5QFLIGcr/uF1gNmRuGeTPjLwf8/NTGc7rhcq5+dqtgwagdWXQCv+kf1rI
5qkyhOjYmq+g+P/+syqkDLDMz8zsf1v2HwCjbXI=
                    "]]}, {}}, {
                   {Hue[0.59, 0.7, 0.75], LineBox[{}]}, 
                   {Hue[0.59, 0.7, 0.65], AbsolutePointSize[4.5], 
                    PointBox[{}]}}},
                 AspectRatio->Full,
                 Axes->None,
                 Background->GrayLevel[1],
                 
                 BaseStyle->{
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6},
                 Frame->True,
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->None,
                 GridLines->{{2000., 4000., 6000., 8000., 10000.}, {{-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {-0.6989700043360187, 
                    GrayLevel[0.8501]}, {-0.5228787452803375, 
                    GrayLevel[0.8501]}, {-0.39794000867203755`, 
                    GrayLevel[0.8501]}, {-0.30102999566398114`, 
                    GrayLevel[0.8501]}, {-0.22184874961635626`, 
                    GrayLevel[0.8501]}, {-0.1549019599857432, 
                    GrayLevel[0.8501]}, {-0.09691001300805638, 
                    GrayLevel[0.8501]}, {-0.04575749056067506, 
                    GrayLevel[0.8501]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.47712125471966244`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.6989700043360187, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.8450980400142567, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}, {0.9542425094393249, 
                    GrayLevel[0.8501]}}},
                 ImagePadding->1,
                 ImageSize->{302, 182.},
                 PlotRange->{{0, 10000.5}, {-0.811, 0.31100000000000005`}},
                 PlotRangeClipping->True,
                 PlotRangePadding->None,
                 Prolog->{{
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    Offset[{-2, -2}, {2000., 0.31100000000000005`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["4000", TraditionalForm], 
                    Offset[{-2, -2}, {4000., 0.31100000000000005`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["6000", TraditionalForm], 
                    Offset[{-2, -2}, {6000., 0.31100000000000005`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["8000", TraditionalForm], 
                    Offset[{-2, -2}, {8000., 0.31100000000000005`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["10000", TraditionalForm], 
                    Offset[{-2, -2}, {10000., 0.31100000000000005`}], 
                    ImageScaled[{1., 1.}]]}, {
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], 
                    ImageScaled[{0, 0.}]]}}]}
              },
              
              BaseStyle->{
               FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                GrayLevel[0.4]},
              
              GridBoxAlignment->{
               "Columns" -> {{Center}}, "Rows" -> {{Center}}},
              GridBoxSpacings->{"Columns" -> {{0.5}}}],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"},
           {
            ItemBox["\<\"\"\>",
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          ColumnsEqual->False,
          
          GridBoxAlignment->{
           "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {False, {
               Opacity[0.15]}, False}},
          GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], 
              Offset[1.1199999999999999`], {
               Offset[1.75]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.8]}, 
              Offset[0.2]}}],
         "Grid"],
        FrameMargins->{{10, 10}, {10, 5}},
        FrameStyle->None,
        StripOnInput->False],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Alignment->Center,
      BaseStyle->{
       FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
        NumberMarks -> False, Deployed -> False},
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.5599999999999999]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], 
       Offset[0.8], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Background->GrayLevel[1],
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.85],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.808601067184699*^9, 3.8086010768676586`*^9}, 
   3.8086020050269575`*^9, 3.8086027892845583`*^9, 3.808660259547945*^9, 
   3.8086924135312443`*^9, {3.80869244833751*^9, 3.8086924643524637`*^9}, 
   3.8088355241702795`*^9, 3.8089358942790136`*^9, 3.8089359682488437`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"9a8e59eb-dd62-4c9a-8a6b-8a47648c7a54"]
}, Open  ]],

Cell["5", "Text",
 CellChangeTimes->{{3.808660666542646*^9, 3.808660690728325*^9}, {
   3.808661972418672*^9, 3.8086619988489647`*^9}, {3.808783006299388*^9, 
   3.8087830200299387`*^9}, 3.8093908729428787`*^9, {3.8096376490163574`*^9, 
   3.8096376492817793`*^9}},ExpressionUUID->"9a7237e8-55df-4ada-b2b9-\
68ef027d7c41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrainedNet1", "=", 
  RowBox[{"Net", "[", "\"\<TrainedNet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8086028110617275`*^9, 3.808602838503564*^9}, {
   3.808602883965561*^9, 3.8086028902326326`*^9}, {3.8086602693963137`*^9, 
   3.8086602708099976`*^9}, {3.808667848155262*^9, 3.808667852692933*^9}, 
   3.8095661481229343`*^9},ExpressionUUID->"6f6a63de-9555-4584-a3e2-\
acba6964930a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"Ramp", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.808602824003295*^9, 3.8086028390357494`*^9}, 
   3.808602891904707*^9, 3.8086602716107855`*^9, 3.808692471212666*^9, 
   3.8088355309383073`*^9, 3.8089359752758017`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"7a2e7e7a-2864-4eae-b90b-3956cfbb4562"]
}, Open  ]],

Cell["6", "Text",
 CellChangeTimes->{{3.8086028449787445`*^9, 3.80860287692223*^9}, {
   3.808660740061116*^9, 3.8086607816514907`*^9}, 
   3.8096376541870184`*^9},ExpressionUUID->"6e75de00-57d7-4d1f-99e2-\
dd27c57d1f53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"TrainedNet1", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"1", "-", "#"}], ",", 
          RowBox[{"2", "*", "#"}], ",", "1"}], "]"}], "&"}], ")"}]}]}], "]"}],
    ",", "Plt"}], "]"}]], "Input",
 CellChangeTimes->{{3.808602895603957*^9, 3.8086029554476414`*^9}, {
   3.8086029926982927`*^9, 3.808603006547721*^9}, {3.8086030593240957`*^9, 
   3.808603101509396*^9}, {3.8086031452502265`*^9, 3.8086031739055004`*^9}, {
   3.8086602825319486`*^9, 3.808660292988056*^9}, 3.808667857858909*^9, {
   3.8086928659695807`*^9, 3.8086929857730465`*^9}, {3.808936523417074*^9, 
   3.808936528083955*^9}, {3.808936561132097*^9, 3.8089366181712713`*^9}, {
   3.808936654330998*^9, 3.808936960091423*^9}, {3.8089370307994523`*^9, 
   3.808937055020076*^9}, 3.8089370958781185`*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"8de80b20-5f5e-45b4-ba9e-2bb30c8ccfd4"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxd3XvMJXddx/Ftd7dthARiCCEFRUy9ECMYRWIBOVUSLhLBUNSGGCCApBpB
raJgUoONIpDIH6UBNYSGi2CUBCFNJaRxplAuUhqgQilXSy219EKvtN1e3TO/
z+tT98c/zZvpPs8zv/m+ZuacnT7nCa/4wxf97vEHDhz42sMOHNj/M/9bxz9O
Wj/0iL/7wXs+8sCiz3j8yTc865X3tw89+YNXffdR97X/7ZlPueJvP31P+3de
cPGlT3z9kfZJL93/H3e3L3jNNy58zTfubL/87DP337L98P23f+Yd7Y+965x3
nn7Lbe1XbT/gre1HXrT9C+03HI2zfuj77csv3H/DG9o/s/9pv3hd+6/33+4p
17a/9aj9F/yf9lO33buq/aP73b/om+0vfnf/B77aPueU5517yvMub5959Lud
8fjPtd+5//ZnLO2LtgV9f/vCw1vv9KPevP377Q+Mr9d+z/h+7ZvHz9P+5fHz
tp899qd909jf9nljPdpPH+vVvnqsZ/stY73bjxnHo/0H43i113E8H9q/cbzb
Z455aF805qX9yDFP7VeNeWt/bMxj++FjXtsvH/PcvmDMe3v888BpU6/773Lq
4RPrQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oP
zYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5qP7l98dL3io+sTHz3e8dF5
iI/OS3x0nuKj8xYfncf40HxMvZ6z7ecJ9aH50HxoPjQfmg/Nh+ZD86H50Hxo
PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50Hxo
PjQfmg/NR/cvPrpe8dH1iY8e7/joPMRH5yU+Ok/x0XmLj85jfGg+pl6f9cr9
D3a4PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H56P7FR9crPro+8dHjHR+d
h/jovMRH5yk+Om/x0XmMD83H1Jn7Q/Wh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzUf3Lz66XvHR9YmPHu/46DzER+clPjpP8dF5i4/OY3xoPqZeP7Vf9pMP
1ofmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oP
zYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H92/+Oh6xUfXJz56vOOj8xAf
nZf46DzFR+ctPjqP8aH5mHp907bux9eH5kPzofnQfGg+NB+aD82H5kPzofnQ
fGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQ
fGg+NB/dv/joesVH1yc+erzjo/MQH52X+Og8xUfnLT46j/Gh+Zh6fc65+4U+
rj40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+ej+xUfXKz66PvHR4x0fnYf4
6LzER+cpPjpv8dF5jA/Nx9SZ4wP1ofnQfGg+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+a
D81H9y8+ul7x0fWJjx7v+Og8xEfnJT46T/HReYuPzmN8aD6mXt++382XPrDw
ofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD81H9y8+ul7x0fWJjx7v+Og8xEfn
JT46T/HReYuPzmN8aD6mXh99w/4drfvqQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8
aD40H5qP7l98dL3io+sTHz3e8dF5iI/OS3x0nuKj8xYfncf40HxMvf7D9hci
99SH5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB/dv/joesVH1yc+erzjo/MQ
H52X+Og8xUfnLT46j/Gh+Zh6fdz+j519d31oPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD89H9i4+uV3x0feKjxzs+Og/x0XmJj85TfHTe4qPzGB+aj6nX8z+y
/8J31ofmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H92/+Oh6xUfXJz56vOOj
8xAfnZf46DzFR+ctPjqP8aH5mHr98f0yn3tHfWg+NB+aD82H5kPzofnQfGg+
NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+
NB+aD82H5kPz0f2Lj65XfHR94qPHOz46D/HReYmPzlN8dN7io/MYH5qPqdd/
2i/ju26rD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQ
fGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+un/x0fWKj65PfPR4
x0fnIT46L/HReYqPzlt8dB7jQ/Mx9frTrz/16JG5pT40H5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+ej+xUfXKz66PvHR4x0fnYf46LzER+cpPjpv8dF5jA/N
x9Trb25/7qb60HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+aj+xcfXa/46PrE
R493fHQe4qPzEh+dp/jovMVH5zE+NB9Try/Zvs/36kPzofnQfGg+NB+aD82H
5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H
5kPzofnQfGg+NB+aj+5ffHS94qPrEx893vHReYiPzkt8dJ7io/MWH53H+NB8
TL2+bPu5vlsfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD
86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50Hx0/+Kj6xUfXZ/4
6PGOj85DfHRe4qPzFB+dt/joPMaH5mPqPNf0nfrQfGg+NB+aD82H5kPzofnQ
fGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQ
fGg+NB+aD82H5qP7Fx9dr/jo+sRHj3d8dB7io/MSH52n+Oi8xUfnMT40H1Pn
Ob5v1IfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H92/+Oh6xUfXJz56vOOj
8xAfnZf46DzFR+ctPjqP8aH5mHr95rZO/1Ufmg/Nh+ZD86H50HxoPjQfmg/N
h+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/N
h+ZD86H50Hx0/+Kj6xUfXZ/46PGOj85DfHRe4qPzFB+dt/joPMaH5mPq9bJt
XT9TH5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8dP/io+sVH12f+Ojxjo/O
Q3x0XuKj8xQfnbf46DzGh+Zj6vXN23H7cH1oPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD89H9i4+uV3x0feKjxzs+Og/x0XmJj85TfHTe4qPzGB+aj6nXU7bj
8OEdH5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8dP/io+sVH12f+Ojxjo/O
Q3x0XuKj8xQfnbf46DzGh+Zj6vWOcT2pD82H5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+un/x0fWKj65PfPR4x0fnIT46L/HReYqPzlt8dB7jQ/Mx9XrLeD1S
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8dP/io+sVH12f+Ojxjo/OQ3x0
XuKj8xQfnbf46DzGh+Zj6vXa8X5WfWg+NB+aD82H5kPzofnQfGg+NB+aD82H
5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H
5kPz0f2Lj65XfHR94qPHOz46D/HReYmPzlN8dN7io/MYH5qPqdfXjr8PqQ/N
h+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/N
h+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPrp/8dH1io+uT3z0eMdH5yE+Oi/x
0XmKj85bfHQe40PzMfX6e+Pv0+tD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
mo/uX3x0veKj6xMfPd7x0XmIj85LfHSe4qPzFh+dx/jQfEyd35PyvfrQfb4k
3edL0n2+JN3nS9J9viTd50vSfb4k3edL0n2+JN3nS9J9viTd50vSfb4k3edL
0n2+JN3nS9J9viTd50vSfb4k3edL0n2+JN3nS9J9viTd50vSfb4k3edL0n2+
JN3nS9J9viTd50vSfb4k3edL0n2+JN3nS9J9viTd50vSfb4k3edL7J/nS6yX
50usT3z0eHu+xDx4vsS8eL7EPHm+xLx5vsQ8er4k3edLju31ZeN53vrQfT4x
3ecT030+Md3nE9N9PjHd5xPTfT4x3ecT030+Md3nE9N9PjHd5xPTfT4x3ecT
030+Md3nE9N9PjHd5xPTfT4x3ecT030+Md3nE9N9PjHd5xPTfT4x3ecT030+
Md3nE9N9PjHd5xPTfT4x3ecT030+Md3nE9N9PjHd5xPTfT4x3ecT7V98dL08
n2h94qPH2/OJ5sHziebF84nmyfOJ5s3zieYxPjQfU68/O/57kPrQfGg+NB+a
D82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofnQfGg+NB+aD82H5qP7Fx9dr/jo+sRHj3d8dB7io/MSH52n+Oi8
xUfnMT40H1Ov/zL+e8L60HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+aj+xcf
Xa/46PrER493fHQe4qPzEh+dp/jovMVH5zE+NB9Trz81/nv0+tB8aD40H5oP
zYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oP
zYfmQ/Oh+dB8aD40H5oPzYfmo/sXH12v+Oj6xEePd3x0HuKj8xIfnaf46LzF
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
OHvaWJ/lE/m6n8/30Vfn5/5wnL1trF/7qdvPm/PLGz/5DOtw/9i+e9P2892z
XD++3u5J43gvN8TVFTkO38k66u3wnnPimvlZtfmZtp+mzY/5Mo/a9meN+/1+
vXne5h7n6UNrf99btptf89nf/5bt5nWe30+N96vWMV/3dDtv2nbzzp/t1471
7naete188G37M8fx63bnC207T84ftvNnO1/62M/vemj7uI4dWI/9PK8D9csn
j7q/j3za/vbx/MFDv5882/mfPc/t8+edf213fpj9z+3zua8b3rrd+V7b7vzh
/G+788l8fvH5xv84fHf7sZ+nc6TbOTz283WOLO8Y54tudz3Ttvd9mlzfbL8j
jm13vezvFcx25zvXT9udH213/tOuz/P2+fMebXd+df50vtTuB+bt8+fnvfr/
3wcdPT/P59u5588fs935ez4/z+3zfp441qPb3e9o253f3f/Y7nw/n/99Xsqn
ct63vb/PPW2760V/v3u2/9yY7253P6dtd31xf2f7Xw5f3d7ft5223fWov387
212/bHd90u5P5+3z78O33fXP9c31TLsfnrfPv1/cdtfP+Xo49/z7mW13fXX9
9P1t526+vvp9om8d599uP+b+/2jb7np8zOuBo9tdn+frtd/H+PPjetXtXn9o
213fvR6x/es5r9nu9Y223f2A1zu2nzOu193u9ZO23f2D11O2u9+w3eux+X7j
xpxH9dXjfsL966rdL8zt/tafT6/T9rb7D/cP7i9c790fuH6P4/LQ9fo543mJ
Xn+166frq+uf66Prmeud65Hrl+uH643rgc8Pd373ecnO5/388JyPj/m82KPn
U+db50fnT+c350PnI+cv5xefb+N84fM8nB803/zz2d9XH2888sGTeTb/5rO/
TzPz5vfNmS/t+Pt9W9M89PWQ+Xn+Ngf377Yvf/qh9X15Dv/L2587uN67//Gu
uGv3ju34HZ/7z5t2v7ity33LD2/H+bo893vPcsn2z6t3T9/2+6jL/Fz/sb0/
cdfyCyfs/9x5mZdblz/ZjvcnlvO2r//95Yqs25iH65eztv399vLu7fhfu5yw
nT+uWd63Hd+rl5/Icf3s9n0uXS7bgN6+fHzbv39fXrfffNUPlrO29T1/9yOZ
qyPb9/lk5vze5axtvb60+8z2cz64e9H+x3nB4fX8PFe67c4XD6137f/vi+/d
3bGty8H1hdt+HNmN3Tx+PXt8v91vbet03PqV8fPsHrPN+0O/l+Oj27//wPJX
2+ny1t2t29d7cPnodn74/u5Pt69zf34/+vW7u/Y/5g33Lr+f3xP1F9ufO7I8
bjtuV+3uf3D/v6P3R5mTX9mO6w+Wj4z13V2y7efty4B+3mL9T8/cDd+3Lc/d
/vnxfA7ALcsjtvn6/DK83ricsq3Dlctjt3W8bnl5XPzY5u+a5fgxD8tvbPv/
rfzzpuUl28/9leWF27re2uN15/Zz37y8dKx/jutty+Xj+CxvGOvTfkKcP22b
z/OX/9wfrifftZx07Xa8d3+8PzyXHlluHl8/57n7lzM331/bfWn8+7s/29b3
uPWJ+e96f2mb56Pnq7F/uzduc3fn8utj/3cHt/PjHcvDx3p3f1+S88SYw6uW
fx7Ha3nx+H5Z54d+npvH/CyvHeuxe2fOi68a67XblvlDDy7bMl184nrT6J0+
ff9lT31ovl4wBrPH+8U5j1l/X+/W8edP8/W084HXp14PeP0xXu/dWO9e/9h+
cPvjt3Re+/lTuQ86I+c58+R65vrn53vyWL8+v21/X7dncuH99ffbY37qx++F
4uNJ41/svD5/rFfn5eLhu9/Perg+vmHMTz3/Uc6jfLkOmTc//3x+tb7T9r5f
YP+O/fzoAz2+5lG7vnq94/WH428+teuh+133n+bDfOr586nmeZnfP3vvtg4n
9H5iXJdO6Lxuf/zSw32/wet17X7C/cP8fprtH8x/V8yr16PuM7Xj4n5gfj/M
9ndtX/+K+vZ6xf2+dr13P+p+Ts+/b9n7IebH9VO7n/L+hf11PnJ91fbf/Zft
x36e7ZHFfLreavdPXv9aD+c312Ntfdxv2d7P48p9jvOf67GeP8/V/b2v6/qr
58/XcL/ufOn6rI/9ffT3dv28X6Xdv/Dr/Sjz537GPLkfnd+Pdb/qfsf5zfst
1tP7H9r9j/OF9zfMq/sh8+f1uNerXh9r9z+uN/08qMyr+yHXHz+H1y9eL2n3
P65HXg+Zb/dDrk/ub8yf+w3z4frvfsz11/2U1xfz++1ef7j/dH73/ihP2usT
ryfm99e93nB9cD/l/T7XK+34ev/O+196fn3iz2vb3f+6/ng/j0/t9Y3XI/P7
8V6vuD92P+b9J9dTPb+emd+/t939teuv95+8f6Pn10O+n7bd/bnrq/ejnB+0
11Ne/8zv93t95P7d/Z/3T7z/oOfXT/PfD9ju/t/9ovdPnI/0/PrL99O2e/3g
/sH7Kc5X2vnM66357xe8PnP/4X7P62XnJ+9Ha/en7ve8vnU+8X6kdr/qftDr
U+cT729p96/8ev3q/NLPq0u7v3V/6fWn84v3P7T7XecD739YH/e/7s+93vJ6
1P2l+0+vh7zedH/p9aPXK14/ev3g9aDXD65Hrieuz5eN81+vH873rqePHufb
nt+dv13/Ppf7KOfrvm+d69ft4/rT86/3W+a/H9HOv65X3h+Z3x/Xzs+uL97P
mN8f1c7frh/ef5jfD9PO764P/fzVzPm/jvNY78+9n+789Onx+rKv/71/yvN7
x+vfvj50fzn//ZY2L16P8+R87efTfj7Xc9cP53+vb7T5c353fzD//Yk2n16f
8+p82s/fTVuPY14fHb0eOD97PaXNu/Ov8/38/rzmwet1vp3vrL+2/s6fztfz
+8OaL+dH5+P5/V7Nn9dP5t/9rvvled7dN7q/nee7n1+d+9F5nt2vu580v+bL
/YX3f+Z5cr/g/Zx5ftwPeH9nnhfXf6+n5/lwvfZ+zTwPrr/ev5mPv+vtxbkO
zsfb9dH7MfPxdb3z/sx8PF3fxn7d3uP3f+ohtbs=
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxMnXXcVsXTh+9Ou7u7AwGVVEGwRcEWwVbswiRtRbC7BcTGDhTF7u6On93d
717OtZ/n/WM/c8/ZmTm7O9d5nhuU81186AED9i8VCoU35ykUysl+2iwU8Dul
sVYhPnO9Xxpzp5HCCl3TqKZRS2OdNOppNNJY22v4nc2rpLGu86l0oZu2lcbp
aWyfxg5pdDGWuj3SaKcxUxrrpzFbGrOnsYF2jjT6aOdMo1caM6cxSxobpjGX
a+3ufajV03rE9TWPuP7uad40Nk5jvjTmT2PbNJZOY5k0NvHaAmlsZCxxm6ex
UBoLp7FlGouksWgaW3gNf1PzFkxjgPOLpbGVdvE0NnOeWlt7bYk0BmqX9IyW
S2N5z2xZ/e1cI/56aczqee1o7App7JzGimmslMY2aSzl3gZZG38nY4nr7VlS
a7B5K6exi3aVNPZIY81CcLJnoYOXvbT0f1ghmICRfewx7DyfmvJFguDzNI6w
r/Rzb/OI2zWN1dJYPY19zaPWftaDqYPta680DioEN/gH2nv84dam54cYy/4O
87zga3/rwebhXmNNhxpL3Dh7wLkeaT1YO9Ge0auhaazquo8tBCswNaIQDMHC
cV7DH2Xv4ego6/GcDfGMqTXSPOKOdh5mj9Fyj9HWgLtT7DH8nmyP8U9yjfgn
FII/1n18IbjEP9U8mDpNC2tjrA3jY7XkHOCZcdZneDZw9EwaF6ZxURpnFoKh
XdKYUAgW8a+xf/TkbPfM+f2e2Ngt2XPTOMs85i4oBHOwdo6xMHJ+Grs7d6Hz
MHhxIXiCu8sKwSLsXK6l51do2ceVWti5xLx93cNe1rrKeVi7WssepnnunN9E
9wQ7kwvBGUxNKQTr8Hit1/AnGUvc9YVgCxZutN/0+TrzmLu5EGzB0Q3GEneL
12BtqnZkGrdqYe1O+0fP77Cv+LcXgiH8S90353WXsfBymzWIu9trsH+PFr7u
1cLdfVrO5X7PBqa+Mp+86YX4HcCz9bL9oA8z0hhfCF4eKQRDsPCw1/AfNA/u
urWDoUepn36mfNkMRh5ynlp/Jq5eTeORNPdk8s8rBDvP22/2/VwhuMF/1t7j
P+DaWesLxsLUS4XgiXU/XQhGYfApa+O/aOzlroPng2fgFfcKUx/bP/r2eiGe
DTh61XlYe6sQPMHOO4XgCS7e9hr+G+bB1LvOw9R7Wnh503lqve81WPtAe1Ma
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
3SvxHLLukWlsWgmmRssBfR7lNfyx9humjrEez99unjG1xphH3LHOw/5xWtg8
3howuGlayw7Jnp7Gpamn7yUetqef6fOWae7d5A9pB1snp3FSJViE2XGVyN0x
jTO0cHWCteH9RC05Z8oIfJ2lha+Tq6leGtukcbbXOL9J9ow+nOc+ObML7Ddc
nO81/HPMg7sLnYe7i7RwNyjt6d5kv07jXGOpe0klWISpKyvBDX2+SsvPvKu1
8HJZJRiFtYmV4Im1Xux9qHWp9Yi7xjziJrsneJlSCbbg6C57w/ld5zV4v9ZY
4m6sBE/0/2Z7TG9v8hr+9ebB8tQ0RlSCr1u1MHWD89S6zWtwd7sWjnblzzf8
HW1iYKtW9P4ezrodfb07jSsq8dxyXtNTzDZpfJDi70wxd6QxOI07K8Eue7vD
2vgDUuypyU5L43LPklq3t4PHB6hZic+w9ogMwc6jWnh5TEv/n5IJGHnCHsPO
w5X4OUX+q/aVfj5uHnEzKvH9nrgnzaPW09aDqRfsK/1/vhLc4D9n7/FfszY9
f9FY9vey5wVfz1gPNl/xGmt6yVji7knncHcau6XxuvVg7VN7Rq8eqsSzx7rf
lhWYercSDMHCO17Df9/ew9Eb1uM5e9AzptZ75hH3pvMw+5aWe3xgDbhbMK1v
21bw+7k9puefuUb8/1WCP9b9SSW4xN8r5e6QcrdP48E0dkrjw8TPh9aG8Y/T
uMWcu9rBy7dpfFeJz/ensVL62fF7sn+k8b3X4KdSjZ7Rh5/cJ2f2i/2Gi5+9
hv9DpYO7X52Hu9+0cPej89T63WuPeW8sTPGP9ujxs2n8WwmG8P+pBKP4O6a9
fpnswim2WI1YOCpXgy3W/VclOIbHP62NX6pGLHF/O0/dajX2CkdzVaNPnGWj
GpzBfq0a8/DYrgZbsDBzNfpNn2eqxjX8ZjXy4HqWaszD2qzVsPDVqsY8tWar
xjUYnL0aFqbmq0bvYWHeavQVf570+SP7XK/Guljr/NWIhfch6ax2aQVfc1aD
Y/Y2RzVq4y+S2Ni5FdxxljxbPJMPpWu7pvFR4moGfxeUxsfp82LV+D3wTRpr
VqNn9GHJarAFR0tXgwl6vlQ1ruEvXo08OFymGvPwtWw1LEwtUe3gdLlqXIO7
5ath4WvVavSYHq5SjR7jr1wNnvDvbcc6F03XVqtGLBytUQ22WPeK1WAUHleo
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
/X5EHxbQanvc3qLXhibcOPOmFzt0/l6y94+af7rz6MqdYw3yYehJ69JPNN+y
3iA26wpiny52aAe+7H6eN4dzQhsOrbiscUjdrEH4omfwgjno7qHz90WxQ4Pw
FXuDJhvabKe53vtlBO22N4odGoRZk/At5+g5enDow2UtQ+qeao1pxQ7NQvJh
9HXjJlobP+sUUgs9wf/9vx7zOesQfuJab3a9WcMQi94ceoPoEMLSDa3QIERz
MGsfco8bjcWHFTTi0IqDra/10WFDbwtNLrj5xjnOHU0xtNbYHxoW39lntOGy
JuEPzsHZt+bDy0/GwRmacT97Rt8Zl7UJmYOh3/TpLbpvWW8QmzUSsWjIoZWH
7h8aZnDzrzkwxXr5C1L4Q48uaxv+7j1gjXlyHrfeH3KDfhp75uzQZUO7LesR
og8HX2jKEUfv0XFDG46+og2XdQixzMEx+nHk038044iDJzTj8OGSGsTBGhpw
zMEQWnD49Bz9t6w9iM3ag1jWmjUUWR+8oBNHDhqD6A1+UuzQNcw6h1jugS4h
8fDGdxN+XvDcv94KnUJ0CfleMt45NAbRI0QfLmv1obUGN2jHoQ1Hj9GGyzqE
WObgD/04dOVgAc044mAIrRR8uKQGcfCFBhxz8IQWHD49Q/ctaw9is/YgFqbR
QUTz7nP7jEYcOVlrEP28rGuYdQ6x6NLBGvPkoDOJluECcoO+zer2Br22XnKD
Llwn+UNTbg25QQ+uiz1GDy7rEK7tHDx1Nh8W1jUOhrrpV6zRWc66OwdPPfTp
LRpwWXsQm7UH13OtRde4ptz0MSdrDfYtdegaZp3Dnt5jTufJQYtwQxlDWxFN
QhhCaxEdv/6lDn0+9NVgBa2xzewr2nBZe3AL5+ADbTi04tAvRGOOZzzrll0t
WwPMpzdDvAeah2gcokkHa1tbi96iAbeDTOykn3UKB5U6NAWzxuDOxi3oetG0
g9GB1s16h/hwhE7cUHuA5toBntdB+qs6P8SzRw9uD3uJFlzWG9zLOZhAxw19
ODjbzXug2TbRs+jiPPlwtrtxa1obH76GWSvrC2a9wUNKHTqEB7vW5TwntPS6
uQ+057IeIfkwdbg+jO7nPdY1Fn9Za6DVx7O6rWeddQrJp7dowKEJR89G6MMC
+myjPXs02rKu4Ejj0CpEv/CYUoe2X9b6w6LThpYhOnRwiJ4h2ofozG1u7VGu
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
+qvrnC2t4fw0N7wVddH2Qb/pB3lmv8vro+1DLJpA6AE9Yh7rvr8dmkFos3zq
Gn7z59afrpmfkT9Y87+fP83QGOJnGNof/Bx7IdkjW6EjQ52/3fujXi94rmjJ
cGb8HOTaPeaiR3OSayNmG382oifCdXL/tS/kcB3NB+6NZsnxrgd9EWrzM5Gf
mXc5z2d0TchnjQNdG/H8PH5c3Y0vja+YS17Zz/wMr/uZvy/gzwBz+zMaNtCz
eDnZA1uhC93wZy9aFxcme1wr3jfPz/O263myHe/n533t/PyeScbeNJfP/L5B
CwEdBH6m8nm+FH93K36u8R69D6yJXsDN/uwlhvfa87573nXPz3k+9/MaPj/z
+R0xq+vs3441kjezdfhvTxcYwzvtbzGXOuyL9+bzrnL2N7fXp7fjfdS8k5jf
H1znXdcfGk9N3sfP+777aPndc4S/g/CHl+J3B39O4M8IU43hOuvmveDU4M8Q
87jfi5Id0Yo5PvNucd4rTl3ew324a1nIdfL7jc+s8el21OL97vPy/sD0eWQr
fp8t4to+sz57I3cBz5BYYnhfN7/DZ3M9j1kjv98Zy/t3X2zFO5nfKMXvQz7z
u/XxZEe14h2+/K5c+v/FLGWNF43h3c7P+k5X3pfJ7znyeOcrtZif6BrInVyK
OWryDle+O/N9gHf+8nuS9wnze5PrfOZ7Nb9rebcs713l9/FyXmedvGuY37c5
51V/565gDDWJYV3btuOdj7zvkd/b1Fzb3+O8b5R313K2i9nft1sRRwzfW1Zx
nZf4mXd+Pt+O94sOc40rGc/3EOrwLnS+O6zqdb47EJP3tLL35TsH70LlPais
j/da8k7LF9vxXkreNcj3FD7zztNLXTPvlryrFX8u2NvvGJ18Hjv5bPJ9g/nV
jFnNeN67elmyJ7TiXPjMuzV5t96Drfi9z/tcPvI68Ve04p1ZvC+L73i8N5N3
ZvJuTd5pyPsMWePa3ovaXV0P322IecJY/Md9Vx4xvAPvHq8Tw7p5zyK1+a7E
uxSJfagd79Dj3WZPJHtiK3y+F/Geou0rUa+n92XNJ7XiHXqXt+J9i7xr8XJz
u7kO5h/zXt09N75L9Xae71i8b2tZv2vxLj/e4/ek9Xl320tpnNyKd6zxPYt3
uPFdi+t8XqESa17fPT5lfH63F5Z3R5FDjV/9vsa74fjux734zPc4vvfxHrC8
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
jfa4DOfLG9Q/upW9eXTK0fawyFvGL/HLVvLlapQ7gC+bLsWrDr/H+yNX/jnl
X4oc8Spyrknc7YRW/g04Fg27uh4f+o5W7RRL6nMBygOo7MS0X3wILfcRLH5s
2nlbK/qs1CNTDM0eGPl+2Iz2n5zayh8ifqNc/h08M1rZiWIJ8is4M95eGDT/
xl2tvs9LPXXEEPgh6AV+CTbqyeGfEZ4T4jOZEVq8Qc4J+SbYt/bS8MOIPTjX
3vniyk5LOVtYm9nsrl8NfXcrPjEIMQ/v5tI84ynhOSX8YiOXZH5ePFR9c1z6
/My8UzaCfL5y9bIf2QD2//D58MU7f9nZy/e0KheDUGa/CzuIDLKsoeyIMyPT
7/jYm+p9PTLFOdDO3p4ZOXjgc75yNqbxe3bGcP/dfgk2p3aKKR+TsX70UH33
DCsTCz4nz8L2mRn57oNmB2nz19LO3o9MttiAc9LZ1O7zncjha5OHa13WDj7l
vgz9RuKD8jCx3/HJByYXmHOmf5A2iOfhkafp9fC8kev3Qvv9vMhxrvnstMc4
831c2vj9lPffnevONuCbPiJjU131vIc5aYPfyNcW1/NzL3vers58v66Vrra/
iN9A+8VXrNvWJ2sTP5i9EfQxW5BN+FR0s3L6jQ9KnPjp6P4fRqYc9KvDY+5e
lPm7d+TDBmxw9vym6DBy6Ac4C97iz/lYaHiLX0iczPhVX1svyP6KuWkzPU2m
NYLfSTyvn4sXZ07BGnCRWPN9rfaR9PmwXeUl5s/CAzPACPCGGJk13Frel6Gt
6WyA+cqGqt4VqTs1/UDv39tqLxS+T4VHW/in5kUOnLaglTx5utk/1intXBx6
KLT26hf9ZR8W7MEOJGNk6uJd2yqmvjRtIB8+cV0Ymj/30vS5uayf6QH2j3ry
RMFCzkxn9z0YGn4QJ7qylT8WrmCD9bwrwqOOs9adgW3t//mA3hdmaLXfzncy
xRrxWa/ZaXCfPajkwxj2McpXRFdbu67JeL46tDUTvvhFew9jXJW64inq8nO6
kkWvXxmeDdHx10b+plZ7X+R8fWjwWZVxZYzBIvDB+lb7uq5vhWVuaIWvfJTt
NrLKVqYN68ODXpZnfCv41nf9vTa08nV5FnPK9brQh4Y+JO3QNlgFLrl5QM8Z
XDe02m90c36/Ke1Xbn6am+rcOKCnBdcoJ+PzafMReXZ7yPDBZ/pjVvxpf4jM
G8MDYz7eKs9Q/47gDNgOVpAveDh/Zqu9Nb6j5RI+Kxjwltxnacbt28Eat0bG
pvB477dEPtrvt0WONojfy3VEt8AfsMWa0PSMNt6VdsIc8lfKzQgfqHdv8AI+
ZcdGvrY81mrvzu2h10Tmk632LsgTY66bb+bXybkXefLIWOPpoqdb7VGQ1+T0
lMMH1k/5TqyhcAN5LwWTiJf0uS3Uk8vitMjF+2ToXj455jLdRtetjt2Bpk8W
pJ3z89FuNi579XdpP977wr849KLIvifyvxFa260l1iP4ou/3DdnbszZj21jb
kPFJV5j/5j5dQCfYfytWju7H/7r8zraiK+iWZZG5NPXWhZ8sPNOyh+HB9p6+
MmfNQXFSc8RcWJWx3o/lhzK22ewbM8bMXXP4+rRbXbbCw3mWKZn35L+QPZ/r
cy825/15dvI2RaZ47hN5X+aW3+y1Mz82ZzyLUz+aMXZryn+VMfhYym+JTDLE
Da3FbLLbwwez80U/Epnqo9leayLn9oydJzOGnwj92+3e+w5HmxPmmHmyJfS8
7F15KuPhNxnbLyaWvSU8fR37aoyfpzP+/w+cDEMO
         "]]]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1: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

      "]], {}}, {{}, {{
      {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], GeometricTransformationBox[InsetBox[
         FormBox[
          StyleBox[
           GraphicsBox[{
             {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
             {AbsoluteThickness[1.5], Dashing[{}], 
              CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
           StripOnInput->False,
           GraphicsBoxOptions->{DefaultBaseStyle->Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}],
          TraditionalForm], {0., 0.}, Automatic, Scaled[
         9.75]], {{{-1.8, -1.5}}, {{-1., -1.7}}, {{-1.5, -1.}}, {{-1., -1.}}, \
{{-0.5, -1.2}}, {{-1., -0.7}}}]}, 
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], GeometricTransformationBox[InsetBox[
         FormBox[
          StyleBox[
           GraphicsBox[{
             {GrayLevel[1], 
              PolygonBox[
               NCache[{
                Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                 Offset[{2 3^Rational[1, 2], -2}]}, {
                Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                 Offset[{3.4641016151377544`, -2}]}]]}, 
             {AbsoluteThickness[1.5], Dashing[{}], 
              JoinedCurveBox[NCache[
               Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                  Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
                Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                  Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
               CurveClosed->True]}}],
           StripOnInput->False,
           GraphicsBoxOptions->{DefaultBaseStyle->Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}],
          TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
        1.}}, {{1.7, 1.}}, {{0.5, 2.}}, {{0.1, 0.3}}, {{0.5, 1.}}, {{0.6, 
        1.3}}}]}}, {
      {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, 
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}, {}, {}}, {
      {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, 
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}, {}, {}}}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{-2, 2}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.808602921567486*^9, 3.8086029566122427`*^9}, {
   3.808602994972901*^9, 3.808603008413986*^9}, {3.8086030614917994`*^9, 
   3.8086031026806927`*^9}, {3.8086031479554353`*^9, 3.8086031855292187`*^9}, 
   3.8086602955250683`*^9, {3.8086928545541606`*^9, 3.8086928977514315`*^9}, {
   3.8086929376648655`*^9, 3.808692958079981*^9}, 3.808692988160755*^9, 
   3.8088355404943905`*^9, 3.808935979313822*^9, {3.8089365638543425`*^9, 
   3.80893661985421*^9}, {3.808936656905202*^9, 3.808936961488641*^9}, {
   3.8089370113507285`*^9, 3.8089370977813854`*^9}, 3.8089371441842165`*^9},
 CellLabel->"Out[88]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQmcZUV1/4t7u6emZ4aanhmGYonaRhKMK0ajiUbFuC8gRhONSQzE3fyJ
44oRdQZRURHGBUFFbXcUl4eKIioOCEJAcVwiiAGHiAsK2Cgia3f9T9W523t3
eXXOXeb1ZfDz2p43Pf3eu/ee3606398556DDXv6C5x5+2Mtf+OzD5h770sM2
veCFz37Z3GNe/FJ4KtxNiN1eAI8Xzokp+N4IkfvyQiF8v99ov0yb5z3veU9x
fw7ttyL+7wnJU39f8LdPSv6txCf2LPihon/4eJH8S5H5z/256G0cVPDcSvy/
tfir7vv85z//ZfDX8eMg+6NhwT97XMXPTzXwVg8ueC46OnsV/NUhDbzkkwue
W4H/t3fBX40cTPf/T6x4yScX/HzRSZ3G/9tY8avcpw3st1UvmP7UwRU/lb3k
Sq/Q6uv3oOSp6GKiBk/Z98o9YX/xM+2X3TLPjryFokuu6Od23/VzO+3n3Dna
jXEii4K7KFh9f25y34hMfqbo5V1o/OPov0GJKg7uIuUu/i0lUo5iNDX6y92r
uV9uDlgSS0+0X8LkJ6Nf6cQgKPsw0XNz8C+NgSCHB359nPs2HBh8p8UHalXF
h15R6zdTD2e9z1F9wuv97oqretdv7ONvzF5Hfr8nSP7Zcvusu35jt7/x0e7b
KWN2M2YJHwP4fkWtX/oo9+00/tIgeoTuF4t6v/mR7tsVQ795MYTHlBnAo94v
/zv3rcTjgG85/uXm9mkzuH2q7O1XR+jD7JfQvmexMv3FU8kvNrfDB7pdwgtI
M5X8Os4neKj7dk16eHYbOkTZFzO3rYTHjBncKmsetr913+5edE7MYvYFoxe9
dQYeq8zgltV1r4YHF1wNS+krB/al4XyOvLC5dbUxt6yBN7B73TfwIPslcGd2
Nnew3WePPv9t6QHPvgUDb8HcvDu8FVXzJDxwNI7xUAT2ncAhqHgfsJSDdwL/
9Gb7XpQxN601g5tma76fB7hvV+dPTfmVCG8E3hKEyC3RwYnf0M1r4U3NwmOd
GfxxXc03dt/klAUopslbhLcm8HitK3p7yeVT8fbMH+1jvRncsK7upeXep1iV
nNDsiS04iIF9m3CiR9/kLembhA8HbxNkOXqT5sYN8NgD3uwedd/sfdy3+2bv
Ir4yMBwK8eGMDmn8Tv+I79TcuNGYP+zZxDu+dyQdSyzpsG8WDie8XbjEK98s
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
mWfFbv8fs299lw==\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"bfb6c219-1967-441d-aceb-caadc709a94a"]
}, Open  ]],

Cell[BoxData["7"], "Input",
 CellChangeTimes->{
  3.8096376711205163`*^9},ExpressionUUID->"34d29043-0961-4411-bd9a-\
b72b7346b912"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Net2", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{
    RowBox[{"NetChain", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LinearLayer", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", " ", "2"}]}], "]"}], ",", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"Tanh", "[", "#", "]"}], "&"}], "]"}]}], "}"}], "]"}], ",", 
    "TrainData", ",", "All", ",", 
    RowBox[{"LearningRate", "\[Rule]", "0.01"}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<TrainingSpeed\>\""}], ",", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"RandomSeeding", "\[Rule]", "88888"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "\"\<Real64\>\""}], ",", 
    RowBox[{"LossFunction", "\[Rule]", 
     RowBox[{"MeanSquaredLossLayer", "[", "]"}]}], ",", 
    RowBox[{"BatchSize", "\[Rule]", "5"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "1000"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.808603236174428*^9, {3.8086612411889515`*^9, 3.808661247149384*^9}, {
   3.808665858447279*^9, 3.8086659132558317`*^9}, {3.808667820920285*^9, 
   3.8086678228623*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a5736f25-bbfd-42b6-adb9-79af8e1db4c5"],

Cell[BoxData[
 FrameBox[GridBox[{
    {
     ItemBox[
      FrameBox[
       StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
        StripOnInput->False,
        FontSize->12],
       FrameMargins->{{10, 5}, {-4, 2}},
       FrameStyle->None,
       StripOnInput->False],
      Alignment->{Left, Bottom},
      Background->RGBColor[0.96, 0.96, 0.96],
      Frame->{{False, False}, {True, False}},
      FrameStyle->Opacity[0.1],
      ItemSize->{Automatic, 1},
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"summary\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "3000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "1000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"time:\"", "\"3.1s\""}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"examples/s:\"", "4791"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"data\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"training examples:\"", "12"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"processed examples:\"", "15000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"method\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "5"}, 
               "RowWithSeparators"], "\"CPU\""},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"round\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"8.11\"", "\[Times]", 
                    SuperscriptBox["10", "\"-4\""]}], 0.0008114376472029128, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            ItemBox[GridBox[{
               {"", 
                ItemBox["\<\"rounds\"\>",
                 DefaultBaseStyle->"LabeledLabel"]},
               {
                RotationBox[
                 ItemBox["\<\"loss\"\>",
                  DefaultBaseStyle->"LabeledLabel"],
                 BoxRotation->1.5708], 
                GraphicsBox[
                 {AbsoluteThickness[1.25], {
                   {Hue[0.083, 1., 1.], LineBox[CompressedData["
1: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
                    "]]}, {}}, {
                   {Hue[0.59, 0.7, 0.75], LineBox[{}]}, 
                   {Hue[0.59, 0.7, 0.65], AbsolutePointSize[4.5], 
                    PointBox[{}]}}},
                 AspectRatio->Full,
                 Axes->None,
                 Background->GrayLevel[1],
                 
                 BaseStyle->{
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6},
                 Frame->True,
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->None,
                 GridLines->{{200., 400., 600., 800., 1000.}, {{-4., 
                    GrayLevel[0.3001]}, {-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}}},
                 ImagePadding->1,
                 ImageSize->{302, 182.},
                 
                 PlotRange->{{0, 1000.1666666666666`}, {-3.3350000000000004`, 
                   0.23500000000000001`}},
                 PlotRangeClipping->True,
                 PlotRangePadding->None,
                 Prolog->{{
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    Offset[{-2, -2}, {200., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["400", TraditionalForm], 
                    Offset[{-2, -2}, {400., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["600", TraditionalForm], 
                    Offset[{-2, -2}, {600., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["800", TraditionalForm], 
                    Offset[{-2, -2}, {800., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    Offset[{-2, -2}, {1000., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]]}, {
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -3.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -2.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -1.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], 
                    ImageScaled[{0, 0.}]]}}]}
              },
              
              BaseStyle->{
               FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                GrayLevel[0.4]},
              
              GridBoxAlignment->{
               "Columns" -> {{Center}}, "Rows" -> {{Center}}},
              GridBoxSpacings->{"Columns" -> {{0.5}}}],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"},
           {
            ItemBox["\<\"\"\>",
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          ColumnsEqual->False,
          GridBoxAlignment->{
           "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {False, {
               Opacity[0.15]}, False}},
          GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], 
              Offset[1.1199999999999999`], {
               Offset[1.75]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.8]}, 
              Offset[0.2]}}],
         "Grid"],
        FrameMargins->{{10, 10}, {10, 5}},
        FrameStyle->None,
        StripOnInput->False],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Alignment->Center,
      BaseStyle->{
       FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
        NumberMarks -> False, Deployed -> False},
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.5599999999999999]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], 
       Offset[0.8], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Background->GrayLevel[1],
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.85],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.8086032590612693`*^9, 3.808660330913766*^9, {3.808665867686369*^9, 
   3.808665917215952*^9}, 3.808667633588559*^9, 3.808667869386146*^9, 
   3.8086930775768895`*^9, 3.808835616313791*^9, 3.8089369841043243`*^9, {
   3.809566554835089*^9, 3.8095665785188055`*^9}, 3.8096134211758842`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"8d14f1b5-4e90-4421-a8f2-c34c0c41e159"]
}, Open  ]],

Cell[BoxData["8"], "Input",
 CellChangeTimes->{
  3.8096376802275753`*^9},ExpressionUUID->"3270950f-4107-473a-9d55-\
18e1e863e79b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TrainedNet2", "=", 
   RowBox[{"Net2", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"TrainedNet2", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{
          RowBox[{"1", "-", "#"}], ",", 
          RowBox[{"2", "*", "#"}], ",", "1"}], "]"}], "&"}], ")"}]}]}], "]"}],
    ",", "Plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8086032648866405`*^9, 3.808603281403368*^9}, {
   3.808667688316328*^9, 3.8086677255149665`*^9}, {3.80866787797572*^9, 
   3.8086678836213617`*^9}, 3.8089369902109404`*^9, {3.8089371091004925`*^9, 
   3.8089371225281553`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"27cc740b-c53d-4b43-8530-5f3d8fa61fad"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxl3V+opPddx/HNZjcbNGAvQpFYLC1BreIfpARSa3Yx0FovemEVllDa0NQQ
xSp4Y7yISNDaBuzFVlorxVJpq0ghFkLoReA80UZFLS1RTEiitjGJabZxN3+M
yTZN3Xmez+tzMt96U97+5syZ+c33NWfmybMzb3jfb/7irxw9cuTI8SuOHNn9
b/5v2f7n8uXz3/dH//vpL7xyoE+//qqz19/07faxn/yLrz1+5cvtv77uzf/2
h393of3ud977T2+69aX25e/Z/T9ebN/1gYfv/sDDL7RvvO2W3a9sX7H79dc9
3/7iJ2//+LvOP9t+/3oDn2m/5p71Au3fuRi/9T3/077/7t0vPNv+sd2t/eqT
7d/f/bo3P9H+9yt3V/hf7WvWu/e19g/u7v49j7S/+vjuBx5o3371O85c/Y77
27dc/G2nX/+P7Y/vfv3pg/Y964Z+pn338bVP6is/tF6+/bnt+tqf3n5f+9x2
e9o/u93e9tu2+9N+eru/7T/e9qP9M9t+tR/d9rP94W2/29+/PR7tX98er/ay
PZ6H9297vNu3bPPQvmebl/Zrtnlqv3+bt/YXt3lsX7HNa/vGbZ7bd23z3t7+
98ip0cvut1x7/ER9aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/PR+xcf3a/4
6P7ERx/v+Og8xEfnJT46T/HReYuPzmN8aD5GL7ev9/Oy+tB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmo/cvPrpf8dH9iY8+3vHReYiPzkt8dJ7io/MWH53H
+NB8jF6uv2l3w47Xh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD
86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfvX/x0f2K
j+5PfPTxjo/OQ3x0XuKj8xQfnbf46DzGh+ZjdOb+WH1oPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD89H7Fx/dr/jo/sRHH+/46DzER+clPjpP8dF5i4/OY3xo
PkYv9+22/apL60PzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQ
fGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aj96/+Oh+xUf3
Jz76eMdH5yE+Oi/x0XmKj85bfHQe40PzMXr54LrvR+tD86H50HxoPjQfmg/N
h+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/N
h+ZD86H50HxoPjQfmo/ev/jofsVH9yc++njHR+chPjov8dF5io/OW3x0HuND
8zF6efuZ3UZfUh+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H
5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfPT+xUf3Kz66
P/HRxzs+Og/x0XmJj85TfHTe4qPzGB+aj9GZ4yP1ofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aD81H7198dL/io/sTH32846PzEB+dl/joPMVH5y0+Oo/xofkY
vXx0dzff88oBH5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB89P7FR/crPro/
8dHHOz46D/HReYmPzlN8dN7io/MYH5qP0ctrz+6OaL1cH5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+dB89P7FR/crPro/8dHHOz46D/HReYmPzlN8dN7io/MY
H5qP0csn1v8gcqE+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofno/YuP7ld8
dH/io493fHQe4qPzEh+dp/jovMVH5zE+NB+jl9ftfuy2F+tD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmo/ev/jofsVH9yc++njHR+chPjov8dF5io/OW3x0
HuND8zF6+dQXdlf8Qn1oPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50Hxo
PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD89H7Fx/d
r/jo/sRHH+/46DzER+clPjpP8dF5i4/OY3xoPkYvb9xt85nn60PzofnQfGg+
NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+
NB+aD82H5kPzofnQfGg+NB+aj96/+Oh+xUf3Jz76eMdH5yE+Oi/x0XmKj85b
fHQe40PzMXr57G4bP/lsfWg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQ
fGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPz0fsX
H92v+Oj+xEcf7/joPMRH5yU+Ok/x0XmLj85jfGg+Ri8/cuu1Fx+Z8/Wh+dB8
aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+dB8aD40H5oPzUfvX3x0v+Kj+xMffbzjo/MQH52X+Og8
xUfnLT46j/Gh+Ri9/PL6c0/Xh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
vX/x0f2Kj+5PfPTxjo/OQ3x0XuKj8xQfnbf46DzGh+Zj9HLD+nu+UR+aD82H
5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H
5kPzofnQfGg+NB+aD82H5kPzofnQfPT+xUf3Kz66P/HRxzs+Og/x0XmJj85T
fHTe4qPzGB+aj9HLe9fb9Xh9aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/PR
+xcf3a/46P7ERx/v+Og8xEfnJT46T/HReYuPzmN8aD5G57ymr9eH5kPzofnQ
fGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQ
fGg+NB+aD82H5kPzofnQfGg+NB+9f/HR/YqP7k989PGOj85DfHRe4qPzFB+d
t/joPMaH5mN0zuN7uD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+ej9i4/u
V3x0f+Kjj3d8dB7io/MSH52n+Oi8xUfnMT40H6OXR9Z9+pf60HxoPjQfmg/N
h+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/N
h+ZD86H50HxoPjQfmg/Nh+aj9y8+ul/x0f2Jjz7e8dF5iI/OS3x0nuKj8xYf
ncf40HyMXr687uvf14fmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H71/8dH9
io/uT3z08Y6PzkN8dF7io/MUH523+Og8xofmY/TyofVxu7M+NB+aD82H5kPz
ofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aD82H5kPzofno/YuP7ld8dH/io493fHQe4qPzEh+dp/jovMVH
5zE+NB+jl6vXx+HOk3xoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50Hxo
PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD89H7Fx/d
r/jo/sRHH+/46DzER+clPjpP8dF5i4/OY3xoPkYvz29/T+pD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmo/ev/jofsVH9yc++njHR+chPjov8dF5io/OW3x0
HuND8zF6Ob+9H6kPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD56/+Kj+xUf
3Z/46OMdH52H+Oi8xEfnKT46b/HReYwPzcfo5YnteFZ9aD40H5oPzYfmQ/Oh
+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB8aD40H5oPzYfmQ/PR+xcf3a/46P7ERx/v+Og8xEfnJT46T/HReYuPzmN8
aD5GL7+x/feQ+tB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmo/cvPrpf8dH9
iY8+3vHReYiPzkt8dJ7io/MWH53H+NB8jF5+dfvv6fWh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzUfvX3x0v+Kj+xMffbzjo/MQH52X+Og8xUfnLT46j/Gh
+Ridz0n5Rn3onl+S7vkl6Z5fku75JemeX5Lu+SXpnl+S7vkl6Z5fku75Jeme
X5Lu+SXpnl+S7vkl6Z5fku75JemeX5Lu+SXpnl+S7vkl6Z5fku75JemeX5Lu
+SXpnl+S7vkl6Z5fku75JemeX5Lu+SXpnl+S7vkl6Z5fku75JemeX5Lu+SXp
nl+S7vkl7p/zS+yX80vsT3z08XZ+iXlwfol5cX6JeXJ+iXlzfol5dH5JuueX
7Pfy3u183vrQPT8x3fMT0z0/Md3zE9M9PzHd8xPTPT8x3fMT0z0/Md3zE9M9
PzHd8xPTPT8x3fMT0z0/Md3zE9M9PzHd8xPTPT8x3fMT0z0/Md3zE9M9PzHd
8xPTPT8x3fMT0z0/Md3zE9M9PzHd8xPTPT8x3fMT0z0/Md3zE9M9PzHd8xPT
PT8x3fMT3b/46H45P9H+xEcfb+cnmgfnJ5oX5yeaJ+cnmjfnJ5rH+NB8jF5+
fPv3IPWh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oP
zYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzUfvX3x0v+Kj+xMffbzj
o/MQH52X+Og8xUfnLT46j/Gh+Ri9/NX27wnrQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB8aD40H5qP3r/46H7FR/cnPvp4x0fnIT46L/HReYqPzlt8dB7jQ/Mxevnh
7d+j14fmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H71/8dH9io/uT3z08Y6P
zkN8dF7io/MUH523+Og8xofmY/Tyme3zTOpD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmo/ev/jofsVH9yc++njHR+chPjov8dF5io/OW3x0HuND8zF6ecPu
x257sT40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+ej9i4/uV3x0f+Kjj3d8
dB7io/MSH52n+Oi8xUfnMT40H6OXP9s+T7E+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofno/YuP7ld8dH/io493fHQe4qPzEh+dp/jovMVH5zE+NB+jlx84
u34eb31oPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD
86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD89H7Fx/dr/jo/sRHH+/4
6DzER+clPjpP8dF5i4/OY3xoPkYvf/Ku9fPc60PzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aj96/+Oh+xUf3Jz76eMdH5yE+Oi/x0XmKj85bfHQe40PzMXr5
3u37QE7xofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD81H7198dL/io/sTH328
46PzEB+dl/joPMVH5y0+Oo/xofkYvfzC7nDW1ZfUh+ZD86H50HxoPjQfmg/N
h+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/N
h+ZD86H50HxoPjQfvX/x0f2Kj+5PfPTxjo/OQ3x0XuKj8xQfnbf46DzGh+Zj
9PLhdd+P1ofmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8
aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H71/8dH9io/uT3z0
8Y6PzkN8dF7io/MUH523+Og8xofmY/TyD7u86tL60HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+aj9y8+ul/x0f2Jjz7e8dF5iI/OS3x0nuKj8xYfncf40HyM
Xk6s13OsPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD
86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H56P2Lj+5XfHR/4qOP
d3x0HuKj8xIfnaf46LzFR+cxPjQfo5e33bS7YcfrQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5qP3r/46H7FR/cnPvp4x0fnIT46L/HReYqPzlt8dB7jQ/Mx
evmD9X5eVh+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfPT+xUf3Kz66P/HR
xzs+Og/x0XmJj85TfHTe4qPzGB+aj9HLly7+lmuPn6gPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD56/+Kj+xUf3Z/46OMdH52H+Oi8xEfnKT46b/HReYwP
zcfoZfufy+tD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50Hxo
PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmo/ev/jofsVH9yc+
+njHh+ZD86H50HxoPvT2v/67x+Wn1rt/+jsH6+nut59Ysr7oa9b9ffmkvmPd
j1faD20//13rf76e/3hZ1/P7XP8pl9/2+1u9vN+n3Z+5/r51H4/3+q1/ZJ2f
C113/dr6OlZnji32z/oT6+36v66/Zd2gF9v9PLKx/tg6Z5f291k/s87bC113
/dr659YNObp4/Oflrbv91p9a//e5rl+3+nq+bd7m+s3r3F6ymD/rH1tv+LNd
d/3aPM/17fuWjvT+WP+5dVzPd931a+v3Zw73v1/q8PLWt8f/m+1H1v891+7n
Y4/1X8rzfD8vO+vbfj7Vddev+Z/rD26P84Hbb938a/M51/28df3k+nj/d9vt
m+s35O+Q5yvr5k/zonma667P84X1P133/9Gun1rn57H2/vfFHK7/xza3vf3W
ze/+7f9We//7Wg7XXZ/9s/7Yun//2XW3V1v3d9jfg3l56/bXOt/79+fCd637
ec/P1n9+3Y9/7frH1p9/qO3v11zffD/Xzzu1zlc/9ynPD9rzx1x3fW5/P3dw
3Z+vdN3t1f7ezvWb8zrF/lr3/KL3n/8O1/285595eev7z6/PHZxef/5LXXf7
tfXN97l+vuy8vPX957dnDvaf357pust7PrW+/TX7ylut37r+/rt6+X6/wFh/
MK/b+n0DWd9/Pjx3sP/8d+7w8/3Huuuzv9YvrK+/7jp48NWvEy/eXu312Fx/
ZHPQ/bTu+VS7vXPdz3u+nZe3bn97e7bH58D6Vdvvb7s/c/3RvK7t59ln3fOP
9vyt+/nxY9319fPks/6mbf77+9xe7fXwXP/y5qS337rnG+32znU/7/l+Xt66
/bf+29vzSX+/26+tP5DX+f189HF56/bbuud73c8nH+t+vp9XnvU7tuffXv99
+f9r70fm+t9kX70/se75SHt+157/57rrs9/Wf2q7/f19bq/2/mmu35n3QfbX
uud37fbOdT/v+X9e3rr9tf5g5tS626+tr85/72/f6v3gvLx1z5fWPf9rfx/m
up/39836D22+ev2/u81ve+/966vWv739/Mm997MX1z0/zdur994/vmrd9dlv
6/+c503rbq/2fnuuP5Xrtb/WPd9rt3eu+3l/D6zbT/2R7fm+v+8t2/Np2+2f
62fzODl+YN3z0VOv3reLz//a34e57vrcH+uP5u+0dbdXO74x17+euXb7rXu+
0W7vXPfznv/n5a3bb+vXbH8vu+72a+vfzPOG4zXz8tbtt3XP/9rfh7nu5x0/
se51pPU7ttdHba/j5voTeR5zvMm65yPt+V17/p/rrs9+W//p7fVZ191e3c8r
Hev+jtlf657ftds71/18Pz90XN66/bX+we31b9fdfm3d31HH9+blrXu+tO75
v/cvfx/mup/39836T2zvx7r+UN6H6X7f0Vj3Oqvff+R1Wp6P5u3V/b6hse76
7Lf127f3X113e7Xjp3P9ybzOs7/WPb/3deJ43Wjdz3v+t24/teNZLu/2aus3
53W847/WPf9oz+/a8/9cd31u//z91j0/aL9vrj+a922er+flrdsf655PrXu+
1dZvzHEsx5et82jd85v2/DfXH8n7dLffuucj665fW78hxyX6/Vvj8tbdfus8
Wvf8ovt9w2P9gW0O+vxp3Xxad/3a88Fc/9HteNUp98c6n9Zdv7b+a9vxsv73
BeturzZPLs+X5m+u/+V2fK+/3zoP1l2/3vd0eD7jvLx198e6/95i3fVt83b4
32e042Gz5/Fqx5Mdz3I82fGreTz63u2/B/V47zyevN2Py/rz1h3PmcePr9/O
T+jx2nk8eHscjvXnre8f7zg8/nvfhfV8uR7v1Y43u7zjE/N47va4Hl0cH5jH
Z9++nc+97B+/uGTxvDmPx25zfnj8Vff7CPM4+Lvw0e3fG/Xv2Dxe+trt3+v1
/bR1+z2Pj7q8x197/ziPh35i+/eyPX44j29a3/++68Pjla/b/j36+L7rl8b3
SR8ej3T5/e+Tfqnv1+bxx09tnwfR95va+2WX93jP44su7/3WPF74xu3zWHo8
bR7/s+76rXt/NI/vfXadr2d7fNK6+ZnH81zePOv9/57xXI93zeN12/yd7/E5
vf/fF84ffn9n/g56Pe/77PeP7x8eH7Pe78PMuvcL8/jX/P516+Z3Hu9yeX7m
9527fL+PMa8T+n2M43jW/D7peXxqfp/2PN40vy/Yuvmex5dc3vGk+f28Lt/v
08vrQq+3fZ+n9wvz+1nn8aD5/a/z+M78vsh5vGZ+X6R1r2fn8Zj5/YDWzfc8
/uLy/M7v43N5r0fn8RXfv+X19Py+s3m8ZH7f2zz+Mb8fah7PmN8PZd3rx3m8
Yn4fkHXzPo9PzO/bse71pff/Xk/O4w/z+0zm8YT5fSbWvd6cxwvm91dYN+/z
+IDLOx4wvy/C5b3+nO//+/n0eR6b3xcw38/P7yOY78/n55fP99vz88ut9/tA
xvvp+XnV1vt9G+P9s8vzOz8f2uXfvfd37/D9sc9X9fp3fv7ufL87P394vn+d
n1c634/Ozyu1fnr8d12vd+fnU1o37/P95fz8R+v7r18P3z/Oz9Ob7wfn5+lZ
d33er5nf+f7P50d5vzc/j2y+35uf7zTfn83Pr7lxvA6Y78f6+RqZ//l5Hy5v
Huf7q/l5CvP90vz34tY9XvP90fz3tNY9/vP9zvz3h9bt/3x/039/lPcz899r
zcvP82m8X1m36fPfOdjd+3fee2J5euuT2vozW5+yrr0fmj/v/Y6fn7/fz4/1
nm/j+lz//P2u7/8BwoDP4Q==
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxMnWW4HjW3QF+3g9uHu3uhQKFYcSkuxd0LFHct7u5OcXd3d3d3d3fuXuyV
59wfeTKZZCeZ7DWnp8isqTYZser2tUqlMvB/lUo96oe7lcp/7SiDojSjtKIs
EKUdpRNlfu/RXjBKhFR6UQbbT3uZKONHmSDKclFi+sqEUZb1Hu15KrkW685r
3YgynzVrLxpl9ChjRFkyyjhRxo2yRJSxbS/v3BNFWTrKeK69SJTRjF/KOPoW
cr99URa2ZtziUcZy3nWizBBlxihrRZkuyvRR1ogydZRpoqwUZdIok0VZJcrk
UaaIsrL3aK8WZcooU0UZ6h4njnJltVLZI8qeUVY1jnEr2D9JlBWtWWN152Dt
9aPMHGWWKOu6x5miDIsyrXtd2/3yDOvZT8wGxs0aZUPr2aKs6TMRf5wxrHO8
NXGLRRnTM9rIuNmjbGUuyeE25g92tvYe7W0ryQ0cDbef9h7mlfzsaU0O54qk
PBYgDYjrP+P6qbh+PMoW0Z67knxuac3aO5hX8rmreyWfu0QZYnvvSnIJg7tX
kiHWHlFJjonfzTj6tnO/cL299YLON4ZncbhMcH5HmgN42d98k88DzSW8HOA9
2gdVkhXYGWk/7b08A/a6sWc8R5QBcQ6PxhnMGdf7+By8W/ta8x7sZ83ah1WS
G/Z3tEzA9VHukfYR7p19H1tJnsj9oZVkl/hjjKPvYPcLs4dYM+7ESvK0UZTn
opwT5dwoz1ufx3XsfbOoT41yRiVzSQ5Pj7K57bMqyRPsnGk/7UvNJbm93DyR
w8u8R3tgnM/T3TyzZ6N+JsomcT1v3H8irjd1H9ua24ui7BhlpyijKskQ7Suc
GzYvibKza/Mcw42/2Dj6zna/2/jc2zjuwkqyxby3e6bk5FbPkfO7qZJ8kP9r
Kskoub3OvJLPa71H+4ZKsnVAlCvdI+/NVf4s2SvK9cYx7ir7Yepqa9a40TlY
+y45gN873CNc31JJRtnrbe6XZ7jTfmLuNg6m7rGGtZt9JuJPqOTPD/i4oJLv
Eudyvnmgfa9xsPaqueGMn4u8nRz1I1Eei3JKJfl5tJL3aT9ZSYZg6sFK/sxi
zQcq+bOM9hNRTnPcfMHDC91k9uWoX4xyUlw/5Rxw95J7JYcvulfaL1SSIdqv
uUcYeVYOyP/LxsHUK9Y8z9PODePPWBPzRiX5huVPK8kE5/eZNXl4z/zByDvm
nty+7vrEv+kcvB/v2k/M+8bB0QfW8HWf5817f7815wXTi1by59xbzsc78aFx
8PVlJZmA6y8qyTTtz90v7beNY6+fVJI5nu0r42Dta2uY+si5Yfxja2J4zxZx
T7yfC9v+xjj4fS1y+Go38/9G1A9H/WuUwZHrl6L9UFz/XkmOYOe3So6h3apm
jsl5u5o1OZy8ms/Jfn+oJKOc2Y/WnNn8Mf8r3WTtn0qyCEf1av4c5OdfrZp8
0O5WkwkYb1aTJ9b+u5KMEt+oZhx9f7hf2P8ryuOOq1aTIeadoJq54fwmrObZ
cd6jV5MtuBizmrkkJ2NU8x7tsavJE7yMVc1+2p1qngF7XTGuJ4kyaZQVokxs
u1fN5+A96KtmDY+jVbNm7fGryRz7Iw6+4Xqiau6R9v+quXf2zRqfy9R41WSX
eNb7TL7GqeZ+34sybjVrxlWq+Y5xLv+aB9qTVXM+cjlPNfNBfqaN8r25fSdy
+FaUn+J6wcjpm93M83tR/xL1jDF2qmoy922UKavJLu1FYvzrMe7nuJ66mv3f
RZmmmjVrzFTNeWByrmruj/0OqCY3tOesJge053WPsDBrNdmFhbmrGUf+B1rz
PDNXc264nqWaNTGDqskZjC9ZzbPjzJay5owXrmb+yNuC1WSU3M7n+sTP7xy8
HwvZT8wixsHaotbwNUU13xvOaGg1803+V5IjcrKA88HaEOPgdNlqMg0Xy1ST
IdpLu1/ag41jr0tUk2OebTnjeA+Wt2btxZwbxhe3Jubqav6ZuXeUo6OsHWWd
KMdGWTfKejxX5Pf9buZzdTkgzx/HvbejTBfXH0b9QTeZ2ryaOSZXq1WTFWK2
NGcwuIX9tDeTA2JW9mz42bOKNWe5aTX5GOC+4BGmNo4ye5Q5ouzms3Eem3hv
Tp9p+igz+GwzGL+qc7O/d7s5Zq0oG0WZzXl39eyYd2dzTK6GV5MtuNjOXJKT
bb1He0Q1eYKX7e2nvWM1mYMd3hV+ft/tO0PN7xFbeU68B1tbw+M21qzN359g
Gpb3tIaR3T0D+nZxv4uZY3iCr+9dh5/pexlH3w7ul/3t5B555g2q+V7xLq5f
zfdtFvmYyfZB5o+8HeL5kv+DvUf7szjnT6OswZ6Cq0+6ydTJ5pK8nWJNzvev
5vvDz90DrPl5fKA179NIa9Y+yhyS8+PdK3s/zr3SPq2azMHpSeabtY+MMsz4
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
ua3XkyGY+quW7wZr/lnLn2u0a/WMY9zf9sPpP9as0ajnHHA3Q5zf9FHeiOvN
4zyn6+Xee/VkiL2PVc89wki7nhyQ/y1j/OQx/s24nqmXzzJG9DfrOTeMt+pZ
EzNOPfmG5SnqyQTnN2U9a/KwVcw5cy8ZmaCeuSe3Y9dzfeLHreccvB//q2c/
OZ8t4maJ8mlcD495ponrz+L6d8+b9/sPa86rU8/ngPfx6jkf78QcEfd51JPE
vWnryQRcT1NPpmlPHdff1rI9fj3j2Ovk9WSOZ5uunnGwNn09a5iatJ7zw/Zk
9ayJ4Z9R/um/G5mhnmNhdsZ61jA4Y+xttGgvHGX2euYeFuasZ77J8xz1vEd7
rnqyBUez1JM/zmORes4zepQB9Yxj3Kz17OecZqtnzRpz13MO2Bxcz7PjZ94C
9WSC9vz1zDftRZ0bHuatJ7twt23kZc5e8jV31AOi9MX1QOeG33msiRkkT8w7
xPl4b1aq5zlyfot5D05nj/kminr5KEvWkzl4WbqeOSZXS3mP9uLGwdcy9sPd
vDHPPL3kawn7mWtQ3JuVP8/iemg915o4yir1zD1cr+A9+FnRmr2u7H4Zt3qU
qerJ0Zr1ZAvWVnUO3olDo6zm2DUcy7gLGvH7RpQRUebzXDmjterJHKwtFHuc
K8qCcb2BuSe3G9Uzr7Czofdob1JPbuBo3XoyN1OUderJIu2NjWPcevbPHGV9
a9bY1Dlgarj5g4tt6rlX2lvLBO2BsceFoh4RZYt6cgYLOwQn8/eSr8HUveRu
M+eG682tiRnm+fH8O9bz/YDx/c0TOdmhnmvRt6vckP/dzTG87OY92jvFHhbu
JTs7OR9cr+0Zcy57GAdTO9sPp7tYs8aiMcciveRrZD3ZhYUD5YP2Ae6R9n71
5Jd97xtlOdsHGQdrB1vDyy6xz/n43Z71ejl+nyiH/T92jqgnZ5zTI1FOinIy
5xCxi/cyV8eYb/J/nDkmt8d6j/YJ9eQJdo50PrhbMuZYIsq2cX28cYw7yn7O
7Ghr1jjROeDxzChbRtkqyhlyQPt0c0x799jngjH/dnF9Sj15hbWzjIOps623
8fmYe2Ofc2NjTqsnQ8y7dMy3fdTnR7kmyt6e2wX1vA+Te8S6y/QyzxfVky1Y
uMR8k+eLvUf7QuNg7VL7Ye0ya/gaZT9zXe49GFyeHPL7fFxfZ+5hYe/YwxB+
54eRXu7z6ijXul/G3VBP1uHopnqyBWvXOwd9h8sCHNzoWMad6llyLjcbB2u3
WMPaHfXkiTn2if2s2Muzv1sOyPO95hiO7vEe7TuNg8H77Iep+61h7S77mesB
78HRg9Zw97h7JYePyQHtR80x7dvr+XOTvT7hWDh6qp5swdrD9eQPRh5ybtpP
OpZx+8YzrtRLppaK+tyon4sylN+Ho347ykuyQs5XjfsrRzknrp+v5/jzorxg
DWOvmHs4eq2e3MDRy85B321RDvEZXnUs42CcPxf5ufmi87H2/rHP1XrJ13ty
AcvvRrnK9jv13DPt110TNt93LBx9WE/m4GUYP0P4+wK88Hf0XnL6gWMZx/s5
0D19ZBwMfmwNX3+ZM/LwlbmBo29kgpx/7T3a39WTJ9j5rJ4swuB4jdwr639r
HOO+iHKrZ/alNWt87xzw+Hs9f97ByG/mnvav5p723+6R/P9UTy5h8A/jYO1P
a57nB+eG5R+tifmlnrwy7zpxZmtHeTquD4scrcnvyXF9YFyv1Use641kCl6a
jWSF3DYaeY92u5GcwchBEbtKxD4T14vH/bGijB2l1cg4xq0X/c9GXY17tUZe
s0ankXPAIHFvy8WYcf1WPdub9PJ6jLi3UVxvwN8Lon1wrLt+L9lhvXfka5xG
1nDXbeTcMNtrZA3jP3uWnMu4jRxLLsdvZD7h7n+NZAh2ZmlknsjbxHH9qSxM
1sh8k+dJ4/pz8z9hI+M+iTJ5I/thbYpG1vA1USP7mWvKRt6DwakaWcPUDI3M
PfudvpF5pT1dI/NNe4JG7pe9ztjIseR85kbyxL6naSTHMDh1I+emPVMjxzJu
1kY+H3zN3ki2eFcGNzJPnOVW/EfdUc8VZbZGjmXc4ZGLTXvJ7BZRbxbln7ge
2OjP+byNZAuO5m7kPPQt1sh8k/95HMu4JeSIfB4V86/Lv4OJOQc1kkv42pi/
d0S9cJRt43pDfm+P622i3rqXOZ/PNYlZpJHjR48ypJFMsfYCjWSa55zfuWkv
6ljG8bvkr/5deUn3BTsHR1klyqpRlm1kPmBn+UZyQJ6X8x7tFaNM0khehtoP
U+s0Mt/kcL1G5oYcrus92ku5Jj97lraG2WWsJ3AfcAZTw6JM20he1mwkB7TX
d264XruRbM3gc0xu/FrG0beS+4X3la0Zt0YjeWLe4yJHO/XyLLfx3MnVlo3k
gNzuGP2bR5kjrjeNMmeUAYzp5fUmUTaXLxjZwD3CJu8KP7/5PWIz4xh3TKy7
XS95HMHvTr3kdwvnYO3d+H2+kX832SWud+4l11s3kkv2Otz9kv8TYs7h/D0l
rndoZCyM7WgNR1v5TMR/6r74s2H1Rr7DnMtq5oH2TsbB1JHmhjPe07ySz73N
JRzt5T3a+8oQTO3WyJ+zvB+7NvL9ob2PcYzb3X443cOaNfZzDrg7rJF7JYeH
ulfah8gQ7aPcI4yMlAPyf7hxMHWENc9zQJQVGsn4gdbEHNNIvmH5TJng/M6y
Jg97x3lvHPVJnAm/2/I+x/XRrk/8sc7B+3Fy5GiHGLMR142MhZ9TrOFrZ8+b
d30Xa87rIJ8D3o9zPt6JU42Dr/1j7n35uwNzxlr79JKRs90vjJ8Y93fvJadn
NJI5nu30uL8rfy/gHHr59+Lzo5zm3DB+ujUxFzaSTVi7qJGcwcu5zVgzyrZR
LjPf5P8Kc0xuL/ce7asayRPsXGk/7dvNMTm/0/yRtzu8R/ti1+TMLrHmzC61
Zu3rGskiHN3iOfLz72b5oH2Xc8P4bY3kibWvbSSjxN9qHH1Xu1/Yv8aacTfJ
EPM+6Xlxxo+bJ87yEXkh//c1kjMYOSTO/KAoxxMTuRjZyzw/FOUE8hblbvcI
46M8e859r16OeTDKPfbD4L3WrPGwc7D2ETH+8F5y8ZR7hPHHGskie33C/fIM
Z8d+Dusl+0dFvR+/n8f1Afw+H/VzUR71mYi/MMYfye9XcX1jI98xzuWGKPvb
fr6RsedF+dzccMavmVfy+Ya5hKPXvUf7rUYyBFMvN5JFzuOlRv4zHdpvGse4
V+yH01etWeNt54C7T9wrOfzYvdL+KMr1tr9wjzDynhyQ/0+Ng6nPrHmed5wb
xt+1JuarRvINy7/LBOf3hzV5ODbO75heMvKduSe3X7o+8V87B+/HuXHmR/cy
58dHfXCU++P60KgfiPqnKC943rzXL1pzXqfwu27U1Xhnv3E+3omfGxkLV3/L
BFz/1Uimaf/pfml/axx7/a2RzPFs58feTuglaydFfSK/z8f1L84N479aE/NB
I9893t16M/mClyFxPUaUMaO0m5lv8t9tZo7JbaeZ92j3NZMn2Ok1s5/2hM3M
MTmfuJn5I28TNfMe7UYz1+TMms2sObNWM2vWZh9vydF4cf2+ex+3mXzQnqSZ
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
MDtdO2uYmqmduSfns7STLTiasZ1z0DdfO/NN/mdu51jGzS9H5HP6ds7H2rO1
k0v4mrudHMDFXO3MMe0B7dwv7VnbuSYxAx0L+/O2ky3WnqOdTPOcs8su7Xkc
y7jT/N128ygLuC/Y6cV5Lh31nlEWaWc+YGdIOzkgz4t6j/bi7WQIXhazn/ZK
7cw3OVylnbkhhyt7j/aCUbqsGWUha1hd2Jq1m/z/p/zOH9dDo0zUTl6Wb2f+
aa/q3HC9YjvZYu06/29pX3K6gnH0LeF+4X1Ja7heLsr/nHfjdp4dZ7lhO8+d
XK3XTg7I7ZrtZAte1monK+R2mPdor9NOzmBkNfcIm7wr/Pzm94e1jWPc6vbD
4xrWrLGuc8xk3gbIyCbuEa43aCeX7HUj98szbGr/APNNHKxtYQ1H6/tMxL/t
vvizYdloT+C58DFPrpeJsqVxMLW/ueGMR5hX8rmjuYSjHbxHe+d2MgRTw9v5
c5b3Y5t2vj+0dzKOcdvaD6fbRxnsGrs4B9zt0869ksO93SPtvdrJM+0D3COM
dPj/K/sy//saB1P7WfM8uzo3jH8QY1t9yc7IdvINy8fJBOd3vDV5ONz8wcih
5p7cHuj6xB/kHLwfh9lPzBHGwdGR1vC1lefNu761Nef1UeyrEWWpuD7Y+Xgn
jjIOvk6SCbg+sZ1M0z7B/dI+xDj2emw7mePZTjYO1k6xhqmjnRvGj7EmhneS
n8/8TD+9nczB2smdmCfKJlHObCdDPNM15owcniMHcHF+lO3M+bneg4WzjOMM
LrAf7i60hrWz7WeuUd6Dx4us4WusOLM9or4iymdx3eW/6YnrMfh/gaPsFtfX
ui8YubKd4/nZeHU72WLfl7STaXi82LlpX+VYxn0c8/X1JVPXOR+s3efZcd43
tpNRGLmhne8V7TvbyRNc3NxO/mDnVvNN3m4yjr7b28kcTN3iWMbd4T3musv5
4OvnKA9EeTDK3d6DnXusyfO91uz1evfO/u5378c5B/XxzkUNXw9Zw93D1vB4
m3tnr494D9Yeaydn/DOYJ9r5ZxUcvWMOONen28kQLDxrvmHnGe/RftK4M6I8
Zz8cvRDlvHby9ZT9zPWi92DqJWuYGpN/PxX1G1HGj+vRo1wa1+NGPU5f5v9x
98te32zn+MujvN1Ovtj3K+1kEQZfdm7abzmWcY96Bjz/uz4rrH0jB+Ttg3Zy
CUfv2c879HE7uYGjT2UCXj7xHu0PjSOHn9kPI59bw9RH9jPXF94jV19aw9f3
7eQDLr5rJze0v3WPtN93X+z1B8fC+0/t5AZevm4nlzzbV85N+0fHMm6N+Hkx
dZRpovzSTrZg6rd28gQ7v1tzfqN3Mlfk4S9zA0f/yAQ5/9t7tP8wDu7+tR++
+OA2NUz9aT9zVTt5D+5qnazha0L+3/Mor3JW/FnZlzlvd5Incj5GJ/dFzr/m
d5Mor8X1aHH/9Xbuu9lJRuGxEdfPt7M9cV+O6Yt7rU72M++YnZwP1qbo5Dly
ruN0kiEYGbuT7w/tiTvJB/kfr5N5gqkJOskH+R+3k3H0TdhJtuBo/E6OZdxE
nbzHXJN0cj44+tX8kJtJO3kPjibrZA1Hk3eyZq9jdXLv7G/KTu4d3qfqZA1T
5P9bWYOD72Rw2k7W8DVdJ2vYmb6TNazN0Mman3Mzd3J/sDOTPNFeKK57nTzb
WTvJE1zM3sncw9EsnYyjb85OMgRTs3VyLOMGdPIeHM3VyRqO5u5kDTuDOplj
cjhfJ3NMe94oddtzdHJN1viG/5+9Lzka6BxwN3ncmzRKh/Pg/z3nz7C4nqIv
n2XBKDN28rl5zoV9PlhbtJPvCTwu4j3aQ7wHU4tZk5/FreFoCWv4WtIaXpay
hqmlreFlGWv4+pzvs/Xln5PLeu9/UZbvJGcwtVInuYGXFTvJFu0VOsku7eWM
I2Zlx8LUUOdg3Cre451Y1Rq+VrOGr9Wt4WvNTrIFU+N2g3/eDdqx3wWi3jbK
up4p7KzfSZ7gYj3v0d5QhuBirU5yCY/bdXKewVE2MI5xa9sPp+tYs8ZGzgGD
3/Mtgr7kZaso88jLFp1kCy62d27yvmknGYXHqSNuqr7k7seoJ+P/Ze3k72LM
DWubWBOzeSfZZd4Rzsf7sa/nTq528B5M7WnuyfnOnWQLjnbtJEOws4v3aO9o
HNztZj9M7W4NUzvZz1x7eI819nIdmNrffMPF3t6DqX2s2et+7pdxB3aSJ/g6
qJPcwMgBzkHfjbYZO9KxjNvMs+RcDjYOpg6xhqnDO/lnFRz9yv/vH2WbuD5K
DsjzMeYYjo72Hu0jjBsW5Vj7Yeo4a1g70n7mOt57cHSCNdyd5l7J4alyQPsU
c0z7sE5yz15PdywczRj7nT7K1nF9Uif5g5ETnZv2T3yToS8ZnJn/VyLqc6Kc
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
O8C5acPZ7c7FHnENFq8gdXEVUsP0H7HPOfvSHUi+cRbeac4fMB6mHrQNy3e4
xuGOpf1PX86Fh3CTSvrLNo56nr68xu+0aSX9cZtFPXdfuuG4h2OO9fHjzVlJ
hxz+uCe7OX6A459wbubimr+PFjck576P50S7OBfvch+PGvsv/91CX87N3vBS
neR8z/6/vT/rnlmbfbIvfj487fiHKxn7SCWf5/lu//M95TNu7PiNoh7Ulz9b
HqpkPN4u5uObTXyXh2/yLNSXDhG8NfTjzWKdByrpbbrfNV92Dw9W0otE/0PO
yXgcJMyDR+JHY39yDziViMOrxDU+nAX6ch7usQf8OtMZyzWeHcbhZsKBgzMH
pw7OHGJfd/6f7CNu4b68Zgxzv9btX/M19/Cwc7L3152TOXCtfOwemOddr3mm
Dz0fvCo4enBr4HLB74KrZRqv8bzw/MTidiAGnwv9Q/rymnPiud5zbx84/5qO
+cg58Xjg+cDZwTfSuX+4+/nYc17dMXhAFu9Lx0cZ+5nzULjP2FX68lvEfLv5
U8cwnvPiLGZwns9dl2/gc327+8EbgTOC78rzfXkcEEv3pQ+CsXzfn+/88z31
pfry+havv3Q8Y7/p9s/9jWsdat8hzvmt4z93vS+c+wfn/N5r1ly2L9tcc0Y4
TY7wPt+j/tTYn9wbvoLvvH+z1zgO+G414/nO9yd+j55v0TOOb5Jz77/v0Xfz
m83L9+X3xvlWOd+t/9lr7jOe+ah/9Zq1f3efOAn45jvfe+e708zDd6aHuX94
YB+M5/vlfCOU721+5h5/df/4DfjOPPOxB77NzXe52R/fG18r6pX68ppv0a/Y
l+tyDQ+M5zvkFL5JvpxjeMZpjWX+6Wv5bIxhnZIDzo9vW8MV3z/mu7Z835bv
GNPme9d8I3m1vvyeeTk/vu/P/NxreJ/vG/O9a75VzDfx+e453zzn2+d8l3k1
52HMGt6veV3mmsb5+d46Z7BGX35LeU/32JX/jtfs/RDn55vY/DPptuP5Zi+x
fH93OZ9lWc+V+TnDpR2/lGt1nJM98Z1t9sh3nfmmM/Ot1Zf3edY97dvD+2O6
B/Y9lmfCN3i5f7vzjWHs4Y45wj3zjendPb8xPJN1+/I+uVivL9e60uvxvc8Y
vlHMN6n5TjHXb/nc43kO5HGC/3dWfDuV76a+Zb7flgu+v885XeV4vm1czppz
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
NgZ+lO34If3nvDRwqhx1gjpFys+pQ4zDHafmP8K16sSywMCS87ZmKo9SBud6
QZ8TTI0zvcD6wLzAqMB3RmsHHI1nYIK/W8aof818/kF/cp0LtgKuxVlNOWI6
s3xmwC44Lwf8AnwJDClPXIkzlsarwzhYCdhUsToT1OktFsQZQrO1g05PMSbG
E7xpnjrgOeBDi8VxOMsnwXmQwSbG62eOeMfbjoNfgCctNRae/7liNNifo835
6r9ujOPEYTi3plj8gXM+msUswFqqxYLQSc61Ae/ZJn6x0HHwGc6SWSSOADZT
K/bC+B79J+cPqL/E8X7eO/YJFLhulf87cG4K/z9Q8we3uCY2slw/5+pzjbgN
+hf0gXNKwAfANzgPg7o3uAD4zUXtL1P/LfXxeau2toiDMBecpKV+HiImAo7x
rnaokcPjT50YHAMMg5o9PnNORkZS/w+xbo/OSuVl6hAXGAVnLVB/WqwOuMNy
x8EskDmzYYiYAJhBjjJnJyRYxBrHqQ3Dkd1gjR39YeIG7+kDNstCCtfAfgd9
Rme49f4y1y0z3kHW2qmJl6sDv/90dd43Jy01/xBr7NSxqe/PFjdALhZ/WKd9
9CvUKVeeo/76kMIL4OtPav8bjIv6NnX5DUn9P6Rq3RuV1+pboTJc7ZXWg6mh
b3MuHPQJnlDp3A/UL7SmjX6VNXDyTL2d71DwclKjoxYODzj1XmrR1MSpM1MH
huuZ+i419S3qYBN+8CZr7czdav0b3mpqth+rf9G6N+P1ylXq1CjzvZ76M/zR
ST0bmfoqde5q/dnpulXqUMumZlutTrq13B3OxeaHyvuUqW9vM8YGa7of6Se1
Z7iPk9o2cj9lataZ1mN3hlTtepfyQeUs68pwHA+25ox8j/Jux48oD7FWSn2z
xPoxfLsTrBXvUaYWS022QBne26TuW+v4Uef2tfaIfqF1V+xMdF34cJM67qf6
cNrnAR/m+zuE30Vn9Y3v2tQz4EegTkBdEK5DamjUYqmxlrsu/KqV1i0Zr7Dm
Cr/nQWu6n+nPVe3UW3/dr8/Y/HtI1XGRp1kjxc5K65d16jQqU0ujxkg99IR1
VuqV1P2olcLRSe2RWiz8j0nN8oi+tdR6Q6xLX1I+aA31sHObtdnOmhs8Jq9Y
Cz3qOPU3aoITrV8e0x/qhdQo+1nDRM60Jsnc71mDhKNtgnVE5L7WTrGT7nh9
SNUq4UebZD2N+mCJ9cUG1wr6WaKMzkprbtQHV1n/O63PbR1Hv9i/I2DmbdSh
Xvil+aS2TJ0PjqcD1gCR37WGB8/OLdaI4FAYY/2Mmloba3Jw+lCvu12Z+la6
c6kFUoeD2yWptyHfrM457aNDvexn1skaQ6r2RU1trDW2iz7DHXyeu1sDPKMP
zIXXI9f6Fj4vtN52Xp/bK/eyTtbkWuhTL1tgvF84t3XbWJPacf07Squ2sZ+N
Wte96ie1MvSTeh68EtTzbmgb+5Kuf61pdWPb2PvT7br8DW1+FWLOz5h/+pfQ
pwZz3M8aWEpnbZKHm/RhXpv4ik/I2L6mfWw0u+5ur1HfYk3W3uEYPtEvhB9c
62ps2KU+hx1i+LHXyQX1uP8B9wEfYw==
         "]]]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1:eJzsvXeU1Na29VvkaCiDwWREziCTk0HkjMskkxG5yQXGgIkiNwZDkTOIZDIU
uTFJRDe5yNEgohvcQJGb/D6vJVX33Br+xjnvnnPvPW88/+PheeqoFbam1pr6
7a0cHfo06hzf5XIlSulyJXDZ/wQru+Af+7//KT346dMTS/dW+i/oZqyuxdUD
sXp4XN2I1X1xdX+sPiOu7ovVF8TV1Vh9eVxditXXwd/9GNK3xtXlWH1PXF37
ENIPgf4+pJ+Iq7vf2bpxDvbnja1r1+Lqnle2rt6Jq3uf2br0Z1zd9Sj0d5/D
du7Zuv8tnLerth4RP+440I7bupI8rq5ut/WwNHF1Y46tBzLG1eU+tp4pZ1w9
WNLWOxSA39/5aOknv4qr+7y2/rpsXD1w+gPr2sgqsJ+P31u//7l2XN2z+R3r
Rulv4e++fsO6kqs53A8/vba2E63CdnK9YF3d2TWu7m33hHWf7oX93BzFutxg
YFxdanWTdW8jLa5u1jnLuvvauLi6O6nBesy7KbCfvl+s/Ww9C7aTeTTrScst
huP941vWMx1cAdf97mfW/lTbANvv5X/M+/9ma1xdeSuz3jq4G7aTbOwj+u+t
lw7C/rTXo+m/n74/JvjO/4j//Kt8SY/V54APxOp6XF2J1VfB/Rur++E+jfWf
HfD7WN0Avwr5knYEfh/rSwHwk7eh+/0ibCcmpN+E7bwMbec+7GfQ1s3H4MMP
bV1/CX5+y9Y9H+G8XQj93URwXx8K+cxnoK+z9agv4ur+n2y9SVYYn61s3Zcb
7uuMtn6xMNzXu23/KVcS7qPytt6mIvjVaNuX7lSDvzva9qW79WD7WSxfUiY3
hvs9j+VLRo9W8PuOr1iXynWMq+vjnlm/f9Yd7tOsjyz9dj84bxPusa4PGAzb
eXyVdX/4KLh/M52w/O3ZBNifLjtY75R3GpyHCfNYX9BmLv6+H+vFtyyJqxuH
y7Nee+Uq+LtJH7PP9Mu+Cfzi2hjWPZt3wHl++ZL9p4nHgP2RSpOuvWt4BH6/
qSz7Uv/yp2B/bgQf0n+PrXg+rv6/zZf+VXWRHKuvgb8b6zNbYDux+q+wP7H+
cwD8M9Z/jsH9HqqLXGfBV2ProitQL70O1VG3YDvPQ9t5APrj0Haegu/9EfKB
GDhvv9t62XjgJ6dtPX9SuL9223rQDeNzSWg/v4RxNdjWV0lxdamGrbfOB+P/
je0zHWS4f322/rY03F/vbf/JosC4LWzrc2qCzyS3fEnb+E1cXe731vKlMs3g
75aOsX6ftx1s/4uXli9d7Az7vylobWdB77h6YNJDqy76/gfY/2e3LJ/5bDj8
3QcXWPekGBtX93x5mPXm/X+G67VwPesz5syA8/znJNbLHl4Ax6u1Y/1t6uWw
Pysl1tP8uRaON88x9p8lbbbA9X3SmPWE+38F//mwhf0nrXoAjuv7G+w/nVMe
javrnY78Sb/vdT8A+zm5HfmS8tvIi7CfVZdEkf5q8O+wn//L+rW/q4s8sfov
0DfF6htg+7H+sw38IVbfC34V268dhr8b8iXtJJyHUF2knYfzEKqLjOvw+1Bd
pNyF3z8N9XHRsJ/RoXoJ+jXpbkh/B9u/HPKrBDCej9q6NwXc11tsvWJa0GfY
+vtMMN7CbD0a+jV/IVv/qSCMw4u2/ywsDvdjW1vPXD6urmy3/MfVsCrcF8ds
/1lbB/ZTs/u1T9CvGX6rLnJ93QK2n8/q17RN7ePqrrnPrd+fCoO/u/Cx1e90
6Av30bI/LP9pPQju05u/W/7jHgn7WSbA+qC74+G+y7mH9eo7fHDexi9lvWTb
2eg/wyz/+UaH65KzLuvrdv0CerEErKectxH0Q0vYf7bf2QbXJUNW1ocU3QvH
1bU710uH1x0Cvf4w9qWF6U7Afl6qTb6kLLt+Fv7u9v0P6P7O8+ZyXD3D1Ft/
0H3we0UT9ORr75H+5+q7cfX/qX7NG6sv/Uf6tWCsz2wCf4vVI2D/Y/1nP/RT
sXokHFdsXgT9mhzbr12C34fqItWE/XkR2v4fsD9PQjlSEHzyQahfewU+aYZy
pE9QL50L1UuJYTzst3U5Ndx3q2z9ejoYb2NDdVE2uH+bhHw4D/hAqlA9VjSu
7l9v+0+eUnF1LY+tr/oa9qeLXRcdrx5XD7S0falAA9jPO1ZdpPVrAj5wwaqL
jLWt4b57btVFasZOsD8Pnlr7U6Qn3F9VolkP7P0+rq40vWttf80QOM+Vr1h1
lDoazoNxlPVV2SfC9rNtZb1/DPRr/tczWf9i1Dz4u6l6WvXS8KVw/j99xXpS
YzUcb8wty2dM7Nc69Wfd2BkB5yHiJvtPxfj74TyPysD6owq/wd998zn7UnHv
afCNQfuoLtKyxL8Ax5X5S/IlZeqya3H1y9+nI1/yZLhwC/Qh+8mPPEmH3Y+r
V09R7PZf/x70YMmfME7+Q3JsT6y+C/ww1n8Ogh7brx0HP4zt1yDHVmP7tatw
vKEcW78N/hmbYz+E34dybM8z2P/7If95A/55PbQ/mGOfDPlkMhj/O2196+dw
Hy2w9csZYPz0t/XuOcA3Ktp67/xx9eAj22dyQI6tj7D1xJBjB+/a/nMZ+jVX
Srte0mvBeLtm10U+D9x3X1m+ZJT/Ds7DNTvHrgM5tm+mlWOb57vE1b2f7Bzb
5YX7a9oDq7/rNQDuxxmm1d/1GAH74zrP+uVP2K/1PGDpRyfD/X5vteVX42bC
/u8db/mnexFcl8bNWf/pJfRrfiM96w/zrY+rK1N3s/9El4Yc2xxYhfVRUbvg
/BScz/3a2ryQY+tz97D/lEgLObZ2ej77wgHfGTg/gQKcI+1pfgmu44Z21K8Z
1UfegL875GvyHTPp2Dtx9dZRp+i/axfrEBVXlxYWJv8yDv/yKK4enfr59b/+
nXzQuKewP/+iHPvv+rW/y7H1WP/ZDv1drL4PfCbWlyDHlmP7tVOw/dh+7QLU
dbE59g3QQ/2adA+2H+rX9Eeg/xnKn19A3XU7VOd8gOO6ZOuDEsL4ORLysZQw
fjaG9gdybGlKqL7KAuO8va0fywW+kTNUNxaCvxtp+8+AEnA/1rP1ehVgHM63
fSkX5NjSCjvHvlQXfl/P9qUzjeD3Xa1+TevYEvbTeGVfrw6wP0mtfk190g1+
f+6RXS9Bjm2Mv2/5z6Af4Xw2um7tz0Xo15SUpyzfexMO+5/lV9avD5oK++NZ
xHp0jzlxdXnFQNZbpoAcW0tSlXX3vpVw/hPFsM/8MsIfV3dr01j/dGk7bL97
Utbb/Lgvrq7ub8j3+csJh8FPYpqTL2nlyp6E38uZOEeqNPtcXN0cP577NfPW
FTjP8+ZTXeQ6EQn9Wv6RLalf83+oew+u7/XzVBcZtZo9jKMrj/fn++v/r+Ua
6n8Cx3U5ePWvf0dNH/8MzoN0heq2mD5pX8J1+Zu66O/6tb/Lsc1Yn9kM24nV
d8J9HZtjQ79mxtZFR8F/QnWRdgZ+H1sXXYa/G+rXJMixXbH9WhTUe6F+zcR+
LSrkV6/h794I5UUuGJ9nQn6YBMbPXluv74bzvzzUr6WH+26ErSfFHLu+rQ/N
C79PYOvhxeB+XGT7TxbIsc3Uth6/Moyf2rYv7a0B25FtXxreMK7uX2nn2O2b
wn0x0s6x37aBcTjc6tfMBJBjyzWsfk3/oRccb6s/rd8v7w/7k/aO5T/RQ2E7
wy6xHlZlDOxPvd9Y97ScBLrfun+izk2H6/XVVNYnbZkPx9u7M+sFGy2D63g5
P+uP766B89zpAvvM5tWb4feVO7Ke5MRO8If5kew/+XdBvyYde8N10cavIuPq
+uMH7D81mgfi6t5pkzjH3n4S+jXVe5nqG63Soutw3qodp7pI/7Hbbfj90l7U
rym7cv8RV0+Ymfu6mKNNo2F/8tagesvf8/dgXN1zO4Zyq8uTRz+H83w7Jb3/
mzP5DfiSMak79Z+B1nliYH/+pl/7uxz7f4o7cod8yQDuSAn1axpwR2qoX1OA
OzJDObaEOXaIOzKBO1JD3FEA+jU5xB2FAXcU3GbrY4A7kkLcUQxwR57etl4a
c+wSoRwbuCPvLdtnHkC/5u5t69nLwfZP2P6zELgj7YHtP1uBO/Kutd/vN4Ic
2/fIfr9fB7gjbajdryWBHFt1W/2achO4I7O61a9Ju7xwvD9b3JGnH3BHcr6b
lv/0BO5IiWdxR+on4I70pftYb/6lD/T4FnfUfARwR57vRrFeuDtwR+ZFD+u5
7wF35O6VkvW2/YA7MrpvYP9pkhFybEUpyvr7zHtg++1Hsi89fQH9mts3n+ui
EbmOg36+D/mSsVGBHNsc/8yqi0pBji1NycK+dPDnm3B9mz6hekhqmgNy7Mgq
g6hf8w5N/SCu3mL2GaqrGp5p/Tiuvq5dJfK7ggET+jX9QirqG+WZg17A9U3R
jPY7/9vzr+LqrmbDKK/X1pjgS9rjzVQvqtWnv4X7629y7L/jjoKxdRFwR1Ks
L/32j3BHamy/BtyRFOrXNOCOgqG6SALuSAtxR64n4GMh7sgA7kgLcUcacEdK
iDtSgTtyhbgjVyoYJ2tD9Q/k2K4Qd6Qhd9Qy1PcBdxT40tYTF4H7/Vfbf1oC
d6SWsfWfgDvSR9h5UQLIsYPD7BzbXR9+/4XlS9p64I6kTHa/Nhu4I6mJ1a8Z
3wF3JPW1uaOsPUD/ZOXYpgtybLmdxR0FdOSOtljckfwLcEda5HFr+5l/gvvu
+XbLT6pBju19MJf15WOBO3KH92X94yno16Rp5VjffRK4I6N9NN+fd8tBjq3M
HcV6z4vAHelRz9h/doUBd6SlLs76mD7AHbnblWBfStIZuKPA5w+pLjIivgPu
SP+tHvvSrcBV2E7OJlT3mLu+gxzbvz8p+ZI+9DH0a7tdQ6l+Cv+YJG6Ord3f
P+cvXzNSLi4BdVHShpXp771vbkK/pj8pRXWbnLQz1EWuH7ZTnacdXv4a9IYH
iW/QCk95A+d5w3Dya08T6R2ctz8/J3/3HWjzHsb/v4g78obqIuUf4o7coX7N
hH7NG+KOJOCO1BB3pAN35AlxR37gjtQQd+QB7kgNcUce4I4Cu2w9JeTYqm7r
UcAdBX+09QPQrwWr2foo4I6UGNtnhsow3iaH6qIycF+/seui0pBje/Pb+m7g
jowEdr10+5u4uqebnWO3BO4oWMDq15TmwB1pCax+zfUG+jXvXIs7kk4Cd+Tr
bnFH3pnAHfkOWNyR92vgjry/WNxRZGHIsQM7D7GeYRlwR57MFndUeCdwR0Yp
izvyPQPuyD+mLevdi0GOLdfPzvrg9Otgf+pEsv90GwLckbfrt6xPeADckXem
n3PsJkOAO3IHr1h1kQzckWuCwb5w/UMA9jNvc+7XOi8G7kgrOYfz6KKLgTuS
Vo6gfs3Y5IIc29iTgeokbcwp6NfObh1M/tV6VnLIsWsXmkLbbd29LNRF3tP1
qD6rneEq9GvBx17KucLDa0FdZFxpSz7rqxMGdZHxY0V6v+i7JUNd5Go8mPpb
pccS8CXXhCD1w+bj/eBL2vcp6Xr4+i76APfjP8kdBUJ1kQHckRGqi1y/w+9D
ObYK3JERyrE14I5coX7NBTl28I6tu9+DH4a4Iz9wR0ZkyN+AO/JttvXWwB2p
00Pv6zPH1fWuIR+DHNtT0Na3A3fkOW/7zy7gjoxWtl4duCN9s10X9QDuyHvY
rovOA3cUHGT3a1kgx/b/Ys8T6QzckZTR6teMk9CvyWOtHFt/CdyROdLijqTh
wB3pQy3uSB0N3JF7tcUdDSoEObb052nLr5JDjh2M2M36oTM+GJ/Pl1h/dzRw
R64tQ6397AbckZa4jlWP3QTuSF4Vj/W3xzbCdtYvtuaJJIIcW62aifWrrYA7
Mud34fs8x3HgjvSGgzivmfg1cEeBHlW5X/O8gn5N2rST66IKGSHHVu9fIn9R
Snggx466tZjqIbmigf3aQYn7tUF7oV/ztB5A/3+1VtoncLxLf2KeYGN5qIvU
7l3JHwN1T0C/piY/cIbv72xQF2mDR1NfqubIDnWRljWKzosecxh9qUMteh9g
pP0S/Me1NgvVo3r3LOA/2p6HfjqOVbdBdwVncb07dcBHOM9/wx1Jsf0acEdG
qC7SgDvyxvZrwB0FQjm2DDm2EuKODOCOpBB3ZAJ3pIS4IxW4IyXEHamp4XhD
3JELcmzfmFC+DdxRsJGtLwXuSPnM1psDd+Rba/tPLeCOfDlt/RJwR2oH25ce
Qb/mamrXRc2BO5Kv2Tn2dOCO9KN2jn0FuCPljlUXaeWAO3Kds7mjlsAd+XNY
/ZrnBvZrBSzuKHARuCNXfIs7co0A7sjX3eKOIuoCd+T+ZQvrQ9NDju31WNzR
3bXAHUl5e7BecT5wR4G9Mut5o4A7kiub7DOfvYd+TU3ej/WWN4E7MiZdZ/+Z
lxlybK3uF6yvawPckTIoJftSpQWn4fcDIvi9V95skGObP6RiX8p/BLijcDkF
+VJw0QPo19Sr2zjHrjcDuKOt43NSvzYn+CtwR7sz3aYce+mzyUEYt0WnkA+G
h5WFusgoNpP6SSlsG/Rr8sOCVOdF/fQQ+7UO1yjH1/IdRV86f4jqSPNYQ6yL
5geJn9CjR2JdtMJHvIXnz17oP/0TUt5nRGQH/3FtO0T5oH/rMtR396Q8UZqX
8FNc3RObYwN3pIdybAO4IzM2xwbuyBfijrzAHckh7igA3JFxLeRvmGOHuKMw
4I6MiNB2oF9zhbgjF+TYge9tfRxwR2oFW58B3JEcbfvM15Bjy8NsvQhwR75b
dl/2HPo1JYntS0eAO5Iv2HXRWg/c1/ntfq0dcken7By7I86fHW3Pn30D3FHw
npVjuzN54e/2sbijgA+4I38HizvyLATuSP31nPX7nJhjJ7e4I/9b4I6UNhZ3
5F8F3JEcz+KOtlYG7khu8B3rLdNDjq03S2f1fU2BOzL1X9l/njUF7shzoRLr
a9PA/NmAPpv7tTdVIcc2oiPYf+aVBe7If2Am89gvVwF3pBbPyTxk6YHIHXVr
xtxR81+AOwpfXZx8J7huHvRr528eoP9urgwG7qjsk+zkX74cBvRr605f4Rw7
w3To18xZOu2Hb2sxqIu8/ktUz0Xmm4E5dpsWxDEYq1ZDv6Z824VyNH+PLlAX
aREByt3MM8fRl149JN9XltxGX7pUk953uvPsQF8aNZ/ej5q1mqH/pKlK71PN
G8dRv3+A3r8GonKAL7luP6PnXDBMBV2NnScC3JE71K+ZwB25Q9xREPo1PcQd
qcAdBS7a+hzgjpQQd2QCd+QKcUcKcEfeybbeCbkj1dYfQr/mk2z9MXBH/iO2
/8wE7shX29YHAndkzLb9pypwR8Ziuy6KD/Nn3dVt7ugJ9Gu+1vb7tZ+BO1I2
WTm2thC4I/25nWNngPmzru02d1QXuCO5ncUdBXTgjvwZLe4o/3Po14K7T7Ie
ngPmzwbW72R90gzgjtzbF1r10jTgjsxTA1jPnRdy7OANhfWcd4E7Unu9Yp8p
ONcP22/kY/3mW+jXXAMTse5bBdyRGajL9/mPq4E7Mk42Zl+a1h64I92Xlt/7
79kE3JFUdwTXRZfiQ46tRUzlPGjKdejXpMLfUL9mrGwPOXaGkZFUFwU+9I7L
Hanj4mf+6/+vPH97FPq1mE+X6O8ldM2Afk0ue4Dqtqg72aAuUp7K5Kfq+K7Y
r92ZQv4rJWmNdVH9XNSvmYVfoy99TEN9r6x/jf3aFZnOu3m3HPZrv5aj6+SP
jEFfMn18XZ+NQ/95lXgJn+8nqG8eTePGe7sC+tKAuTTOPCW/R31SWRqXgazz
QXeH+rUg9msh7sgA7kgPcUd+4I6UEHekAnekhrijMDfsT4g7cmGOPdzWc0KO
7aoXyqOAO5Lj2/qvxeD3C2z/UYA7MlLaekngjsxqti/dAu5IKmj70kbgjuTF
dr82Grgj7w92jl2wbVzd08ueJ5IHcmx/EZs7Wg7ckVze4o4Ch4E7ku7dZt3M
NAyOq6LFHentkTt6esSqo8YDd2QWt7ij2s+hX5NH+1gveRO4I8/QTqwP8AJ3
FJiQj/UjqWD+rDT3HPtM7yPAHXlOqqwXeg7ckfLNYfafcRegX/N0f8k59vom
wB0pX9/lfilFnwCMnxZjOcee8xDniUw7zfNnt+0H7ihwwqC6SO0yHLmjq+2t
fq0i5NiTx0ZSXXT3RW/gjhrtLkT11qUcD4NxdX2pSTm2f8MU6NfUN6/INz2j
E0JdpFyqTv2nfKwo1EWurW+4X50eD/xH2eumfs0bGILv10pdofcEnivL0ZcW
7qYcW+0Zjv7z6jd6D6FrJdBnel+j9xZSnc2of/yS6ma3khp9Zs4yqrOVO40E
/0kxhc73mdGo165AdbyZZiXqSU9S3R/sbKAe4o5cMH9WCnFHQejXzGMhThK4
Iy3EHenAHWmzQ30fzJ9Ve9l6E+CO1OK2vhW4I/1maD4I5Ni+HqEcCbijQKTd
r+0E7sh3186xrwF35Ftu10W9gDsy79jv973AHZm9rX5NyYnc0Qcrx1YSQY4t
F7T6tcAFL9yPYRZ35J8N3JH57AbrvnHAHckRZ1iPygXzZ30VLe7ouuyLq3v7
r7DyoqXAHelTR7I+Zz5wR67D31i+mgRybO/z5KxPWwLckd55ncVplwPuSBtV
iPXLtYA7krcN436tWRrIsV0Rs/j+V+oCd+Sf0Y37tfUtIMeWNz/keWplmgJ3
FEiTlvu1rVuAO5Ka3OW66LsykGMnzNST+rWY4/kgx85pHqK6anflAcAdxXyd
h/wuYftH0K8pLV9Tjm02GgP9mlK+Cu232eEm9mtZWnJe/+MDfL9WaxbVi+7e
89CX5hWmfs175QX2awseU46tFY6PddGKcMr1PH+eQl9yj+Qc8ElX9J/1/Sg3
lC9cRj0wg3JGrUUh9I2iGeg556vUFfUX7SjHlLVpqF+eTbmnrm9CXU5IvK/+
+jfUjQT0nNZiLoEePB/iooE70g+GcnLgjjwh7qgwcEfKhFDdBdyRt4WtnwXu
SE1v6yWRO4qw/WcwcEdaSVuPQO5oiF0X5YIc2zPI9qWvgTsyUlq+5DqJ3FFq
25cOAnfkr271a/oA4I68rax+TaoD3JFpWjm2lB1ybKOkxR0pxwfjflrc0eWD
wB35frC4o7I1gDsyRljckVsF7shT2+KOotcDd6Su8rL+4iGud9S6LOthL4A7
kiIe8v05vAnk2HITjfU9b3G9o0tPuC6qPhK4I/lNEfal0j7gjqTERdmXTk8B
7kj5+g73USm+B+7I1aga+0jEM+jXIlPUpbrHG9UDcmxf1Q/kR+bgRJBjG5P7
UP2k3ZYgx95RfcRfvqYtb6NAXRS5Ii/9vSzro/H9WpvsVLd5vvVCv6adXkp1
njJnA/Zr05cS3yC1mo3cUVgnytcC9/IKeVEU5XHKrQ5YF01rQM8Do0EzoS7K
tpHuA3cq9JmyM+l5o62bhfrJhvSeVU77DvVMg+i9rFy5OvpG+sv0/PNU/hH1
LDnpva9v4GLUzWqUO2jBX1EPrqf3ytLyU6h7dXoPLe27jrpekOZfqRfug+4N
cUe5IccOLA69x4f5s+4Qd3QD+jWjqq2vAu5If2X7zCwZfj8x9H4fuCPXK9t/
PLjeUS67XjKBO1I/2Nxjcg/oqj2vfzhwR96sdr/2E6539NTKsaUskGObmr3e
0UfgjuTaFncU2IHrHU2z1zvqBdyRu6PFHQ1qCNyR0crijqSzwB3Jc9ZZPnMF
uCN1xEQrj5IWxtX949uwnvwb4I5cT7Ja268K3JGn+xH2n1ZzgTvSrzVkvWYa
mD9r5l/PvrRzFnBHStcL7D9HmiB3tNJ6v9UpHeTY/h0e7tdy7AHuKJhtCvdr
Yw7iekcf+5PvSPHTQ44tnU15l8/ffejXFrh7k39F3sgFOfaJ8z/QduelqwF1
kTtQguqzmC/vQ7/m7dSK+rXIBo2wLorH68oZI/piXVQhG/Vr7r5l8f1+0w7U
3xrdV6IvDTtO/bDqO4I5dp8g59jPlqAvHZhN/bY5uib6zOh31J8HahmoVz1D
XFrwh4zoA7u303iS6rYU6pltPP4KTEBdq8Hj9eEa1MN60viW8x1EPWo33Q/y
uPOo+1L0ofP6wkTdn5/uN8+lB6iri+n+9MhB0P3TQn0ZcEf+LrZeEOfPFgjl
5MAdec/a/nMF+jWpha33Bu4ouMH2n3DgjjyGXRd9AO7I39d+v1YOc+wFoRwb
uKNgcqtfkx5Cv6b0tfo1LSvOn+1icUeuecAd+Zpa3JF3DXBH3n4WdxRZE3Js
Y5HFHekycEeehhZ31DPaB/vZ1uKOqq8C7ki7O8T6u6NxvaOoWlYdFR9ybE82
F+ul32+E4522kP3nel7IsZWwL1kfOgG4I+V4B77Pf3mA6x3V/Z59aX1n4I7M
mAqcY2dxQ46tL9vEOXbfcsAdNS/BXKNnbkfIsQdtnkH9mnv+RejXCo/4gnxq
VbxL0K9VWdyN/v/D9xeGHFtd3pd4gkCRWjh/tqKH/DHm1iXo17TF68lPFbkA
1EVGtvbUl3oi8kFd5Gpwgs6LEX0Cc+xdmel9gC88C/pP5Xd03t1zJPSfpWf8
tJ3j91Df15fqXffdQUJevZbqY7P6PdQrfk/1tNSlJN7v62pS/a0f64V6yuJU
rwfKzBb6uL1U38sJt6GunKR+QOt8TOjj8lD/oG+7IvhMM+o39NV3Bb8aRf2J
d1g06q5L1M9oXzwT9Ovc/6R5BXrgW9t/juB6RylCfSJwR97Vtv90Q+4ou60n
qRRXl9vavpQKc+xv7Bx7PHBHrnNv7fwK1zvaa693lATmz0rnrBzbaAHckbrb
yrGV8cAdueJb/ZrrI/Rr5ntr/qyUAObPug5dtn6/CLijYFrrfU/SAbjeURGL
O9paEnJsadUM1mMuAHfkq9id9d4RwB25hhazzpsb5s9qo2+wz0R+CTm2ur6P
9d4tEeTYvtZXuC/LXArnz37mZl+aPQK4IzWYmH1pWORp2E7PTTxPpEF5yLE9
kYnIR4wbUcAdKfdd5EtaiY/Qrykl1jCPPXct9GtZ4qWnfi3ywzno15KviKQc
e8j6+UEYn7sHkA/qS6pDXeR5NZz6yctjDOjX3Ju+DPz170H5XiB3NH4X5fhK
tjPoS23WUh1p5G+KdVGKo8wd3RiH/drsfsRbSOv7ov/8fIn4DHl8TvSZOcuI
59COrEC9eUXKE5WsiQX/GUj5o161Puo3stHzz51shJBvf0n5ZmDJMsE3xlAe
ajzag3pgPuWnamQAdc91L+m1bgg+liaMt/OH4FdFqD7Qzz4Wfj+K8l9z73Oh
fhtCebFS9bVQ7z2hfNl96A3o2kPbZ5oDdxQYbOuNgTuSb4T8B+fPxrf7uGjg
jnyn7Bz7sAfGWzbbl8YCd+Tdb9dFw4A7cvW1+jVXNpg/q5ywcmyjhBf2s57N
HW0F7kiVLe5IPw3ckau/xR25agJ3pK7ab22n0BT4u+dXsR48BtyRv+o41pv0
Qe6oRjPWW5YB7kh9aHHJW0cBd6Svj2D/yfsDcEeuYhVZd38N3JGcZgb7Uu92
yB2V22qtt9YWuKPAhinMY1ffj9zRpEzMHZ2aCdxRMEsD7tcmHQfuKCKQj3zH
19YP/Vrk2e3MY7ecBtxRs8ppyb+ajLwC/Zp7mkE5dsz2xdCvSdfDaT+CUytA
XSSHH6AcO2rXIujXtPaliGPQV27Gfu1xbcrRPId6Yb+m7eTcTT8jvF/7jbgj
T8Y/0JduFqLnhDTmV/SlXt/Tc0U+2hz9Z3Fu6tfc208K79dm0/tXt5JL8A1e
J0Jr3x71/r3p/a5cczLqZVvS+2Bp9gYhL+L3x9Kxw8L7uOOUY3u7XRTqmc38
frrhbWF/vqL32fKph4KfVKL337oZFPxnOr0vV0q/FPzqN3q/LjeMEX7/nOoY
afRbQW9I7+/l9O+xvqph+9Iy4I7M6bb/tAfuSJ1n10VFgDvSKto5dirIsV2N
7PVpI4A7UpdaObayC7ijwA0rx1arAncUmGNxR3JX4I48pS3uyH8UuCOfeY31
iNSQY7t7WdzRoDrAHamVLO4ozA/ckZnJ4o5q7wTuyPP6B9bTV4Ec27+1Muvd
k+H82bMv2GfOb/bD+ckxmfVgVsixAyPis57gMnBHyrWafJ/nPQrckbagIftS
lonAHRkPUnK90uIErneUcCD3a9G5IMeWAuOpLjLaBaFfCztTjeeJtBkE3JGc
azfVRfrO8bDe0dZqqWi9o9mD7mC/VnQf/b1AmA79mtR6LdVtwW8LQl0kBbOQ
nwbH94W6SOnWm/zX37kTckffJuV5In9+QF86HUXvKaX7VbFfW+amfs3359fo
PzNy0HXSTr5DPX8v6sO1IhOE92jR3LeXeIr6hjY0bnxpvsb78eMwGmdud3/U
37tpXLp3zxfqliecY1eNEPKfZTTu9YgTgi956D7xtrsm+FJevq+u3kNdWk33
odnskeAbOt23xkahX1M/Ui4T0F4J28/AvlD+jbCdRuQjaqF3gj6ZfEee/F7Q
fyE+Up74AeuryrYvJYQc25Xb9iUTuCPfLJvHXoHrHXWz54m0BO7I29pet78W
cEfu9Fa/Zp4D7sid0eKOgveBOwpst7gjuQ5wR8F3F62+bBRwR4FZFnc0Zytw
R76tG1m/ngZz7HNTrBw7Bcyf1cI7WvszGbgjd7m8rN8oC9yR/9gZ9pmmd6Bf
075ry3p4Jpg/6/60n+uiJEHo18yET9l/rgxE7mjsDfafP8cG4PcZh3NdNCcJ
5Njy+iNcF9W7B9yR9s127sfaTwfuaM5nzahfC9xtDDn29Ue7qC6qnTscuKOl
TdJQvbXxwqsg/N2ekZRjRx2dD/2anuUW+aa/b2rkjipnp/5TlstiXbTjKufY
jZJhXpQ2hs6X9G4k1kXxt9D59S9eLcxfW0zvFfTkk9B/Ti6g9xByidLoM8t3
0XsLo8ZW1Gc9oPccni1uvL+ejaQ62xtsjHrMVZoPIM0Yg3rrDFTH+xYJ3FHU
PKr75WMCdxQ+k/qE4PmzqEdIXtrO3puC/ySmPsR8EyXUS72ob5GnPRHe63mp
z/HVeiH4UoSHxsMyoV/TrlAfpScT6iJXfOq7tH2iL1WhPi3wWvAlV33q67SL
HwR9Lc0/8fzwEXTfQrtfmwDckXQ1tK4IcEdye6tf07/G+bMP7fmzhYA7UlNb
/Zoe9MI4rGpxR8oe4I6UvRZ3ZOrAHem9Le7IXxu4I/PCXtbD6/ri6p57y1lf
dwS4I/8xzerXTgJ3pG5qyPr5AsAd+QYmYz3VGeCOtDZr2H/ytwTuyDDys/7i
e+COfAkGsy/dKQY5tnllKt//X/UF7khu2JG5o9/6AXdknL/NufP6/sAduaYk
477r0BXgjprXv0L1kKdrA8ixKz5uR/1aeC4Fcuzi+SOorlqwcQpwRy+klOR3
4568gX7N9+Am+WPZFD6cJzKwMO137UMPsF9zlaG83qz8DOeJ7P2R6kWvbwnW
RbnTc7828C3mSDlOUD1qDkmM/rOpN3EYZoGzqE9pSdyR+7vu6D89m1FuqMy9
KtRFPShn9C0tjPdR97eUY/sLhwk5dinKMQOFpqOe8EfKPYOZNwv342Wen+mJ
FHzmLuWqRpnLgm90pRxWn3NHeO9fg3Jb9dc/BX94RPNLlQlPhT5uKeXC+gah
XzP6UI7sXi70a8pH4oS8huhLT2l+rFlF9J+WlGsbTUT/+Z5y8ECGj4K+nXJz
fbmov6L5vZ6kn4TzafdrQVzvqJS93tFM4I78Nax+Te8P3JF6INr2Mcix3ckt
7ij4ErgjX0WLO4q4Bf2alNPijoK9gTvypLC4o8LDgDuSf5nDev+LwB0pv/Vh
PUMSyLG9ecqw3igzzJ91pXzA96fSB7gjM8Vw1qtmh/mz0oFo7suezMX1jn4v
wPoXm4A70n/Jz750/FfgjrT217mPGjwZuCPzfHnu19Z9ATm253FlqnvUXBrk
2ME9T8mPpDFZIMcOZOxI9ZN6ohzk2GsiO5Ovrc3cAOqi8ESpqF+r+CEG+jXv
paTUr9WeMQT6NbXcFKrzPB0jsF97M5L4Bv/IxcgdVa5L+ZrbWwTrouIG5XH+
N12xXwsvSs+DYNGW6D9jgjx/9rUbfSa6Hz1vlDNzUI8oRf2atvy94EuN6b2s
r0MNvC8O7aHnn/n5YNQrvqfnpTu1Lr6Xp35NabNLqK/G0Xtl9zOBO/KNoffQ
5iuBOzLi03tr5cN9wceuUH1g5hVybG0gvRdXqgs5tlqQ+7WHQr+mPaD37vpY
oV8zBtN7ek97oS5ytaL3+vpW0ZeOF+dxLfrSSeIG5Mai/2QhzkA5JeoKcwl5
BV9y9ab1U3ydUPeY9vzZysAdyWEWd6QX6xNX9+Wx1zu6CtyRq8Mt+z0afmct
u/2dNS9wR9KHg9Z24uH82S8s7ij4Fvq1wG8/sZ6yIXBH8oTWrF/tjev2T8li
8Ui9cb2j8EPsPz/uAO5Iql+f9UoVcN3+Hau5Lqq2Gbgj43KA/af8j8Adufdu
5Rw7SRHIsd1V6vD7tXdXoV8z443jdSBj/gDuKOab7uQ7brUQ5NiBWy7yJbXi
R+jXIru3J//yFvwacuzwka1puxX3fQt1kXo1M9VngTTPoF+TompQvxZM0Qb7
tVrpyGflDYOxX8vion4tEFMZ+7Xv63K/1nE91kWLf6H3l1Lh4+hLvvPUPwd7
rUBfqtWb+m1f5jroM/F+p/48WOwA6oeWUz9vXskk3KezeDzVbyXUD+OZO7oj
cEfu3DRejT5rBb6xIo1vabzAHfnm0f1gHhO4I+/V3nzf3BLqokR0v6lvBe5I
6UXckVpHyLHVHsQReo4J/Zr27hvan3hiXXSa8h25vlAXKdWJaww+Fn2pBHGQ
ekbBf7SfZLqfHou+NJs4S9840X/OEpdpPhP19zTvTlJEX8pE3Kc8UNQ70fp0
3kWom3Xs9Y62A3ekFLW4I+MMckcVLO6odgfgjsxvLe7I/R1wR647u6y+Lwnk
2N6jOuvLTwJ3FPjC4o66LATuyH20ppUX5QXuSJ72kX3m9/R+uB/7z2f919q4
bv9PX1jr9u8A7kh72db6Lm1SyLFdij1PbDJwR64RpbheSVgQcmxt8mrur460
AO5I+vEQ59ifDUTuaNgE5o4SPYJ+rXaZpPx+beqTuP2aVvh2a/r/r6xQE3Ls
8PXNqQ6ruLox1EX+jOXIH/N/fwf6Nan6XM6x25TA9/t3K3FfWkuGukiZ76c+
Vr5yDvu1ekE6j/qrHOg/8a7SeQ/sy43+syaCrpPxMErgIevT+wmzxBD0n9k+
ep/he3VfyLfrUT2tLSmF4zx/Qaq/jQ29hTonKdXr0nWBO+q/hLmjwQJ3FFxK
/YD0q8AdBRNT/yA9E7gjqRD1G+Z5gTvyd6T+xLNA4I7MNdTP+AoKOba2m95X
GTmEukjJR/M05FeCL7m+4Hkd78R+bRnNA9F7iDl2D5o34usn+k92mmfiLir6
zCGal2JsEfUFNI9FSiv6TBaa9yJ959BpnoxvvKgPonk10hpR12n9X+MA6krA
Xre/GHBHvrEWd1R2D3BHxu5Iq+5aAtyRb8tm1rM0Bu7I/Djd8jcXzJ/1fduN
9VMXoF9TyhS1+rhywB15Dl+31g8pATm2q0Evax22Qrhuf/6L7D9GQ8ixlWMp
WN+wBLgjvX089qXnL4A7crdaw3XR9GbAHUlpP3BdtCUF5NiXZ7yiushzMQ3k
2JfHLeLvrD07AP1a80HJ6Hee1I+gX6v61UbKsdt1XRWMq0c1aks+OOmiB+oi
17Ew7ifnH8d5/eMTBv76t7r7A/rSifmc4392Bd+vJZhGdaQ0ohXWReuWUN2p
HZuIOfamJsRbmN1+QP+5v4b4DP3bPOgza0YRz6FeWClwjykpT5QWJcFxe6AJ
5Y/BFg1QX5PI99e//WcF7qj2c54/W3y5kFd3pzzUbLpX0AdQfhpMcwb1Vfu9
tP2hAnckRXOOnVbIsaU03K89Evo1tRXlv56zQr9mtKO8WPIIObYSSdxR8KT4
fm0d5djmDDHHLknzZr1XxH7tDeXYpiH60lKal2t2Fv2nFs3j9V0TdTfN+9WK
iX4yi+YJe3qIusbzimeJ+l2ah+zdKupB+l6CdEzUy9L3FXxXUJeLWNxRWDfg
jrQaFnektAHuyFvX4o46PQLuyDV6rPX7xcAd+So0ZX1yc+COgkPSsD7KD9yR
tmO79R5tBnBHwTHlWN/UFbgjY7iP/Sf5UOCOAtpGntf/ZjRwR8HpEzjH9l+B
fk27kYZzpHFbgTuSI6vx+7WbQeCOmj/lnMiT9Qj0a532r6H/LjtsDXJHkxMz
d3TnGfRrYS1Wkt/Vb7wO+rVAob60Hxm618L5s73X8/zZ2qtxnsi4z4lj0Bbt
wn5tTSHmjtL9gPNnOy6l3E3ueglzpOXLKKfzTvwTfSnl55v5PO1BX5pWj9c7
qtkK/adFEurXvD+dRr1ZL3pueWbmxvEZvZWec3rzDoJehd7vemJE7qg8c0df
bkQ96SN67gbzHBH6sjX0vllaK3JHo/n99DCBO5Ld9D478ETgjsxU9P7bFyP0
a0pfel+u1hJybG0WvV9XW4rcUYC4I3OiWBdlrUy/zyLWRcVonRF3edF/lhej
65xI9Bkfr2MyW9TTU7+mfxT1IK1rqdUWfaO1m87bMFFvQuuw+Jc66iJat0Xb
I+oRtM6LLyDqUbQujHxD1CX6fpX5h1BfnYqwcqQT0K8ZwxdYuZMJ3JE3m8Ud
FW8N3JEvvBLrj4sid1TqOfvM8hP+uLoePZH10lWAO/KO+cR50fUEkGOrZlW+
zz9E4XpHnepwXXR1K3BHWoXEXK+k+QO5ox29OceWagB3lNQcxutAVk4IObbu
Lcvz+rNNAe4oav9GqovkoXpc7ujjvjHx/urXEmqv3mO/1vEXzrFPrYN+zTNp
BtVtl3eWQh77Y1Ly0xhtCObYqRqQ/3p390Qeu/8j9utlCdF/zu6l95T+PLXR
f+YGKcc2o6vgvH5fMrpOwZMf0ZeW16E+3Og8UejLznLffu6ZsA5bGRo3AaUS
jsN1HWic6Q8F7mjVA8oR1BYLhLrlHHNHWwTuqOwQ4o58yU6i7ilB3JE6V+CO
fO8px/YmEHJs30Tijrz9Be5IGUDckXlI6NcUk3Jsc4rIHT2i7y8a1cUcuwRx
R+4SYl7UkbgjfbroS+OJO3JPEX3pKq3jplYVfeY659gHRL0RrRPnzSr6gEzr
ymltRf0ErUMXmCTq4bRunble1GvTOnfew6Ju0rp4ykVRN2gdPeW2qPO6e8ZD
h07fBzWDqOs5Le6oeRngjpTpHSx+aT1wR8r93Faf2BG4I/3NafafLi7IsZUb
rVjPUhW4I2XNXqsvS4459txoi8eeD9yRduQy+8/9BQHYztkB7Bc7cuP82X17
uC5yJYMcu+xxngfi67YK+rVBFepSv+ae0ANy7PeNN5J/JW2+BLgj40kMbVcK
T4Dv9yv5KceOMFdCv6Y1OE6+qbTIhO/3f3tDObY0uQqud3RtF/WrSrLPMcce
e5P6Wz1bOPZrrp/5/Kob0JfMUXw9lk9B/7nVl95DBG+VRZ9JtoDeW3grb0e9
/y56z6HmToPjarhKdbb7fRPUt66h9yhy07GoL39JOba3wCrUM3QbQfdLkf2o
X+5L3JEnyzmh/knipfPwVOCO9FucY2cTcuxAY+aO1gnckVGPuCOppZBjGws9
pG8SuaMtxB1JacW66A/KsZUjoi9lJu5Ify/6kkz9WvCK6EujiTsKDBT9Zwit
k+uJEvVoWo9ALyve70coxw70FfXmtG6vPk/U3dSvGTtEPZLWBfaeEHWV1hFW
rjn8kNYdDtwTdT+tU+x55KjHaF1j/zNR5++va6+EfnBBA/afwfVxvaM3SVg/
69oYV1cbrbLW5x8M3JH8Lg/rDXTgjlwNBrAvzWkA3JHv5STu1xrPAe5Ic7Vh
X/o4Ebgj35OrPE+tygzgjtQELs6Rnn26GVeP+foU59hjOkKOrextTP2aNro5
cEcZ+6ylHPtUjtXAHa1K+pxy7HVDEmOOPTqSc+y986FfMw98Sfvty/YCfSnh
F8wdfXyL/VrjNrze0dpVmGNP/bSPfv+ZC/3n3Gpet/9wcqyLTF7/JdjxAvpS
zZLEbei7egp9WXnKDfWW11E/VpW4I/+DIjh+zl+nHFvN2A31sOSUY6oXBe5I
bUm5pzZL4I7c64g7MlcK3JH/EM+fHSBwR97yxB35DgvckZaHuCPtqsAd6fuI
O5J1gTtyjeL5qPuEfs1VhbgjY6OYY/9OObYRKc4T2U/cUaCWmBeV5fm0LUT/
qcbcUWbRZ2YQd2T84si3iTsykzlyHsqxNY+jzklNvx8l6p7EvH1RD9B3EVTD
4Sf0HQX9rKjnp37Nf9Phb/SdhmCUqHvpuw6+J45ci74Dobxw1F303Qj9tUOn
7wK636LubfMH358FfsLvrBlDrO88VgPuSF31gP1nz2bs13bnYT3rWeCO/Eou
9qW394A7koZfYB47yRr8zto3xblf218a1+0/Wor7tZ4zoF8bVOI+10VzS0CO
HbmkGdVP3t2NIMfO0aD+X76m9bnSIhhXv9zjJeXYX9RNBHWRr80z2r+yZ8ZB
v+bZPITqvMt5D2COPbw9f2dNX4n9WkmZ+7XnJbAuWjqb8jgjRS/0pVWp+XmQ
oi36T+MDxB0FrqZFnznroeeN+Wwe6pFZmDsq8RH1AcXovaxnTE0cJwuW+ej6
3BG4oxkXiTvyrxC4o1WfUb+mHhW4I0Wl98pa5dNCvRRG76E9RX8X+r5rxBmb
uYX5s4HdlGPL1YQcW/qGuCNvcyHH1j+jfk1+I3JHBnFH5hShX1PaEHfkDxPr
oq+IOzJ3ir60nrgjdY3oS8uIOwo0Ff3nI+XYUsCRIxF35Mnn8BnijrTOjr6M
vvNkThX15fRdKO8mR33C35GKFPUYyrHdlx0+Q9+p8t1x7A9918r/p2P79B0s
7amjXqLvZvlfOvyKvrOlxzi2Q9/lMt469L3kb+9Rd++sw77UpxNwR3qVX9h/
np+Efk2qfoL7opsLgTuSTm3gdUV+qw45duBAFX6/9iIG+jXj+lDOo39OCTl2
cG47Xu/ohAI59oLoF/TfkXnTQ44ddaAJ+Zc8uBnk2Bm+qkb9Wv+ubaFfm/Mo
AdVnJZN9xHkig2SeJ3KwK35nbW2QcjH3hdH4/dkst8mXzUG1MMdeX5z6NX+T
LehLwZH8/vLAafSlyxH8vvPeKvSlJDWYO9pYD31m3V7qz5V0h1APH0T9vFEh
C173/gOIO1Lrt0Y9YQvijoLzfxLqqPjUr/lfCNyRkZK4I+2+wB15BxF3JKW+
IPjGauKO1GYCd+S/TTm2J6uQY2sV2tFxdRBybLMWcUfu62K/FkncUeAzsS5a
S9yR0lTkjgpSv+Z9KfpSKuKOlGwid+SV6fw8FX2pH3FHZrjoPzsox/a9EPWL
xB15qjjuR15vbpCoVyTuyL3YUUfRdzTNX0V9FX13039K1H30nU7zuqMuou96
Bu87cif6Dqj02OEz9N1Q5bkjD6fvjAZfOY6LvkuqvXFsh75jqr5z6PTdU/97
x3a2kL99QN3I1Irv84L5cP5ssW7sS2O2A3dkfCjK9Uqy6sgd9V3C/VX5wfid
tR2/8nfWpv4E3FGwynD+LvbQBJBja3++41ypQNK4Oba2JDd/p23P9naQY7t3
V6Y6LCaHCv2aEj8nr0/78TH0a+7XY8hPB435GteB/C0L9aXSqbLIHSWZydzR
3quYI6U+TNyRu20+5I4eRxB3JN/Oj/3a+cV+ul8SRaMvfchH7ydkbRj6z4of
6H2Gf0UU6otyE3fkvlZaqEM+o35Nm9oH9dwmzZ/1jpgj1CdjiDvSngjcUdQg
4o7kVMeFuiiKcmxP0avCdlzMHX0SuKNgdeKO3LvE9Y5G8HpHipBjSwuJO/J+
JdZFb2n+rBpPqItcL3gefgLx/f4PxB15+op1UT3ijvQBov88LUzjURZ9Zhlx
R4Ftot6buCPfF+L99Z5ybKm5qEd/RvsT7ni/RtyR38EdhRF3JB909Gv0nXL9
vKNPfEz10i2HL9F30IMPHP5A301XgqKu0nfWA45+zfouu6MuMo5QHuWoixT6
7nvQ4Uv8nXjpg2N//PR7h+5aRb73EXX1xDuui065A3CfVl3GfvG6H67b3/QF
59iriwJ3lLRiNH/PaHw+yLFjzk/jfq3ZVejXwqPfU10UzJsYcuwxe2dSvbVX
2haMq18O1iAfnJGkDX5/dnUj6teSrr2I69Nevk0clVknCdZFxYZSji+9MJE7
OjyI6kj9VHusi4YPprpT8fuwLnpemngLPceP6D/DhxOfIWXIjz7zqD3xHPKt
1aiHXSf+w8iSTMh5ihN3pPVpiHrZK8SXSPM11CueJh7FfVDgjlZ5iDtS9wjc
kfYtz9tsI3BH+Vd66TpvEtc7OkLckVFO4I7crynHDiYVc+ySxB3p94R+TapO
3FGwjZBju5YQd2RcEvs1H3FHwfmiL6Vk7uiGmGNfpxzbe0j0pR+JO/KGif5T
kPo19XdRv0/fhwvIDr6RuCOlp8N/iDvyO7ijSMqxTQd3FEnckdfBHWWgfi1w
xeEDf1LfdNfRx92hPi7a0ZddI99z5NgG5diSoy5STpBvOPu1Q+RXzrpoN+2/
oy7StpLu9J/1tD8fHfoKqq+c+iLy4U+oSwVScI7U6hxwR66e5bnv8qS/GVdP
miIN+9KDa9CvNV+7iP7bs/oA9Gvvr72huihp7ZSQY+fPPZn8LvpRBPRr8tgW
tB9hXzfG9Y46zOH1jk5tQe7o6COq/4yfD+H7tbGpqF8z2g7Fuqj9RMrd9Hy/
43v/yhrldO6YJ+hLbV5RrqeW3C98fzYX86z726D/fP2Q1+1vfQb1x1WJO/JF
5cHrUn4WcUdyw46Cz6Qj7khdPQX1sEzEHamzBO4obB9xR/JIgTuKnMDrHUUL
3JGnCXFH/rXiekePKceWPxdybOUmrZOouoUcW/mGuaPmYo7dhbgjrYvYr20g
7kibIebYf9I6j76cov+kJO7IW8nRlxF3ZCYVfaYncUfKXFF/m52Oy+V4j0/c
kV5H1Ku6aZw7uKPCxB15ljnyJeKOTAd35CPuyHRwRwHKsVUHdxSkHNvtyLHd
1K8FHf2aepn8zdGvqWeo/nHm2JH0e0e/Zuwn33PWRTtp/5392mbyT6cvraHj
cvrPUtqOU59HPvbJoU8j3xN0Lep7fn9fLAPk2JeTFeF5/dEroF9b1XoZ1U/+
mjvj9mvG6J8e/OVr0t7yKaAuCl/0M3FHu+Wd0K+5fhtGdZuWpQrURcGML6nO
S/r9WFyf9kwh4o58KX7AHHvLWcqxlcYp0H+SzKT3lO52DdB/dgQox5Ye1ED/
aXGH3oN6j8VDn2nE83/MeT8L31mLoBxb975AvUka4o7UXpXx/I+rRdxR4OAP
qPsOEHdkvBS4I/cOyrGNXDuF69iY1/lqKXBH4empXwueFbgj7znijnyFxfmz
vXm9o6kCd6TWJ+4ocEXkjg4wd7RInCdygLgj7zdiXZSO+jV/ebEuKkPckXuu
6EthxB0Fp4m+tJ64I7mG6D+7mTs6JOq5iTsysznud+aO2on6AuKOfD87+jLi
jtQNjvqHuKOAgzsyiDvSHNyRj7gjr4M7chN3FHRwRxJxR0FHv6ZdoD7OmWOf
In9w9muUY/ucOfY+qq+c/rOdtu/0H+rXXE6fWUnbd+o6/d7pP7PIP526j86b
Uw+n/lfQV3WqRP2av/Ro4I4qRSwl/xoz5Vfo1w5Nukk59qJybqiLvBnnUI5d
+/kWzLEnbqOcSy6fB+fP9jpP7wv9d+sK82cX8vzZiAzCeke/8fzZCpOxXyvS
lbgjNdMWzJEqdCHuyFd2OvpS8VrEHZmTKqDPLBhK3JFSOkJYt/Zn4o6U6WmF
+7Ey8/2Jm6EeMZjXO0o3TvCHc5Rja1sE7shXZgTtj0/gjsIaEnckdxS4I/81
mn/uyS2s26/uIe5IrypwR8Fy1K+5j4j9Wl7ijvSe4vzZ0R463r1ivzaZuCMt
i5hjn+D5syfEHPsl5dhqPNF/0lG/pv4u6m2IO5IHi/7Tjrgj90NRP0LcUaCc
OM7XUI7t7+fggog7UuaL+gvKseUIUZ9D3FHAwR0pxB1pDu7ITdxR0MEd+Yg7
8jq4I424I8PRr5mUY/ucOfZx8hNHXaQcpPrE2a/tou04+zXKsX1OX1pH23f6
z3LaT6e+gHzP6TMzyD+d+iT6u059DPWDTl2jvyvoXbYton6t5MwD0K8ZL69Q
ji0lSgt1kZFvE+XYUs+VOE8kSwKeJ9L3I75fy/eUcmz39gSYFyWuQvm+uncj
ckepz+2j7S9KhP6zaTxxR4FkqdF/SlSgfk2fe1nwpVTEHZlZ+gh5UTbq17SM
N1DPnYm4I7NoMTxv3ffxekcJu6Oe0KT5s8ERM1CPrkDckce9RfAfjbgj+ZPA
HXlX8PzZbQJ3ZHxG3JHyTOCOfImoX/O+Ffo1aRpxR8HtQr+mtSfuSDktrneU
hrgjzy6xX9vN82fPiP3aNOKO/A3Euig9cUdyG9F/0jJ3lE30mb7EHQVXOXgk
4o7UFOK4PUXcke9bR51D3JE+2tGvEXfkWenIc4g7MhzcUThxR0EHd+Smfs10
cEdByrHdjhzbQ9yR38EdKcQdqY4cW6cc2/8Pckf/5x/q1wxnvxZB9YzTfzbR
/v+DOfb/+WcJnQenPod87B/s11x/Uxe5/t6XBtFzwal7af8FPezqdcqxT0z7
HLmj4DXKsSOSTIN+zSwXFiD/uXMcuaOcVZg72rER36/VSE/9mr93eezXqvbh
9Y6+7If92tMgz5+91R79p9MMXu9oZ3r0maii/J21zxei/iEBf2fN+IT6oBTE
HSnLa+H5mTfBR7/fMgT1/JuIO1IrLEH9xDPKsQMld6MeWY64I+8kgTvyNCDu
SO0scEeBLcQdyfUF7sivE3fkaSdwR658xB1pPYUc2/WUcmwtichjzybuSJon
9msKcUfBPmK/loS4I/c+0ZemEHfk3iD60iDijrTmov+Y/B3cs6L+kObP+vM7
6h/mjrqIemvijnzTRH0McUdBB3cUoO/+qg7u6DLl2B4Hd+Qh7sjv4I5k4o4C
Du7IuE73o4M70og7Mhz9mkLckd/Zr1GOHXD4kraH9tPZr22j43L6zwaqc5w+
8wvt5z+YY7v+Rf2a62/qItc/6Ut/HSr5p6B7vsxM/Vrz/v2wLip2grmjF5Mw
xy5/iHJs7WlD7NfiZ6Z+Ta28E/s1bxvmjhqdR1+qvpDnz363Dn0pfhb+zlrl
hsJ31nT+ztrrw6hPrk/ckW9+VjzeOc2IO1LqtUHdXYi4I6PxRMF/blGOHRi0
Tuizfqf1l5Uah4T7txmv/9VY4I7cPxJ3FBwncEdug7ijYGWBO3Ilb0f/HiKu
25+buCPjkdCvKbOIO/JmEuui8cwdtRXqIsNN/VrgnehLDyjHDuQUuaNm8l//
ll+KvlSfuCNloug/C4k7kl+Jup+4I62qOA7vuun6OrijDMQd6Q7uqDD1a55d
jvuauCPXaVEfRNyR+3dHn0XzZ6U/HL5BObbizLGJO/I4cmwX9WsuZ110lPod
Z79G3JHXWRcRd2Q4+zXKsf1OX1pL++P0n2XkA//9/do/6z//lC/9na4de0s5
ttqgCvZrvh+JOzLn38J+LfE84o6UfYWxX0s0h7gjz6fCyB1J4/10n2Z+gr7U
LQFxR96jI9B/rrQk7sjb6CHqqz5Qjm2kKYvHtfwp5dhmPy/qk3YQdxTIMRf1
912IO3J32i70U98Qd2S0F7ij4DHKsaXuAnekXqB1+/WCwrr9al7ijvQrAnek
NibuyNNM/M7acP4+RxUxxz5F3JE3pbiuyHnKsc3kYl5Um797PVDkjgoxdzRY
9J+DxB0FSog+M4q4I3OHqFci7sidXhxXVynHlluI+m7ijtwTRL0kcUfyWlEv
S9yRz8Ed+Yg7Mh3ckUHckeLgjoKUY7ud82eJO1IdObZC3JHpnCdymrbz388d
/V2O/c/2a/9TddG/xJf+TldWtCPuyJ8+DPu1UY2JO/JPmYm+1Doj9Wve80PR
f5o0Iu7IuFoQfUatwuvIPFyL+vV1xB1Jc5PjfvpSM3c0+hvUe64k7sjTYSTq
YWuJO1IbrUD9RWnq1+Tc+1BfVZi4I/8vAncUmOSl7dwXuCNdJ+5IbSdwR/J1
yrEDuYQcW01F3FEgRlzvKD/1a3oP8TtrPxJ35Lsl+lJ/Xu9oqehL92j+rHpH
7NcMnj/7m+hL3xJ3FOwu+s9n1K/JN0V9L3FH7uLi+GlJ3JHcy1H/EHfkmS3q
q4g7Urc5chvijgwHdxRDObb7qiNHIu4o6OCOPMQd+R3ckUbckeLIsXXijmRn
jk3ckctRF/3v4o5c/+Yc2/Uv6tf+X+ihf5R/QNeStSHuKND2BfrS2WuUY/vH
HkJfGvee58+WUdF/6p/kdfsLnRPmr2Ug7sgolw/3c+tA4o7Uqp0EP3nA82db
+FCPfEs5tvmFX+izphF3ZF4TuCNPN+KO1CKXUDfzEHckXRW4I/9JyrE9xYUc
29xI3JE7v5Bjq0WIO/J0E3PsUsQd+fqJ6x1N5O+sLRRz7F+JO/LnF/3nAeXY
gaqi/yjEHblSij5Tm7gjbb7jPVp22k48h58Qd2TUFfX8btKHi3pS4o5MB3fU
k7gjz15RDyPuSD4j6n7KsXUHdxQg7kh2cEcu6tdczhybuCPT0a8pxB2pjn5N
I+7IdM4ToRxb/69zR6vJr/5N3JHrP6Rf+7/ooX+U/4p+eQtxR9qBhOgzpRMQ
d6SfmIJ69cWUYxspXgnff4ymHNs9R8H9nFSY1zuaP0Dwq/nEHclTF6JeeD5x
R57pAneUtBBxR8HVAncUfEM5tpRSWLfft4bXO2oqcEdBD3FH7o0Cd6TnJO7I
/1hcn3Y5cUfGeqFfM2YTd+RuKc4TeU05tlLVwWMTd+RdJPpSHeKOArNEXxpJ
3FGwliMvIu5IPiLqMTR/VpHEcfKMcmyvKupe4o6UyaJem9c7cnBHUTR/Vj7i
qFuIOzIc3JFK3JHu4I6ClGO7HTm2SfNn3Y4cWyHuSP3v54420v784zn2v5U7
cv3vq4v+vb70d3rrNswdFfxV8J92xB25XemEPigbcUdaqu9QT1iPuKPgOYE7
Ou/n+bMVV6PePPEI8qXnAneUvxBxR/7VAnekrCbuyGgmckdzmTvqInBHssT9
2k2hX3PF5+9JjxBz7G6ev/6tHhffr4URd2TmEeuiTZRj6+fEfu00cUdSYtF/
3sq0/6aolybuSB8q+k814o4Cf4r6IuKO3BXEcTKZuCPf9466iLgj08EdXaYc
W3dwR17ijqSTjrqL+jW/gzsyaf6s5Jg/6yXuyOfgjhTijkznPBHKsXVHv2bQ
/FmPs18j7khx1kXEHen/H+OOXP8h/dq/Xd/9lObPSv1k3M+iS4k78j0WuKO7
24g78uafifqqrNSvqRME7sjVlL+z1uyo4DPjiDtSngvckecWzZ/1ZxPmzwbu
UY4tZxJybKMTcUf6SaFfk6oQd+S9Ka5Pe5fW7TePiO/X5hN3pFwRfakjcUe+
xmKO/ZJybLW96D93aN3+QA7RZ74h7si9VtQ78XpHKcVxsoa4I38jUb9L6/Z7
xzh8ibgj08EdhRF3JO936MQdyecc9c8TqitMh28Qd6Q4uCOFuCPD0a9JxB15
HTm2RtyR4ezXiDuSHHWRQTl24D+XO/qPyLHj/qP8b9YP9PH99e/gyKG4/y8m
EnckBwTuKMNlyrH1xQJ3pKXl7+hcEbij4Ffcry0QuCP/JOKOPN8L3JExhrgj
ZYi43tEnyrG9mpBja+cpxzbSiTx2H+KOlOUid5SL+jV5oFgX3aD5s8oh0Zf6
EXdkbBJ9qSFxR1Ir0X8OUI5tnhN1g7gjV0FxnKThfq2rqJck7kieLuqdeL2j
zY48irgjv4M7iuB1+x3ckUTckengjtzUrwUd/ZpO3JHf0a+pxB0FHP2ai7gj
47+fO/pnc+z/v1/7z9LF//3/qpv1rO9hVd0F38OSl/L3sLTHyXFdmrO9eD5P
z6mwLo37gYvX8dsRg9+jWZCJt5O9EHy/xlPwGn/Xr9n0QFzde/sC/z7aA9/B
MXpZ38GZthy24/84mf9u8nD8nnJq6zsUB6/B+l3m/tU8HzymOaxTEZT5Oxfa
oOHwnQt3Jus7F8XGw3cuvM9rs94pAtaZV0fk4fOT6DysZ6hX43XsXXcSwbqI
wQm8jr3m/xO/O1b4FG9Hnwzrkpl1eB1p7fIiOG/qmkSsN3sA6wK5OljrVAdT
wrpnZjlrneqvFsE61epEXifWtWI+nM9g3R58vKtWwHX3D2zN5znHZFg/Vi3J
61prRfPBOmmufda6te7lsG6t+v4Ha31ID6xb66qbjHX/Nrju3uM5eX+WP4Dz
7Mr+kddHGpMEzo+rs7Uu5eWtcP71Dta6lH+eh3Up1V3r+DzkmQfXXWnA68K5
jteEceWLOs/rwrVZB+tVaq9W8PbrB3CdcPM4b/+tDtdX2x/G+oud+L25pjVZ
b34Sv2vgtdaDqlQT14Pq9jmf57AHcF+7fmvJ+xNZAMZbMN5DPp/BjTAepMbW
ei9b0sD59He9wNe9/Ro8z6vP8vYjuuP9mzsJ61eP4P2b/if+u3U34niLHsXb
r/8CzrO8aimdZ6XdD3D/KssH0PkNNuuAvKg8kNcBzDQV3z9WG0bvJX3fBVHP
8oLeS3qH4noI3jmT+D6tOB/8wWy5hq9LgfUwTsyt1VhvcRuul5FOYr3RJxy3
qVPS+FPe43oOhncCjdfAMmE9h/ga8/mf+iAHm+QUz6euXBM5tA0fiAOR66qg
+6u95+O6nRXuC8+ESqxvSwH3hWvGUd5/dQuMW9/os+znT7fBeJBefGQfKJYQ
7gulb4DnHdzBeeKukVPJF8zTwjzxGT2J+9V6ncXrFehI8zSDY4V5mo1u0nsc
M3l8yEWVpLt4HO7NB/ejN/IPHoe798P49+rjWX9/ANfNLt2Fz0P9U3CfSjmb
8f0ycCX4ofdubx63vaujHyY4TPeJsk+Yl/q+I81L1TScl+oKjOHvo3QR5oWt
W7Gd76NCoEsvc7IPbAiA3ypKPz4PH3uB3yofE7Ke6jLcp2rbrHy8n6WD57t/
bAzfpw+ywnXXllbi+W7f+ZGfbHB6H+npE+NxbejI6yb9NB2vb4vHNG4DJTvg
eE5ajtffvoHz4Iya93n/j52E8RyokIPHc45XOJ7frOTjKmvg/dt0FV/HVW3B
f9QPJ3k8J4+E8exK9wWNZ+OtMI/mag++T8fgPBqtVUsaz76tAse+ogf5kjrx
mTDvZh7x7eYSgW8f47O+M47zbtQhS/k85ImGcR6s8RuP58Bh/M7ymo6sb7yN
4zltFT4/XV+Dj3n/yMfXvYMKzx0lQUYaz/I+gdvfMpTGn97Ng+eh8kwat+7m
RfD65t/L31UvXxt09+hUPJ5Pf7kvrq7ft9ZLPV4bnmv+n+/xcU07B/e1vv0l
X988BfD5teg0P0/D94NuVB5I94lbvo3zFDrPouerp0QRvF75vqX7V7q2DY/3
9/Q0nj25h+F1TDnWT/97W+SE5R6nedz+Mgaep56L8Vlv8ADu00D+sXy8Oy+C
X6kHh/LxPksJviSNn8/j+c5UfJ6Oa0PjxrsIOUNXWQ8/T98gZ+j6vCWNW3MP
cj6uc9/z+vljP8frO/MK3b+ekwL/M68hcYlq+kIwnoMPS/B1/3Y/fJ/OfBvO
171AxEHc/goet03O4ffp+lTi86OlhOevuiIT//5CQfA3LfkT9rGvx+B1n9SP
/MVsfQfPj/Ed71/SH/A8NNlA41krVRePN/VNGg9Stk74XK78hq9v/NLgY9ro
8ny8dwthvfrqEO9/g8twX+vbT1jj/CSMZ710DF/3PNnBx4wz2+g8+iamEdb7
7crPj/iNcTy3qUTj3FMyAo+3WG3+Lvnbi6g3q0XPayXdbDwPFzbS89ofPxFe
99U7rP6oKviY9u0dPt7+9/A7OxtHWeumPsR6MnN7vu7Sa+xfDn9jPb8MuC/c
P3flev54e3heKxvXsb+dn4Hn57VGPiDdKobHe7MDjX9peVo83htjyPeUTsVA
V/NJPM5/+oD90YjefN0TTcL+aL3L+t7HW/AB8+GXfB5WKzCezXvPeDyElUTf
G5iTxrnSYYcw32EZ+ayyOAUe16mK/LzuMkfQT9N4VhJ3wft9VHbm/VJfx/OQ
+w7vv3kf68/UWfm6j/0SjssnL+PrOOQ+3Nf6d0v5uJYMgOe1nvw3HucX7mD9
WeMtc9S9q+B13FyN19ufMBCPK1VpGs9KpSuoT6jNvvf4Fd4X40bQ81pO7cfj
vdKBntfesxlhnPveLeLjzZUUfExZcYCv48WHcF97JrXl87AwBTyXXccr8O9X
5cD+4rsc/FxbPhj7xBfLeN3v+N/hdR8Yj+vSpfvw/JRvTOPSmNMUz8P4/jSe
pT5f4XWfsIh8L1C0vtBPpeBx/mNNeI674zXm8/C6K37XL+0tPq4Or/F+Txvk
49pcGf3t5FEeD0cvY136oBXdP3qiB+jns3rQ/Sv/XByv4+JC5G/uSb/i8fZ7
Qz5mnNHw+g7rSc9x1fsMdDP/CR7nOxfh951HfeTjepwCjstfUuPr2/Ij+Jgx
bQAf77Y84Fda2xnW91U3wHNcG1Odxrl5o7cwj7IAP8fPzhO+Q1qGxrOW7Q2e
h1ffko/J+9Ph8W7NyfMIzheB8SyV+srqO6Lhea01H8vnoeIFGOfSMZ3Pw8Y3
mLPlLsfn4XppGM++oulYn9gMn9e5z9K4MQdMxHXsD7bi77GmfoDnwV+M9y/5
YDwPxybTuDXyNsTxXHwf+1jGSPTtMq/4uGo0xO+eDCrN+tf14XmtNzL4eHt8
wHzv9hEet/3vwrj1933K/WO58vi8bsh5hKdwRuw7fJXoPg0WaY7H9TgDjWfl
9m7U3+QifzO1a6jHL8TjfPE8vO5zNV6f7VUS5I5qbbXypTbwvNbP3+DjbZUM
jleJGMZ6pTSYJ79rxdc3n4T+1qEOj/9BV2H8B4uofH5qj4DntTZwBq/7dHse
Xveqzeh+N8qUwuPNyN8fNa9/icdbvhP5mzGoBOh606w8zn8pCDmburM7n4dS
a+B57W72no/rm6x4v3vTsD64J4xnpbL1nfUE9fB53S0xjXOj8170sWcDyE/9
OT7H+zdberrf5YoL8Xh7bqLntXa2Gx5v9sQ0zqWKN4X10m/ycWVwgY95f8/A
vv1FOXheSx0W8fV9khJ8TGm0gI9rx2R4XnvcBtddez/hOJ9m0njyXKuF43xX
Zrp/feFDhXXgP6fxLB/4HfV5ecjf/PXf4Xmo0on764Fb8Hh7l6LntbQ6C47z
gfP5PNTODT6mf9zDx5vCDT7mCWvB13dPSRjPytDS/Pts9bEf2ZeJfSD+TOyv
G40jH/H2aCvUaQ/Jd7Thh3GcvyhAPqDtb4nHG9OYxrNrZCk83nQjyPfUrB7Q
A6uT8jjv+AM8rz3pv7H60PHwvHbPuM7H2y4z5oTdHnJO2KIZjGfPq4Os5w2C
bvgVun8C557gOH+r0P3mN8vgcdVOzN+RLLMPr3vR6+Rj8uAxeLyfN6HntTns
JfbdtyOt918RMM71/G/5eu0qiu9Nyg9hvUhezO1beXmcz6iE70eK/sx1ac3j
8Lx2LS5E41zJ8ANexyvx6f41ly/G4yrxBefYP35AvZZMPuZ+nRGPN8VrWr/O
M0WG8SxvGsnHO+AZjueY+XxcFSS4f/1nS/D17d4exq3pT82//3EUPpdbb+Pn
8qppOG7T1aBxa/z6GI/3bBKuwxONwOvbow+NTz1NI3wuP19OfuVrfxz1FQ+5
LureFN/LPNDoOPXD2dFPOqej+8XTuI2QTz7n+v+n/UIu94nr/3gmnv/zqWi8
efMswvOvf8vfd7yfHHPp1kNpnAWjdCFPKMTPlfDyuH0tO13fYOosuP391ei+
NseXQf3Hh3QfGe0PC+e/HuexC9PjcelP+D5KuRT14tPpeWHM7YXn+UY03Udy
p9vC8+IIjWdDaYjn+eVzGs+ekSNx+x8f0flUlNvCd4Xi83fmVnxCPUcd9u1r
2/HvVk/KueiQ7Ojbp8P4PcuJzlgf+s/SOAw2Po77ectF4yFwpx2e/xkl6Dx7
fy6Hf/dYO64bEzdBfVYeOv/avFd4/qel5zqkyNe4/ey3aLy5rx/E402zj+ux
rOG4/d8q0PmXxsegfjENnX+t7hAcV99fp+ur910u9LNPuf45FQ+3czAV53j5
sgnj+Tj5iatmCRzPW+bQ/S6fm4vHO6ooP6favcDznMfk8fBuNO5PSQ/nZm+a
4ni7wt8jDCw/hbrehe5r87u8eLw9uA/R+3XA7S88RedZLXwE9XTXOYcfdhev
y4lnNN68vyzB8/BHTrqvfWc+w/HWLxfXjVMr4O8bajQPyPfhe+RPGq2mdWa8
21r+V7kU8X/neuwzg+uW2Z+wD/U+Zt8ePgmea+ajfaxPdUE947s8kJ8XFapA
fWtO5LrdtSQX1DmBxe34+a6NhOegq38+3h/1EPRHxut3vJ2qEuyPsnkl/773
AXyf/mah9d1tNzynPDU38d+9Xx7f42xrzdtpmgnqFj1DSdYrtMP3RMmsOi3i
G+xDN3/F2y9V7hz+3fN8fk62gfOsFb9u8TPZoC5SO0/mv3thEjx/PacG83P2
5wLYH30ay383QRQe108Kb2f9O6zHuqbn/fmtPr5/L8fPa634OHyvt203/75R
JuRGqu3i/b+VB3P1bP3590nbwXgIdmzG2zfrw3gINmjBuWvkPMwxxt6j55Hn
mwR4PxbITz5pvsXnoCtBFbq/9Jv4vDO/ycXnYeQ9vI7zX/P+56+GOVKSHHTe
pb1l0JfUaPLJ4Pf4HPSWW87HW/IGjsPcc3n7V0vj+5dGa7me394IrpfrfG4e
H8e3o189/ER+a8R3ob9tXcX+82AN5mmXmvP+VC+H1z2RzPqlEfi+YIvM+9l5
MIznQOFCPK7qN8ac8NZaOv+B0QXRD7t/4PebjVTQ9eRn+PyvHYh94rpLPB4W
VEXu5fPu/D2dIZ3xPHz4nf1ZOYTXfWkerkPqDYHz4Dn2Ex/v+tV4H538gf/u
zG/x/eaVEXxd5rtgHBrvhtFzyj3SxP0J/4r7n9MZcX+epOCcf5TwfLxwn7+v
kecgvsccX9G6HzPDddEKp+HztqA39tHbkvH1+m4z1tUnrtNz09tlDOyPv8VO
3n7xUvj+d/p2Pg9qPbh/XRe5z9GOTcXjTX2FnoPSDXwOuqY0pTpEajgTx6fq
5f1/PxSfC6W+5f3/dgD4gPmCv7+rFd6KPpBrJ51n37Wk+HdN671IdQX1nRLX
vVH4nNWqFOY6YeBV0IPb7vL58VyFvE7Om531U4nh/Ctln1s5VRfwDVeBJPze
v1QlPG/pjvC64l+vhP1079YtHvItXBd/nRl8XTa3Ad/Qv1thvdfojr5R/jO+
Xpt2o1+1ykHHI61+jXrz37lfaJIQx2eZn8lPpBYb8Ly9aMLXsXVz9JPoQrz/
i3UYt/J3hXj/a64AP5H13OzzI3qhn/x8nnzD07sz+saxk5ZvTEV+TDpn8XJd
wDdc8b/l+nZfDzz/SXfyOoE3I3Gc5ErK3+F6Nxzz24LjrefmEfAN1xEv/93A
j+AbwbU/8nF5MuK4zd2V3wuXvi/4WCLus5TsuD/zH/Lza11OvC7qCf7edv8j
mDcOL8v7maIi+nn0Z6wv9CEPUCAhX5dN/09p1xYSVRRFpyQIEWcqiggpKSmz
ghJKh6SkF/iIlDL7MDAFnVR0TEyzn0FrTJLxSdpjmsnIRyqpMGFqcTPJVKam
lD7KdMrStDRNLayE4Kz7s+5Pgb93hn322XufdfbeZ91zBxg38quRJ/ev5DiJ
sCEPj8jjuJ2zwe9+YRS3moFGyFenEp5IBVbhP01/Gdsh3gY8OTrK+8gmrcAT
zdtytoM5Se43Xic80S8KxbgzFubXlYai31JvZ7/M5iOvOOWu6PP34jzLeFCR
5y8HD7DyHetT9B76ZE4Tbqh+rpH7gd5kf5VDzqsNeZxv6MZxLnPnANvntwV1
maqO9SyXRNyqxuO5L6c1wy87VlHcFuoKYJ/WC9y3ibAgbmuyGU9aZ8V8Aova
WZ9pVzzfP89xMtMi8ER/aynbZzAVeNLRyPuyWzj0NGdwvm2X8/+Sx7wPzsg8
6igHn2O6rYV/HbnMc/5YK/DEkJPAcWvsxrgvarneKZD51cbLjCfu/sCTP6mK
84JSgSdShp3jpGcM34mozOZ87GIOxu0b4n5ac6LcT6tQ8KjTZB61L9dHp8PQ
H/v0he1f9QbfP631Yn3OdAk8aXi5UcEzaUI//1EX80z0qHcMWVFcf1XKvOvu
JuYVlIFfbbAucZA9V5vEPCfPebCeapPAE80eE+kplTRBfkwi4cn29fWI24kr
zLuOuyT8px82s/yvRQJP9O3jbIdhD/R7Y28wzvfpMO7JB4Qn1qcyv7qni3lu
2w7BL8EjjCfz0cAT5wpepyM1Ak88nwSzPllzDcLeDifr0466TDUeRHbWxMh8
7G91nG909MJe6hCOz2VZAjecDxtYn+AK5Mn3E5kXevgq/NhzjXBAihxA3pvw
jOUHjYr5Ol8v5nm1lQMHPrtxvNUfFzgQ7WPj50k5WKfFzFuWdq3D+Y5vJo97
NwXrzvWVYt+0C/9aQ43M/+zUQn/TFMsx3sO9nWpF/ZJejXs7p3xYzw9lYr1I
LnZFfzUN+Z56A8fhrzjcv+fJ/FUpUo99cOw2/9+SjO/xbf2uwBMV8GTYwuNq
d8L+JxR1h58B8TZ3hJ+HOEW8WX8McV4X0IJ9Rx/O9ok4hnw1XcFX9LqA+wPP
p7AcdSfyzIDnLGeoTehpjVXk7U1nUc9uVvAAb+4GTya/mecr9Yp7ulSNhf/b
B1P+jnWUKPO3qzpoH1RNzBYKO4dlLkj+ZPEg5OtceB/x3ivu04h2yV2Q/MAt
+4BLlRN8Du6fLN6XDzQl/Vv+X7ZMdnY=
      "]], {}}, {{}, {{
      {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], GeometricTransformationBox[InsetBox[
         FormBox[
          StyleBox[
           GraphicsBox[{
             {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
             {AbsoluteThickness[1.5], Dashing[{}], 
              CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
           StripOnInput->False,
           GraphicsBoxOptions->{DefaultBaseStyle->Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}],
          TraditionalForm], {0., 0.}, Automatic, Scaled[
         9.75]], {{{-1.8, -1.5}}, {{-1., -1.7}}, {{-1.5, -1.}}, {{-1., -1.}}, \
{{-0.5, -1.2}}, {{-1., -0.7}}}]}, 
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], GeometricTransformationBox[InsetBox[
         FormBox[
          StyleBox[
           GraphicsBox[{
             {GrayLevel[1], 
              PolygonBox[
               NCache[{
                Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                 Offset[{2 3^Rational[1, 2], -2}]}, {
                Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                 Offset[{3.4641016151377544`, -2}]}]]}, 
             {AbsoluteThickness[1.5], Dashing[{}], 
              JoinedCurveBox[NCache[
               Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                  Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
                Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                  Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
               CurveClosed->True]}}],
           StripOnInput->False,
           GraphicsBoxOptions->{DefaultBaseStyle->Directive[
             PointSize[0.012833333333333334`], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]]}],
          TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
        1.}}, {{1.7, 1.}}, {{0.5, 2.}}, {{0.1, 0.3}}, {{0.5, 1.}}, {{0.6, 
        1.3}}}]}}, {
      {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, 
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}, {}, {}}, {
      {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, 
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}, {}, {}}}, {{}, {}}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{-2, 2}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8086032721319447`*^9, 3.80860328183541*^9}, {
   3.808660348701911*^9, 3.8086603530116043`*^9}, 3.8086677284217496`*^9, 
   3.808667891282298*^9, 3.80869308891854*^9, 3.808835623093526*^9, 
   3.808936992322829*^9, {3.808937110968424*^9, 3.8089371502729015`*^9}, {
   3.8095665924351606`*^9, 3.8095666096951084`*^9}, 3.80961342738369*^9},
 CellLabel->"Out[7]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
yFdfAtkNlLbTl8vLaM7egKsHVDXyuVJ2k9fGyWvd75YK8U20pPXiMrdxJrZ1
auieXLHt56B0SlCzGgWVnjFp45dUeign5X2ejr0N80J+E4d5mt+wME+1DS0S
mVe2nJrFNzE5O1ltZXsfw6m9iJWt7ue8hrNayG0mr4Ywv1FYSbwp2T5TLyux
qEiVj52ek98kaX0TZ2aVyexZQ+cHlWQ3jTa7qZCF5UxpJ+Vj0nIYWFwlnWPu
Q7cJpHRuKRHxFIGIaDFptFtP51OepMZqMaQwaWDlc5ZHG4jN4nkI65PW4zYB
TUSkE1qNuYdzSnc+A4t36wcJll6EiFieiS7o3AaYu5eIaHKb06qI72Dk9pTa
qOSKUMXj2PH1bZN5dwnQPeebf5Ht2CM9y3jZMOOb/4sl8VTX2Xbq7XTK0XX+
C8Gh3Y8yPE9gWrMYQfcrI/lBwzcHW58Itt7WGSESQvTXfJWrL4HPw6GFgu49
nfooq+nHsxrP4oziAJzTq4jpxsCbdFQuDDpwZrA+0MGkfJHNIvTyDwhYex+9
nJeqNIcZnN4R8/APCNZ+pIA0tj0aGtUpqZCjDmwO8yjZJ7wwak3Oeh1ymDcJ
1n495jCdiDdTUalqLb1oqSph7fOiOs9hbFQPzGES1EFlq1QTUx9SP+AAzNq2
YCoZO7WF7XUJBFOKffcPZYPKnL47BZUdTvru32I9GNt3J30YB0o8x+3DxMNW
ShMkUGJHPOfZaAHSeXBmv5hUpnHKYmmCmjfViSmLkmmCVEmNayfY5qMPYFAU
VCakLGACu5mY7UlZwha7FDLtM8pBCyBV6R8beV3LWZqlbXc1Xn1ukKpPQRGh
FDFwf48mThZW/kSy+3QYIQa2kT3AszFyz3M1YuPqk2rE/o2xpOhcVXfX4cx8
CbvrqzByQwXaCmfkRqw+O1FZXxUjBmahCbSB14uVr7j6ZPpQ2StZjD7UmaUz
lcTGaxWn4f3ENHy9Z6+ptfCQ/KSOqpO20i0ePpaCtVZ+FpGCJVUnl4KNq84b
UQTcjk7vzKk630D5mzeiDb9mu8pq3K6yGfKTzcj0hnM6WPoPuotJwdr8JFQK
NgQPH5ifJNlJ/nKVgOFREsSHla43rYE3q/IpSiNtnmtBjx20HTPz9leZvlER
j+D7CGKv+7Pdc4MEajdJUSQ8mLOzdJKr75faWSpVmdg8v9aynZ6OdpYaajfY
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
8nmpF7mD/kXpDxxHPlp72/8HXQWj9Q==\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"08ff51ea-c509-47f6-bce4-5b0409831bf8"]
}, Open  ]],

Cell[BoxData["9"], "Input",
 CellChangeTimes->{
  3.8096376872729387`*^9},ExpressionUUID->"b9831023-c607-42c6-ae52-\
32a5448655fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"{", 
   RowBox[{"Association", "[", 
    RowBox[{"\"\<LossPlot\>\"", "\[Rule]", " ", 
     RowBox[{"Net2", "[", "\"\<LossPlot\>\"", "]"}]}], "]"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8086678953918843`*^9, 3.808667911402931*^9}, {
  3.808668056031926*^9, 3.8086680749886603`*^9}, {3.808835638072215*^9, 
  3.808835725844897*^9}, {3.808835766808606*^9, 3.808835769474591*^9}, {
  3.8096134109141693`*^9, 3.8096134119965467`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"fc9d5261-c48b-4956-9c8b-af97759a823f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["LossPlot" -> GeneralUtilities`TightLabeled[
          Graphics[{
            AbsoluteThickness[1.25], {{
              Hue[0.083, 1., 1.], 
              Line[CompressedData["
1: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
               "]]}, {}}, {{
              Hue[0.59, 0.7, 0.75], 
              Line[{}]}, {
              AbsolutePointSize[4.5], 
              Hue[0.59, 0.7, 0.65], 
              Point[{}]}}}, Prolog -> {{
              Text[200, 
               Offset[{-2, -2}, {200., 0.23500000000000001`}], {1., 1.}], 
              Text[400, 
               Offset[{-2, -2}, {400., 0.23500000000000001`}], {1., 1.}], 
              Text[600, 
               Offset[{-2, -2}, {600., 0.23500000000000001`}], {1., 1.}], 
              Text[800, 
               Offset[{-2, -2}, {800., 0.23500000000000001`}], {1., 1.}], 
              Text[1000, 
               Offset[{-2, -2}, {1000., 0.23500000000000001`}], {1., 1.}]}, {
              Text[
               Superscript[10, "-3"], 
               Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
              Text[
               Superscript[10, "-2"], 
               Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
              Text[
               Superscript[10, "-1"], 
               Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
              Text["1", 
               Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
           PlotRange -> {{0, 1000.1666666666666`}, {-3.3350000000000004`, 
             0.23500000000000001`}}, ImageSize -> {302, 182.}, 
           GridLines -> {{200., 400., 600., 800., 1000.}, {{-4., 
               GrayLevel[0.3001]}, {-3., 
               GrayLevel[0.3001]}, {-2., 
               GrayLevel[0.3001]}, {-1., 
               GrayLevel[0.3001]}, {0., 
               GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
           Full, BaseStyle -> {
            FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
             GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 
             6}, PlotRangePadding -> None, PlotRangeClipping -> True, 
           Background -> GrayLevel[1], FrameStyle -> GrayLevel[0.5], 
           ImagePadding -> 1, FrameTicks -> None], {
          None, "loss", "rounds"}]]}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[76.80000000000001], 
           TypeSystem`PackageScope`UnknownShape[False]]], 1, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], TypeSystem`AnyType, 1], 1], "Meta" -> 
     Association["ID" -> 269427805517608], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`AtomShape[10], "Type" -> 
     TypeSystem`AnyType, "Path" -> {1, 
       Key["LossPlot"]}, "BaseIndices" -> {1, 1}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 2, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 4], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {1, 
     Key["LossPlot"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GridBox[{{"", 
                    ItemBox[
                    "\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
                    RotationBox[
                    ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], 
                    BoxRotation -> 1.5708], 
                    GraphicsBox[{
                    AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    LineBox[{}]}, {
                    AbsolutePointSize[4.5], 
                    Hue[0.59, 0.7, 0.65], 
                    PointBox[{}]}}}, Prolog -> {{
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    Offset[{-2, -2}, {200., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["400", TraditionalForm], 
                    Offset[{-2, -2}, {400., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["600", TraditionalForm], 
                    Offset[{-2, -2}, {600., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["800", TraditionalForm], 
                    Offset[{-2, -2}, {800., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]], 
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    Offset[{-2, -2}, {1000., 0.23500000000000001`}], 
                    ImageScaled[{1., 1.}]]}, {
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -3.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -2.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -1.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], 
                    ImageScaled[{0, 0.}]]}}, 
                    PlotRange -> {{
                    0, 1000.1666666666666`}, {-3.3350000000000004`, 
                    0.23500000000000001`}}, ImageSize -> {302, 182.}, 
                    GridLines -> {{200., 400., 600., 800., 1000.}, {{-4., 
                    GrayLevel[0.3001]}, {-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                    AspectRatio -> Full, 
                    BaseStyle -> {
                    FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                    PlotRangeClipping -> True, Background -> GrayLevel[1], 
                    FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, 
                    FrameTicks -> None]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.4]}], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "cefbd6df-fbf9-4b11-83b3-5169711936d0"][{1, 
                 Key["LossPlot"]}, "Item", False], "Mouse"], 
              ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{343., {125.5, 131.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{343., {125.5, 131.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.808668076207017*^9, 3.8086931650580645`*^9, {3.8088356334833207`*^9, 
   3.8088356420521717`*^9}, {3.808835715470274*^9, 3.8088357216529193`*^9}, 
   3.8088357701890593`*^9, 3.809566613538456*^9, 3.80961343183265*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"5877af03-e03f-4122-800d-3d38f67a3a56"]
}, Open  ]],

Cell["10", "Text",
 CellChangeTimes->{{3.80866808148814*^9, 3.808668181179972*^9}, 
   3.809391229905999*^9, 3.8095664472972155`*^9, {3.8096376960832076`*^9, 
   3.80963769617691*^9}},ExpressionUUID->"e0593fad-2fa9-4fe7-aed6-\
44b7942fa6b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Net2", "[", "\"\<TrainingNet\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8095666221030283`*^9, 3.80956663207594*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"90a2e36f-af4f-43bd-ac85-fa756f2e7a37"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Net\"", 
                    
                    Offset[{0, -15}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"LossNet1\"", 
                    
                    Offset[{0, -13}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, StripOnInput -> 
                    False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}]}, StripOnInput -> False, FontSize -> 
                    8, FontWeight -> "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"1"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"1"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999999999993`,
                     6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"2"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999732051023`,
                     1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"1"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"1"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12, 12}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Net\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    Hue[0, 0.7, 0.9]], 
                    FaceForm[
                    RGBColor[
                    0.9333333333333333, 0.5133333333333334, 
                    0.5133333333333334]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{10, 10}, {-0.9999999732051026, 
                    1.0000000267948967`}]]}, 
                    InsetBox["\"MS\"", 
                    
                    Offset[{0, -1}, {-0.9999999732051026, 
                    1.0000000267948967`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"LossNet1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "MeanSquaredLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["LossNet1", Bold], 
                    Style[
                    MeanSquaredLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 8, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageSize -> {221.0000014737193, 101.99999999999997`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    Part[
                    Association[
                    "Nodes" -> 
                    Association[
                    "Net" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`SymbolicRandomArray[
                    NormalDistribution[0, 2^Rational[-1, 2]], {1, 2}], 
                    "Biases" -> NeuralNetworks`SymbolicRandomArray[
                    NeuralNetworks`Private`NNConstantDist[0], {1}]], 
                    "Parameters" -> Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Tanh, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "LossNet1" -> 
                    Association[
                    "Type" -> "MeanSquaredLoss", "Arrays" -> Association[], 
                    "Parameters" -> Association["$Dimensions" -> {1}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT], 
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "LossNet1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "LossNet1", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "LossNet1", "Outputs", "Loss"]}], 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "LossNet1"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "LossNet1"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[], {}], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {230., {22.75, 28.75}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8095666325537376`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"2a45ac0b-5e3f-4f7b-8547-17cf82414f47"]
}, Open  ]],

Cell[BoxData["11"], "Input",
 CellChangeTimes->{{3.8096377018630686`*^9, 
  3.809637702050523*^9}},ExpressionUUID->"999312d0-17bd-4b5e-8f78-\
4b14cc2da841"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Net2", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.80866791748355*^9, 3.8086679262728*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"12b96817-1c5d-49ac-b4f2-2cca75462bb7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ArraysLearningRateMultipliers\"\>", 
   ",", "\<\"BatchesPerRound\"\>", ",", "\<\"BatchLossList\"\>", 
   ",", "\<\"BatchMeasurements\"\>", ",", "\<\"BatchMeasurementsLists\"\>", 
   ",", "\<\"BatchSize\"\>", ",", "\<\"BestValidationRound\"\>", 
   ",", "\<\"CheckpointingFiles\"\>", ",", "\<\"ExamplesProcessed\"\>", 
   ",", "\<\"FinalLearningRate\"\>", ",", "\<\"FinalPlots\"\>", 
   ",", "\<\"InitialLearningRate\"\>", ",", "\<\"InternalVersionNumber\"\>", 
   ",", "\<\"LossPlot\"\>", ",", "\<\"MeanBatchesPerSecond\"\>", 
   ",", "\<\"MeanExamplesPerSecond\"\>", ",", "\<\"NetTrainInputForm\"\>", 
   ",", "\<\"OptimizationMethod\"\>", ",", "\<\"ReasonTrainingStopped\"\>", 
   ",", "\<\"RoundLoss\"\>", ",", "\<\"RoundLossList\"\>", 
   ",", "\<\"RoundMeasurements\"\>", ",", "\<\"RoundMeasurementsLists\"\>", 
   ",", "\<\"RoundPositions\"\>", ",", "\<\"SkippedTrainingData\"\>", 
   ",", "\<\"TargetDevice\"\>", ",", "\<\"TotalBatches\"\>", 
   ",", "\<\"TotalRounds\"\>", ",", "\<\"TotalTrainingTime\"\>", 
   ",", "\<\"TrainedNet\"\>", ",", "\<\"TrainingExamples\"\>", 
   ",", "\<\"TrainingNet\"\>", ",", "\<\"TrainingUpdateSchedule\"\>", 
   ",", "\<\"ValidationExamples\"\>", ",", "\<\"ValidationLoss\"\>", 
   ",", "\<\"ValidationLossList\"\>", ",", "\<\"ValidationMeasurements\"\>", 
   ",", "\<\"ValidationMeasurementsLists\"\>", 
   ",", "\<\"ValidationPositions\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8086679265050554`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"2013ada7-ea41-4bc9-bfbb-e04f5915b002"]
}, Open  ]],

Cell[BoxData["12"], "Input",
 CellChangeTimes->{{3.809637768954232*^9, 
  3.8096377690324183`*^9}},ExpressionUUID->"c32a8ac0-6ffe-4858-83ec-\
56d77f3a1fbc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Net2", "[", "\"\<OptimizationMethod\>\"", "]"}]], "Input",
 CellChangeTimes->{3.8086681959814415`*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"feb39492-9e59-4d43-b99f-320427633336"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ADAM\"\>", ",", 
   RowBox[{"\<\"Beta1\"\>", "\[Rule]", "0.9`"}], ",", 
   RowBox[{"\<\"Beta2\"\>", "\[Rule]", "0.999`"}], ",", 
   RowBox[{"\<\"Epsilon\"\>", "\[Rule]", 
    FractionBox["1", "100000"]}], ",", 
   RowBox[{"\<\"GradientClipping\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"L2Regularization\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"LearningRate\"\>", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"\<\"LearningRateSchedule\"\>", "\[Rule]", "None"}], ",", 
   RowBox[{"\<\"WeightClipping\"\>", "\[Rule]", "None"}]}], "}"}]], "Output",
 CellChangeTimes->{3.808668196536065*^9, 3.808693176782133*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"19b9d963-5fce-4895-81fa-0c84b243c229"]
}, Open  ]],

Cell[BoxData["13"], "Input",
 CellChangeTimes->{{3.8096377836711297`*^9, 
  3.809637783780527*^9}},ExpressionUUID->"1bd9a85c-c9a9-454e-8664-\
29d4f7d51f7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Net3", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{
    RowBox[{"NetChain", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LinearLayer", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", " ", "2"}]}], "]"}], ",", 
       RowBox[{"ElementwiseLayer", "[", "\"\<SoftSign\>\"", "]"}]}], "}"}], 
     "]"}], ",", "TrainData", ",", "All", ",", 
    RowBox[{"LearningRate", "\[Rule]", "0.01"}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<TrainingSpeed\>\""}], ",", 
    RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"RandomSeeding", "\[Rule]", "88888"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "\"\<Real64\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "\[Rule]", "\"\<ADAM\>\""}], " ", ",", 
    RowBox[{"LossFunction", "\[Rule]", 
     RowBox[{"MeanSquaredLossLayer", "[", "]"}]}], ",", 
    RowBox[{"BatchSize", "\[Rule]", "5"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "1000"}], ",", 
    RowBox[{"TrainingProgressMeasurements", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<MeanDeviation\>\"", ",", "\"\<MeanSquare\>\"", ",", 
       "\"\<RSquared\>\"", ",", "\"\<StandardDeviation\>\""}], "}"}]}]}], " ",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.8087808523743935`*^9, 3.8087808835408063`*^9}, {
  3.8087809548665648`*^9, 3.8087809599651756`*^9}, {3.808781046098822*^9, 
  3.8087810772032595`*^9}, {3.808781119603069*^9, 3.8087811424455695`*^9}, {
  3.8087817767604027`*^9, 3.808781811722508*^9}, {3.808835216842917*^9, 
  3.8088352304327717`*^9}, {3.8088387673309097`*^9, 3.808838791221243*^9}, {
  3.808838838504693*^9, 3.808838863734335*^9}, {3.8095670386734543`*^9, 
  3.8095670414174957`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"bcd1824c-da22-48fa-9f70-56fa04c8cf3b"],

Cell[BoxData[
 FrameBox[GridBox[{
    {
     ItemBox[
      FrameBox[
       StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
        StripOnInput->False,
        FontSize->12],
       FrameMargins->{{10, 5}, {-4, 2}},
       FrameStyle->None,
       StripOnInput->False],
      Alignment->{Left, Bottom},
      Background->RGBColor[0.96, 0.96, 0.96],
      Frame->{{False, False}, {True, False}},
      FrameStyle->Opacity[0.1],
      ItemSize->{Automatic, 1},
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"summary\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "3000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "1000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"time:\"", "\"3.9s\""}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"examples/s:\"", "3850"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"data\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"training examples:\"", "12"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"processed examples:\"", "15000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"method\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "5"}, 
               "RowWithSeparators"], "\"CPU\""},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"round\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"2.25\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], 0.022496226002927527`, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"res. mean dev.:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"MeanDeviation\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "MeanDeviation"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"1.42\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], 0.14184783332286618`, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"res. mean sqr.:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"MeanSquare\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "MeanSquare"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"2.25\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], 0.022496226002927527`, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"res. r\.b2:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"RSquared\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "RSquared"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"9.77\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], 0.9774033444167023, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"res. s.d.:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{
                    "\"Measurement: \"", "\"StandardDeviation\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "StandardDeviation"}]}], 
                  "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"1.5\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], 0.14998741948219366`, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            ItemBox[
             
             DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
              NeuralNetworks`Private`NetTrain`plotList$$ = {
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[{}]}, {
                    AbsolutePointSize[4.5], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[{}]}}}, Prolog -> {{
                    Text[200, 
                    Offset[{-2, -2}, {200., 0.22}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 0.22}], {1., 1.}], 
                    Text[600, 
                    Offset[{-2, -2}, {600., 0.22}], {1., 1.}], 
                    Text[800, 
                    Offset[{-2, -2}, {800., 0.22}], {1., 1.}], 
                    Text[1000, 
                    Offset[{-2, -2}, {1000., 0.22}], {1., 1.}]}, {
                    Text[
                    Superscript[10, "-1"], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
                 PlotRange -> {{0, 1000.1666666666666`}, {-1.82, 0.22}}, 
                 ImageSize -> {302, 182.}, 
                 GridLines -> {{200., 400., 600., 800., 1000.}, {{-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {-1.6989700043360185`, 
                    GrayLevel[0.8501]}, {-1.3979400086720375`, 
                    GrayLevel[0.8501]}, {-1.2218487496163564`, 
                    GrayLevel[0.8501]}, {-1.0969100130080565`, 
                    GrayLevel[0.8501]}, {-0.6989700043360187, 
                    GrayLevel[0.8501]}, {-0.39794000867203755`, 
                    GrayLevel[0.8501]}, {-0.22184874961635626`, 
                    GrayLevel[0.8501]}, {-0.09691001300805638, 
                    GrayLevel[0.8501]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "loss", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[{}]}, {
                    AbsolutePointSize[4.5], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[{}]}}}, Prolog -> {{
                    Text[200, 
                    Offset[{-2, -2}, {200., 1.0605}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 1.0605}], {1., 1.}], 
                    Text[600, 
                    Offset[{-2, -2}, {600., 1.0605}], {1., 1.}], 
                    Text[800, 
                    Offset[{-2, -2}, {800., 1.0605}], {1., 1.}], 
                    Text[1000, 
                    Offset[{-2, -2}, {1000., 1.0605}], {1., 1.}]}, {
                    Text[
                    ScientificForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    ScientificForm[0.5], 
                    Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
                    Text[
                    ScientificForm[1.], 
                    Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
                 PlotRange -> {{0, 1000.1666666666666`}, {-0.0105, 1.0605}}, 
                 ImageSize -> {302, 182.}, 
                 GridLines -> {{200., 400., 600., 800., 1000.}, {{0., 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {1.1, 
                    GrayLevel[0.8501]}, {1.2, 
                    GrayLevel[0.8501]}, {1.3, 
                    GrayLevel[0.8501]}, {1.4, 
                    GrayLevel[0.8501]}, {1.5, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.5, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {1.5, 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "residual mean absolute", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1:eJw1mAk4lO33x/FSryVpkRQlIkLaRXKfFNqFUmSXolSI7NtgzBhUlmbMMDPM
2PetkKTFkqUkiRZFWqS0WHpT9H/G7/67XJdrzPPMc59zvt/P91yzyvmChauI
kJCQlrCQkODv//+ozS+s4LwbRV4+bolhdyRgiRRqExZ9j18vg0ZN2zA2bwAd
PfawaOWC1VA8qKcRNqcfv78WhpPiVMjnnqPmPRE3v1avh7tHLMyCNXvx9Zth
R5vxzfvOPeit63KumbsuKAvzHzpUdOP79WHQpO/ZfwefoL+kqqgSeUNY2v3+
9SvlLvx5AIstzs0sVHqMpDtzKue6GoHhnRUSy+068efvhtC909t5to9QWv94
tu4tY7iSuOJZ+9cO/DxT0EtNSxTPaUdrv+xMPS27F3YYyHKkwtrw8/fBjtJT
HW1eraj6dwKNfu4ALLvZf8s2/QE+zyH4dEf4TlFvCzKReBnS3GgGyVbSATTR
Fny+w0Bh7Sz4atiMzsQtJj7CHHItVY+9oTTh81qA99/0kuv9jahs0Xbi1xI+
PdnZmHu0EZ//CHhs0T3D6b6P/mM65Wt+OAKaWqQrN0zu43qOQoTJcdehhnsI
KVN4u5KsgDFhqjxidA/Xdwxqgl55UNrvInJecdoJdBxGVT/zfc/exfVag/hx
ve1t0ndRx/qnKRdHrOF5vI6+Y+4dXL8NpM01i441uYNkZxtwApyn9KsHhxtw
P2zhI19ewflqA7KdPYAdUPKU77nsacD9sYfAvWlK50QaEK9J0BB7UHeVn091
u4375QD7+kMfSHfVowmimuGDjlDqLrRyuVE97p8jWPzdozJRfQsxPrXWTKg4
QZfKDvkfxrdwP50gcWTMV7S3Dhmss78uPOUEyYE5ukMn6nB/nUFEb0fG0qGb
6LXX9/J5nc5gc0VT6R+vm7jfLjCPXfxmq8hNFCk4brYLrF2xrvFCVi3u/0kY
WHXv5tj+WrTml1yhavBJCK1StNP5UIPncRIaNqb0foyqQa0GBbkbLFwht/4j
+7ZaDZ6PK9zdvczvcms1Oh9umLVD/RQMhNWxTEKr8bxOgRDTgv9iUzVacP9x
xt6ZU5B8x+tY6esbeH6ngb+DunV//A1UNdeVfbT7NFRN2/xRNbyB5+kGbjoG
9m++XUfH9wtO5Aa+JJp9ael1PF93mLfrbZOO13X0RzCucHcI9lpybUbjOp63
O7wPzE3UHqpCnK4VyQFWZ8BjNOX5T04Vnv8Z+LVt+Ia2fRXataT8SrTWWZj/
tMl7TK0K6+EseOt2z1X8XoneWxvHXxXxALWW0w/+lldifXjAvYk3Y3p+lSg2
vZea3ku8H7aEbWpQifVyDjLN57nViVQi7YGzREnnoLzn5uaergqsn/NwakRq
Zj6/Aj1eLfjPeVjnnvL3+7kKrKfzEJ+zsc9BrwL9T64XoCg2nCk+pwLr6wLo
+JHblLvLkVTPwvpTSz2hXpUhyc4rx3rzhITfLmaHwstRv59tnUekJ1S/mu9Q
cLgc688TXtY0acUpl6NS+exa71FPmLShZutNlGE9eoHbYvKuuJYyJLja39oL
nO9uWyrBK8P69ILhbZIhK0LLkKWd3o3Q+14wZfSvnf6RMqxXL4jQvpWsqVmG
VAXl6XjDVpak+n6RMqxfb/B+9Ygn+qIU/eS2V8QyvUFc41iKcU0p1rM3CEVd
MTZilKIWI2JAYhdh9z0nXY53Kdb3RWhidTR5HixFzCGH0mueF0HO+47YXo1S
rPeL4L91/wIrsVLkIRDUi4twWPbE9pKHJVj/PuDjKJR8IqkEGaqPFWaa+IDs
SdMiPbMS7AcfqG7uyDeUKkHzBQYo84H7iaMhH1qLsT98IH9ya2cltRjNjlfB
F6RWvRILtCzGfvEFLeNtAS8Vi1HFPKLgGF9I1K2UZ7wuwv7xBQ+eVJUUrwhF
E6et/eELUQ5t496ni7CfLsHT98tadmgVIStzF36D3SWQfR7h4TBViP11CbyO
/cmofFCIBMdvarkELe/2vll2tRD77RK8UWsvI1sXoqnkSW77Jj+4+q6+VFal
EPvPD0xEXo+qfSlA7VuB08X2A8rBuaFdtwuwH/3gXTP/cVRiAWIL5C3uDxOM
shtKDgXYn/5gEyneIq1VgC4EPmH1+/gD12Kh/7Vf+div/pA/pz8+riUf7VRQ
ZA699gc3M62Ke+x87N8AsOf12cn45qNF9acYn/YFwLdDquJk43zs5wAIl9wX
67kkH70jxvutKgASyzSsdD/mYX8HgKH4AcnXtXmIEFvypFIgTCQ/vbQuOQ/7
PRBmjLyPJZ7LQ4Ju/aEFguehv8W9O/Ow/wOh/ffEuPuSPGQjsPfPQBgwXxIa
PJKLeRAEq9eLmsjeyUVaH3ou/+scBO/0ZX5KpOdiPgSBNp9l1xOQi6YpSgnS
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
vn9y106RoqP/A6uu5Bc=
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[{}]}, {
                    AbsolutePointSize[4.5], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[{}]}}}, Prolog -> {{
                    Text[200, 
                    Offset[{-2, -2}, {200., 1.1615000000000002`}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 1.1615000000000002`}], {1., 1.}], 
                    Text[600, 
                    Offset[{-2, -2}, {600., 1.1615000000000002`}], {1., 1.}], 
                    Text[800, 
                    Offset[{-2, -2}, {800., 1.1615000000000002`}], {1., 1.}], 
                    Text[1000, 
                    Offset[{-2, -2}, {1000., 1.1615000000000002`}], {1., 
                    1.}]}, {
                    Text[
                    ScientificForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    ScientificForm[0.5], 
                    Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
                    Text[
                    ScientificForm[1.], 
                    Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
                 PlotRange -> {{
                   0, 1000.1666666666666`}, {-0.011500000000000002`, 
                   1.1615000000000002`}}, ImageSize -> {302, 182.}, 
                 GridLines -> {{200., 400., 600., 800., 1000.}, {{0., 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {1.1, 
                    GrayLevel[0.8501]}, {1.2, 
                    GrayLevel[0.8501]}, {1.3, 
                    GrayLevel[0.8501]}, {1.4, 
                    GrayLevel[0.8501]}, {1.5, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.5, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {1.5, 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "residual mean square", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[{}]}, {
                    AbsolutePointSize[4.5], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[{}]}}}, Prolog -> {{
                    Text[200, 
                    Offset[{-2, 1}, {200., -0.16150000000000003`}], {
                    1., -1.}], 
                    Text[400, 
                    Offset[{-2, 1}, {400., -0.16150000000000003`}], {
                    1., -1.}], 
                    Text[600, 
                    Offset[{-2, 1}, {600., -0.16150000000000003`}], {
                    1., -1.}], 
                    Text[800, 
                    Offset[{-2, 1}, {800., -0.16150000000000003`}], {
                    1., -1.}], 
                    Text[1000, 
                    Offset[{-2, 1}, {1000., -0.16150000000000003`}], {
                    1., -1.}]}, {
                    Text[
                    ScientificForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    ScientificForm[0.5], 
                    Offset[{3, 0}, {0, 0.5}], {-1, -1.}]}}, 
                 PlotRange -> {{
                   0, 1000.1666666666666`}, {-0.16150000000000003`, 1.0115}}, 
                 ImageSize -> {302, 182.}, 
                 GridLines -> {{200., 400., 600., 800., 1000.}, {{-0.5, 
                    GrayLevel[0.8501]}, {-0.4, 
                    GrayLevel[0.8501]}, {-0.3, 
                    GrayLevel[0.8501]}, {-0.2, 
                    GrayLevel[0.8501]}, {-0.1, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {-0.5, 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {0.5, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "R-squared", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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

                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[{}]}, {
                    AbsolutePointSize[4.5], 
                    Hue[0.59, 0.7, 0.65], 
                    Point[{}]}}}, Prolog -> {{
                    Text[200, 
                    Offset[{-2, -2}, {200., 1.111}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 1.111}], {1., 1.}], 
                    Text[600, 
                    Offset[{-2, -2}, {600., 1.111}], {1., 1.}], 
                    Text[800, 
                    Offset[{-2, -2}, {800., 1.111}], {1., 1.}], 
                    Text[1000, 
                    Offset[{-2, -2}, {1000., 1.111}], {1., 1.}]}, {
                    Text[
                    ScientificForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    ScientificForm[0.5], 
                    Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
                    Text[
                    ScientificForm[1.], 
                    Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
                 PlotRange -> {{
                   0, 1000.1666666666666`}, {-0.011000000000000001`, 1.111}}, 
                 ImageSize -> {302, 182.}, 
                 GridLines -> {{200., 400., 600., 800., 1000.}, {{0., 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {1.1, 
                    GrayLevel[0.8501]}, {1.2, 
                    GrayLevel[0.8501]}, {1.3, 
                    GrayLevel[0.8501]}, {1.4, 
                    GrayLevel[0.8501]}, {1.5, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.5, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {1.5, 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "standard deviation", "rounds"}]}}, 
              TagBox[GridBox[{
                 {
                  DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 5, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["residual mean absolute", 
                    Column[{
                    Row[{"Measurement: ", "MeanDeviation"}]}]], 
                    Tooltip["residual mean square", 
                    Column[{
                    Row[{"Measurement: ", "MeanSquare"}]}]], 
                    Tooltip["R-squared", 
                    Column[{
                    Row[{"Measurement: ", "RSquared"}]}]], 
                    Tooltip["standard deviation", 
                    Column[{
                    Row[{"Measurement: ", "StandardDeviation"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 5, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}], 
                    StandardForm],
                   ImageSizeCache->{250., {7., 13.}},
                   TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]},
                 {
                  DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                   ImageSizeCache->{314., {94., 99.}},
                   TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Center}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              DynamicModuleValues:>{}],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"},
           {
            ItemBox["\<\"\"\>",
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          ColumnsEqual->False,
          
          GridBoxAlignment->{
           "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {False, {
               Opacity[0.15]}, False}},
          GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], 
              Offset[1.1199999999999999`], {
               Offset[1.75]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.8]}, 
              Offset[0.2]}}],
         "Grid"],
        FrameMargins->{{10, 10}, {10, 5}},
        FrameStyle->None,
        StripOnInput->False],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Alignment->Center,
      BaseStyle->{
       FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
        NumberMarks -> False, Deployed -> False},
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.5599999999999999]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], 
       Offset[0.8], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Background->GrayLevel[1],
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.85],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.8087808910637054`*^9, 3.8087809649078817`*^9, 3.808781063235962*^9, {
   3.808781120759035*^9, 3.8087811474145*^9}, 3.8088387975520587`*^9, 
   3.80883887016453*^9, 3.8088395964400225`*^9, 3.8088486932487164`*^9, 
   3.8088500436861997`*^9, 3.808937171049426*^9, 3.8095670466842155`*^9, 
   3.809613447463519*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"4c615ee2-928f-4e95-a642-e935feb25fe0"]
}, Open  ]],

Cell["14", "Text",
 CellChangeTimes->{{3.8088388880290937`*^9, 3.808838937133892*^9}, {
   3.808838967354776*^9, 3.8088389677449427`*^9}, {3.8088391750879574`*^9, 
   3.80883922251937*^9}, {3.808839271855009*^9, 3.8088393737101936`*^9}, {
   3.808839412256794*^9, 3.8088394459837*^9}, 3.809391493186534*^9, {
   3.809637811180233*^9, 
   3.809637811336627*^9}},ExpressionUUID->"aadaae51-a56b-4380-ac1d-\
76fe8313ee25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Net3", "[", "#", "]"}], "&"}], "/@", 
   RowBox[{"{", "\"\<RoundMeasurements\>\"", "}"}]}], "//", 
  RowBox[{
   RowBox[{"Dataset", "[", "#", "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8088396189599233`*^9, 3.808839652251193*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"5df2a580-5b0a-4734-80bf-499f3b0356e9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Loss" -> 0.022496226002927527`, "MeanDeviation" -> 
        0.14184783332286618`, "MeanSquare" -> 0.022496226002927527`, 
        "RSquared" -> 0.9774033444167023, "StandardDeviation" -> 
        0.14998741948219366`]}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[153.], 
           TypeSystem`PackageScope`AtomShape[60]]], 5, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[
         TypeSystem`Enumeration[
         "Loss", "MeanDeviation", "MeanSquare", "RSquared", 
          "StandardDeviation"]], 
        TypeSystem`Atom[Real], 5], 1], "Meta" -> 
     Association["ID" -> 184348797674889], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[153.], 
           TypeSystem`PackageScope`AtomShape[60]]], 5, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[
         TypeSystem`Enumeration[
         "Loss", "MeanDeviation", "MeanSquare", "RSquared", 
          "StandardDeviation"]], 
        TypeSystem`Atom[Real], 5], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     1, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Loss", 
                  Style[
                  "Loss", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Loss"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["Loss"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{153., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0224962"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["Loss"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MeanDeviation", 
                  Style[
                  "MeanDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["MeanDeviation"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["MeanDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{153., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.141848"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["MeanDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MeanSquare", 
                  Style[
                  "MeanSquare", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["MeanSquare"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["MeanSquare"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{153., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0224962"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["MeanSquare"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["RSquared", 
                  Style[
                  "RSquared", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["RSquared"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["RSquared"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{153., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.977403"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["RSquared"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["StandardDeviation"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{153., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.149987"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "100ae4ba-43f8-4045-9135-fe0ec6c39974"][{1, 
                 Key["StandardDeviation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{258., {73., 79.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{258., {73., 79.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.808839625094208*^9, 3.8088396527493362`*^9}, {
   3.808850032530365*^9, 3.808850048450696*^9}, 3.808937177408018*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"e4160bd7-bb70-4046-9862-d59b29f2dc25"]
}, Open  ]],

Cell["15 ", "Text",
 CellChangeTimes->{{3.8088396963537693`*^9, 3.8088397437591257`*^9}, {
  3.8096378342060547`*^9, 
  3.809637834331128*^9}},ExpressionUUID->"38d83def-c0a3-44d7-b1c4-\
1ff301ec2917"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Net3", "[", "\"\<FinalPlots\>\"", "]"}], "//", "Dataset"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8088396662024736`*^9, 3.808839693377698*^9}, {
   3.8088397492065735`*^9, 3.8088397504871707`*^9}, 
   3.809637839486239*^9},ExpressionUUID->"d77d20a0-74df-45ff-a9fd-\
9a0d8acf770f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> Association["Loss" -> GeneralUtilities`TightLabeled[
         Graphics[{
           AbsoluteThickness[1.25], {{
             Hue[0.083, 1., 1.], 
             Line[CompressedData["
1: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
              "]]}, {}}, {{
             Hue[0.59, 0.7, 0.75], 
             Line[{}]}, {
             AbsolutePointSize[4.5], 
             Hue[0.59, 0.7, 0.65], 
             Point[{}]}}}, Prolog -> {{
             Text[200, 
              Offset[{-2, -2}, {200., 0.22}], {1., 1.}], 
             Text[400, 
              Offset[{-2, -2}, {400., 0.22}], {1., 1.}], 
             Text[600, 
              Offset[{-2, -2}, {600., 0.22}], {1., 1.}], 
             Text[800, 
              Offset[{-2, -2}, {800., 0.22}], {1., 1.}], 
             Text[1000, 
              Offset[{-2, -2}, {1000., 0.22}], {1., 1.}]}, {
             Text[
              Superscript[10, "-1"], 
              Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
             Text["1", 
              Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
          PlotRange -> {{0, 1000.1666666666666`}, {-1.82, 0.22}}, 
          ImageSize -> {302, 182.}, 
          GridLines -> {{200., 400., 600., 800., 1000.}, {{-2., 
              GrayLevel[0.3001]}, {-1., 
              GrayLevel[0.3001]}, {0., 
              GrayLevel[0.3001]}, {-1.6989700043360185`, 
              GrayLevel[0.8501]}, {-1.3979400086720375`, 
              GrayLevel[0.8501]}, {-1.2218487496163564`, 
              GrayLevel[0.8501]}, {-1.0969100130080565`, 
              GrayLevel[0.8501]}, {-0.6989700043360187, 
              GrayLevel[0.8501]}, {-0.39794000867203755`, 
              GrayLevel[0.8501]}, {-0.22184874961635626`, 
              GrayLevel[0.8501]}, {-0.09691001300805638, 
              GrayLevel[0.8501]}, {0.30102999566398114`, 
              GrayLevel[0.8501]}, {0.6020599913279623, 
              GrayLevel[0.8501]}, {0.7781512503836435, 
              GrayLevel[0.8501]}, {0.9030899869919434, 
              GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, AspectRatio -> 
          Full, 
          BaseStyle -> {
           FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
            GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6},
           PlotRangePadding -> None, PlotRangeClipping -> True, Background -> 
          GrayLevel[1], FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, 
          FrameTicks -> None], {None, "loss", "rounds"}], "MeanDeviation" -> 
       GeneralUtilities`TightLabeled[
         Graphics[{
           AbsoluteThickness[1.25], {{
             Hue[0.083, 1., 1.], 
             Line[CompressedData["
1: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
              "]]}, {}}, {{
             Hue[0.59, 0.7, 0.75], 
             Line[{}]}, {
             AbsolutePointSize[4.5], 
             Hue[0.59, 0.7, 0.65], 
             Point[{}]}}}, Prolog -> {{
             Text[200, 
              Offset[{-2, -2}, {200., 1.0605}], {1., 1.}], 
             Text[400, 
              Offset[{-2, -2}, {400., 1.0605}], {1., 1.}], 
             Text[600, 
              Offset[{-2, -2}, {600., 1.0605}], {1., 1.}], 
             Text[800, 
              Offset[{-2, -2}, {800., 1.0605}], {1., 1.}], 
             Text[1000, 
              Offset[{-2, -2}, {1000., 1.0605}], {1., 1.}]}, {
             Text[
              ScientificForm[0.], 
              Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
             Text[
              ScientificForm[0.5], 
              Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
             Text[
              ScientificForm[1.], 
              Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
          PlotRange -> {{0, 1000.1666666666666`}, {-0.0105, 1.0605}}, 
          ImageSize -> {302, 182.}, 
          GridLines -> {{200., 400., 600., 800., 1000.}, {{0., 
              GrayLevel[0.8501]}, {0.1, 
              GrayLevel[0.8501]}, {0.2, 
              GrayLevel[0.8501]}, {0.3, 
              GrayLevel[0.8501]}, {0.4, 
              GrayLevel[0.8501]}, {0.5, 
              GrayLevel[0.8501]}, {0.5, 
              GrayLevel[0.8501]}, {0.6, 
              GrayLevel[0.8501]}, {0.7, 
              GrayLevel[0.8501]}, {0.8, 
              GrayLevel[0.8501]}, {0.9, 
              GrayLevel[0.8501]}, {1., 
              GrayLevel[0.8501]}, {1., 
              GrayLevel[0.8501]}, {1.1, 
              GrayLevel[0.8501]}, {1.2, 
              GrayLevel[0.8501]}, {1.3, 
              GrayLevel[0.8501]}, {1.4, 
              GrayLevel[0.8501]}, {1.5, 
              GrayLevel[0.8501]}, {0., 
              GrayLevel[0.3001]}, {0.5, 
              GrayLevel[0.3001]}, {1., 
              GrayLevel[0.3001]}, {1.5, 
              GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
          Full, BaseStyle -> {
           FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
            GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6},
           PlotRangePadding -> None, PlotRangeClipping -> True, Background -> 
          GrayLevel[1], FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, 
          FrameTicks -> None], {None, "residual mean absolute", "rounds"}], 
       "MeanSquare" -> GeneralUtilities`TightLabeled[
         Graphics[{
           AbsoluteThickness[1.25], {{
             Hue[0.083, 1., 1.], 
             Line[CompressedData["
1:eJw1mAk4lO33x/FSryVpkRQlIkLaRXKfFNqFUmSXolSI7NtgzBhUlmbMMDPM
2PetkKTFkqUkiRZFWqS0WHpT9H/G7/67XJdrzPPMc59zvt/P91yzyvmChauI
kJCQlrCQkODv//+ozS+s4LwbRV4+bolhdyRgiRRqExZ9j18vg0ZN2zA2bwAd
PfawaOWC1VA8qKcRNqcfv78WhpPiVMjnnqPmPRE3v1avh7tHLMyCNXvx9Zth
R5vxzfvOPeit63KumbsuKAvzHzpUdOP79WHQpO/ZfwefoL+kqqgSeUNY2v3+
9SvlLvx5AIstzs0sVHqMpDtzKue6GoHhnRUSy+068efvhtC909t5to9QWv94
tu4tY7iSuOJZ+9cO/DxT0EtNSxTPaUdrv+xMPS27F3YYyHKkwtrw8/fBjtJT
HW1eraj6dwKNfu4ALLvZf8s2/QE+zyH4dEf4TlFvCzKReBnS3GgGyVbSATTR
Fny+w0Bh7Sz4atiMzsQtJj7CHHItVY+9oTTh81qA99/0kuv9jahs0Xbi1xI+
PdnZmHu0EZ//CHhs0T3D6b6P/mM65Wt+OAKaWqQrN0zu43qOQoTJcdehhnsI
KVN4u5KsgDFhqjxidA/Xdwxqgl55UNrvInJecdoJdBxGVT/zfc/exfVag/hx
ve1t0ndRx/qnKRdHrOF5vI6+Y+4dXL8NpM01i441uYNkZxtwApyn9KsHhxtw
P2zhI19ewflqA7KdPYAdUPKU77nsacD9sYfAvWlK50QaEK9J0BB7UHeVn091
u4375QD7+kMfSHfVowmimuGDjlDqLrRyuVE97p8jWPzdozJRfQsxPrXWTKg4
QZfKDvkfxrdwP50gcWTMV7S3Dhmss78uPOUEyYE5ukMn6nB/nUFEb0fG0qGb
6LXX9/J5nc5gc0VT6R+vm7jfLjCPXfxmq8hNFCk4brYLrF2xrvFCVi3u/0kY
WHXv5tj+WrTml1yhavBJCK1StNP5UIPncRIaNqb0foyqQa0GBbkbLFwht/4j
+7ZaDZ6PK9zdvczvcms1Oh9umLVD/RQMhNWxTEKr8bxOgRDTgv9iUzVacP9x
xt6ZU5B8x+tY6esbeH6ngb+DunV//A1UNdeVfbT7NFRN2/xRNbyB5+kGbjoG
9m++XUfH9wtO5Aa+JJp9ael1PF93mLfrbZOO13X0RzCucHcI9lpybUbjOp63
O7wPzE3UHqpCnK4VyQFWZ8BjNOX5T04Vnv8Z+LVt+Ia2fRXataT8SrTWWZj/
tMl7TK0K6+EseOt2z1X8XoneWxvHXxXxALWW0w/+lldifXjAvYk3Y3p+lSg2
vZea3ku8H7aEbWpQifVyDjLN57nViVQi7YGzREnnoLzn5uaergqsn/NwakRq
Zj6/Aj1eLfjPeVjnnvL3+7kKrKfzEJ+zsc9BrwL9T64XoCg2nCk+pwLr6wLo
+JHblLvLkVTPwvpTSz2hXpUhyc4rx3rzhITfLmaHwstRv59tnUekJ1S/mu9Q
cLgc688TXtY0acUpl6NS+exa71FPmLShZutNlGE9eoHbYvKuuJYyJLja39oL
nO9uWyrBK8P69ILhbZIhK0LLkKWd3o3Q+14wZfSvnf6RMqxXL4jQvpWsqVmG
VAXl6XjDVpak+n6RMqxfb/B+9Ygn+qIU/eS2V8QyvUFc41iKcU0p1rM3CEVd
MTZilKIWI2JAYhdh9z0nXY53Kdb3RWhidTR5HixFzCGH0mueF0HO+47YXo1S
rPeL4L91/wIrsVLkIRDUi4twWPbE9pKHJVj/PuDjKJR8IqkEGaqPFWaa+IDs
SdMiPbMS7AcfqG7uyDeUKkHzBQYo84H7iaMhH1qLsT98IH9ya2cltRjNjlfB
F6RWvRILtCzGfvEFLeNtAS8Vi1HFPKLgGF9I1K2UZ7wuwv7xBQ+eVJUUrwhF
E6et/eELUQ5t496ni7CfLsHT98tadmgVIStzF36D3SWQfR7h4TBViP11CbyO
/cmofFCIBMdvarkELe/2vll2tRD77RK8UWsvI1sXoqnkSW77Jj+4+q6+VFal
EPvPD0xEXo+qfSlA7VuB08X2A8rBuaFdtwuwH/3gXTP/cVRiAWIL5C3uDxOM
shtKDgXYn/5gEyneIq1VgC4EPmH1+/gD12Kh/7Vf+div/pA/pz8+riUf7VRQ
ZA699gc3M62Ke+x87N8AsOf12cn45qNF9acYn/YFwLdDquJk43zs5wAIl9wX
67kkH70jxvutKgASyzSsdD/mYX8HgKH4AcnXtXmIEFvypFIgTCQ/vbQuOQ/7
PRBmjLyPJZ7LQ4Ju/aEFguehv8W9O/Ow/wOh/ffEuPuSPGQjsPfPQBgwXxIa
PJKLeRAEq9eLmsjeyUVaH3ou/+scBO/0ZX5KpOdiPgSBNp9l1xOQi6YpSgnS
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
vn9y106RoqP/A6uu5Bc=
              "]]}, {}}, {{
             Hue[0.59, 0.7, 0.75], 
             Line[{}]}, {
             AbsolutePointSize[4.5], 
             Hue[0.59, 0.7, 0.65], 
             Point[{}]}}}, Prolog -> {{
             Text[200, 
              Offset[{-2, -2}, {200., 1.1615000000000002`}], {1., 1.}], 
             Text[400, 
              Offset[{-2, -2}, {400., 1.1615000000000002`}], {1., 1.}], 
             Text[600, 
              Offset[{-2, -2}, {600., 1.1615000000000002`}], {1., 1.}], 
             Text[800, 
              Offset[{-2, -2}, {800., 1.1615000000000002`}], {1., 1.}], 
             Text[1000, 
              Offset[{-2, -2}, {1000., 1.1615000000000002`}], {1., 1.}]}, {
             Text[
              ScientificForm[0.], 
              Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
             Text[
              ScientificForm[0.5], 
              Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
             Text[
              ScientificForm[1.], 
              Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
          PlotRange -> {{0, 1000.1666666666666`}, {-0.011500000000000002`, 
            1.1615000000000002`}}, ImageSize -> {302, 182.}, 
          GridLines -> {{200., 400., 600., 800., 1000.}, {{0., 
              GrayLevel[0.8501]}, {0.1, 
              GrayLevel[0.8501]}, {0.2, 
              GrayLevel[0.8501]}, {0.3, 
              GrayLevel[0.8501]}, {0.4, 
              GrayLevel[0.8501]}, {0.5, 
              GrayLevel[0.8501]}, {0.5, 
              GrayLevel[0.8501]}, {0.6, 
              GrayLevel[0.8501]}, {0.7, 
              GrayLevel[0.8501]}, {0.8, 
              GrayLevel[0.8501]}, {0.9, 
              GrayLevel[0.8501]}, {1., 
              GrayLevel[0.8501]}, {1., 
              GrayLevel[0.8501]}, {1.1, 
              GrayLevel[0.8501]}, {1.2, 
              GrayLevel[0.8501]}, {1.3, 
              GrayLevel[0.8501]}, {1.4, 
              GrayLevel[0.8501]}, {1.5, 
              GrayLevel[0.8501]}, {0., 
              GrayLevel[0.3001]}, {0.5, 
              GrayLevel[0.3001]}, {1., 
              GrayLevel[0.3001]}, {1.5, 
              GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
          Full, BaseStyle -> {
           FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
            GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6},
           PlotRangePadding -> None, PlotRangeClipping -> True, Background -> 
          GrayLevel[1], FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, 
          FrameTicks -> None], {None, "residual mean square", "rounds"}], 
       "RSquared" -> GeneralUtilities`TightLabeled[
         Graphics[{
           AbsoluteThickness[1.25], {{
             Hue[0.083, 1., 1.], 
             Line[CompressedData["
1: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
              "]]}, {}}, {{
             Hue[0.59, 0.7, 0.75], 
             Line[{}]}, {
             AbsolutePointSize[4.5], 
             Hue[0.59, 0.7, 0.65], 
             Point[{}]}}}, Prolog -> {{
             Text[200, 
              Offset[{-2, 1}, {200., -0.16150000000000003`}], {1., -1.}], 
             Text[400, 
              Offset[{-2, 1}, {400., -0.16150000000000003`}], {1., -1.}], 
             Text[600, 
              Offset[{-2, 1}, {600., -0.16150000000000003`}], {1., -1.}], 
             Text[800, 
              Offset[{-2, 1}, {800., -0.16150000000000003`}], {1., -1.}], 
             Text[1000, 
              Offset[{-2, 1}, {1000., -0.16150000000000003`}], {1., -1.}]}, {
             Text[
              ScientificForm[0.], 
              Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
             Text[
              ScientificForm[0.5], 
              Offset[{3, 0}, {0, 0.5}], {-1, -1.}]}}, 
          PlotRange -> {{0, 1000.1666666666666`}, {-0.16150000000000003`, 
            1.0115}}, ImageSize -> {302, 182.}, 
          GridLines -> {{200., 400., 600., 800., 1000.}, {{-0.5, 
              GrayLevel[0.8501]}, {-0.4, 
              GrayLevel[0.8501]}, {-0.3, 
              GrayLevel[0.8501]}, {-0.2, 
              GrayLevel[0.8501]}, {-0.1, 
              GrayLevel[0.8501]}, {0., 
              GrayLevel[0.8501]}, {0., 
              GrayLevel[0.8501]}, {0.1, 
              GrayLevel[0.8501]}, {0.2, 
              GrayLevel[0.8501]}, {0.3, 
              GrayLevel[0.8501]}, {0.4, 
              GrayLevel[0.8501]}, {0.5, 
              GrayLevel[0.8501]}, {0.5, 
              GrayLevel[0.8501]}, {0.6, 
              GrayLevel[0.8501]}, {0.7, 
              GrayLevel[0.8501]}, {0.8, 
              GrayLevel[0.8501]}, {0.9, 
              GrayLevel[0.8501]}, {1., 
              GrayLevel[0.8501]}, {-0.5, 
              GrayLevel[0.3001]}, {0., 
              GrayLevel[0.3001]}, {0.5, 
              GrayLevel[0.3001]}, {1., 
              GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
          Full, BaseStyle -> {
           FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
            GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6},
           PlotRangePadding -> None, PlotRangeClipping -> True, Background -> 
          GrayLevel[1], FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, 
          FrameTicks -> None], {None, "R-squared", "rounds"}], 
       "StandardDeviation" -> GeneralUtilities`TightLabeled[
         Graphics[{
           AbsoluteThickness[1.25], {{
             Hue[0.083, 1., 1.], 
             Line[CompressedData["
1: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

              "]]}, {}}, {{
             Hue[0.59, 0.7, 0.75], 
             Line[{}]}, {
             AbsolutePointSize[4.5], 
             Hue[0.59, 0.7, 0.65], 
             Point[{}]}}}, Prolog -> {{
             Text[200, 
              Offset[{-2, -2}, {200., 1.111}], {1., 1.}], 
             Text[400, 
              Offset[{-2, -2}, {400., 1.111}], {1., 1.}], 
             Text[600, 
              Offset[{-2, -2}, {600., 1.111}], {1., 1.}], 
             Text[800, 
              Offset[{-2, -2}, {800., 1.111}], {1., 1.}], 
             Text[1000, 
              Offset[{-2, -2}, {1000., 1.111}], {1., 1.}]}, {
             Text[
              ScientificForm[0.], 
              Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
             Text[
              ScientificForm[0.5], 
              Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
             Text[
              ScientificForm[1.], 
              Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
          PlotRange -> {{0, 1000.1666666666666`}, {-0.011000000000000001`, 
            1.111}}, ImageSize -> {302, 182.}, 
          GridLines -> {{200., 400., 600., 800., 1000.}, {{0., 
              GrayLevel[0.8501]}, {0.1, 
              GrayLevel[0.8501]}, {0.2, 
              GrayLevel[0.8501]}, {0.3, 
              GrayLevel[0.8501]}, {0.4, 
              GrayLevel[0.8501]}, {0.5, 
              GrayLevel[0.8501]}, {0.5, 
              GrayLevel[0.8501]}, {0.6, 
              GrayLevel[0.8501]}, {0.7, 
              GrayLevel[0.8501]}, {0.8, 
              GrayLevel[0.8501]}, {0.9, 
              GrayLevel[0.8501]}, {1., 
              GrayLevel[0.8501]}, {1., 
              GrayLevel[0.8501]}, {1.1, 
              GrayLevel[0.8501]}, {1.2, 
              GrayLevel[0.8501]}, {1.3, 
              GrayLevel[0.8501]}, {1.4, 
              GrayLevel[0.8501]}, {1.5, 
              GrayLevel[0.8501]}, {0., 
              GrayLevel[0.3001]}, {0.5, 
              GrayLevel[0.3001]}, {1., 
              GrayLevel[0.3001]}, {1.5, 
              GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
          Full, BaseStyle -> {
           FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
            GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6},
           PlotRangePadding -> None, PlotRangeClipping -> True, Background -> 
          GrayLevel[1], FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, 
          FrameTicks -> None], {None, "standard deviation", "rounds"}]], 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[153.], 
         TypeSystem`PackageScope`UnknownShape[False]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Loss", "MeanDeviation", "MeanSquare", "RSquared", 
         "StandardDeviation"]], TypeSystem`AnyType, 5], "Meta" -> 
     Association["ID" -> 103470268426487], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`AtomShape[10], "Type" -> 
     TypeSystem`AnyType, "Path" -> {
       Key["RSquared"]}, "BaseIndices" -> {4}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 2, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 4], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key["RSquared"]}, TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 GridBox[{{"", 
                    ItemBox[
                    "\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
                    RotationBox[
                    ItemBox[
                    "\"R-squared\"", DefaultBaseStyle -> "LabeledLabel"], 
                    BoxRotation -> 1.5708], 
                    GraphicsBox[{
                    AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    LineBox[{}]}, {
                    AbsolutePointSize[4.5], 
                    Hue[0.59, 0.7, 0.65], 
                    PointBox[{}]}}}, Prolog -> {{
                    InsetBox[
                    FormBox["200", TraditionalForm], 
                    Offset[{-2, 1}, {200., -0.16150000000000003`}], 
                    ImageScaled[{1., 0.}]], 
                    InsetBox[
                    FormBox["400", TraditionalForm], 
                    Offset[{-2, 1}, {400., -0.16150000000000003`}], 
                    ImageScaled[{1., 0.}]], 
                    InsetBox[
                    FormBox["600", TraditionalForm], 
                    Offset[{-2, 1}, {600., -0.16150000000000003`}], 
                    ImageScaled[{1., 0.}]], 
                    InsetBox[
                    FormBox["800", TraditionalForm], 
                    Offset[{-2, 1}, {800., -0.16150000000000003`}], 
                    ImageScaled[{1., 0.}]], 
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    Offset[{-2, 1}, {1000., -0.16150000000000003`}], 
                    ImageScaled[{1., 0.}]]}, {
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
                    ScientificForm], TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], 
                    ImageScaled[{0, 0.}]], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    RowBox[{"\"5.\"", "\[Times]", 
                    SuperscriptBox["10", "\"-1\""]}], 0.5, AutoDelete -> 
                    True], ScientificForm], TraditionalForm], 
                    Offset[{3, 0}, {0, 0.5}], 
                    ImageScaled[{0, 0.}]]}}, 
                    PlotRange -> {{
                    0, 1000.1666666666666`}, {-0.16150000000000003`, 1.0115}},
                     ImageSize -> {302, 182.}, 
                    GridLines -> {{200., 400., 600., 800., 1000.}, {{-0.5, 
                    GrayLevel[0.8501]}, {-0.4, 
                    GrayLevel[0.8501]}, {-0.3, 
                    GrayLevel[0.8501]}, {-0.2, 
                    GrayLevel[0.8501]}, {-0.1, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {-0.5, 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {0.5, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                    AspectRatio -> Full, 
                    BaseStyle -> {
                    FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                    PlotRangeClipping -> True, Background -> GrayLevel[1], 
                    FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, 
                    FrameTicks -> None]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.4]}], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "9c78ba1d-835f-43f4-a6af-671be97684e4"][{
                 Key["RSquared"]}, "Item", False], "Mouse"], 
              ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{344., {125.5, 131.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{344., {125.5, 131.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8088396940385003`*^9, 3.8088397508479986`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"40a33d7a-7e03-4cfe-831b-9ac19170b94d"]
}, Open  ]],

Cell["16", "Text",
 CellChangeTimes->{{3.808839759753396*^9, 3.8088398016808124`*^9}, {
  3.809391515328269*^9, 3.8093915184354773`*^9}, {3.8096378498119287`*^9, 
  3.8096378499368863`*^9}},ExpressionUUID->"6c3422f0-2f5e-4ed1-893e-\
9545d53afbc6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Measures", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Net3", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"{", "\"\<RoundMeasurementsLists\>\"", "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Keys", "[", "Measures", "]"}]}], "Input",
 CellChangeTimes->{{3.8088396595184045`*^9, 3.80883966321795*^9}, {
  3.80883981140068*^9, 3.8088398884499235`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"1ac3e3ab-a42c-4b0d-bb7f-47ec0c2190a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"Loss\"\>", ",", "\<\"MeanDeviation\"\>", 
    ",", "\<\"MeanSquare\"\>", ",", "\<\"RSquared\"\>", 
    ",", "\<\"StandardDeviation\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8088398888243303`*^9, 3.8089372187985363`*^9, 
  3.8096135105889564`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1806c8d6-2290-4c21-84c6-a0d8935efcdd"]
}, Open  ]],

Cell[BoxData["17"], "Input",
 CellChangeTimes->{{3.809637866678275*^9, 
  3.809637866807078*^9}},ExpressionUUID->"282fccdb-ae2c-4889-b77e-\
eba2d22a2dbe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TrainedNet3", "=", 
   RowBox[{"Net3", "[", "\"\<TrainedNet\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Measures", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], 
           RowBox[{"(*", "Loss", "*)"}], ",", 
           RowBox[{"Measures", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], 
           RowBox[{"(*", "MeanDeviation", "*)"}], ",", 
           RowBox[{"Measures", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "3"}], "]"}], "]"}], 
           RowBox[{"(*", "MeanSquare", "*)"}], ",", 
           RowBox[{"Measures", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "4"}], "]"}], "]"}], 
           RowBox[{"(*", "RSquared", "*)"}], ",", 
           RowBox[{"Measures", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "5"}], "]"}], "]"}]}], 
          RowBox[{"(*", "StandardDeviation", "*)"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"101", ",", "i"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Number of Rounds\>\"", ",", "None"}], "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Measurements Plot\>\""}], ",", 
         RowBox[{"GridLines", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"SwatchLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Loss\>\"", ",", "#"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<MD\>\"", ",", "#"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<MS\>\"", ",", "#"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<RS\>\"", ",", "#"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<STD\>\"", ",", "#"}], "]"}]}], "}"}], ",", 
            RowBox[{"LegendLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Measurements\>\"", ",", "#"}], "]"}]}], ",", 
            RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Framed", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"RoundingRadius", "\[Rule]", "5"}], ",", 
                 RowBox[{"Background", "\[Rule]", "LightGray"}]}], "]"}], 
               "&"}], ")"}]}]}], "]"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "&"}], "[", 
      "Black", "]"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"DensityPlot", "[", 
        RowBox[{
         RowBox[{"TrainedNet3", "[", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{"1", "-", "#"}], ",", 
              RowBox[{"2", "*", "#"}], ",", "1"}], "]"}], "&"}], ")"}]}]}], 
        "]"}], ",", "Plt", ",", 
       RowBox[{"ImageSize", "\[Rule]", " ", "200"}]}], "]"}]}], "}"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8088418486272717`*^9, 3.808841898622535*^9}, {
  3.808841930292204*^9, 3.8088419975554147`*^9}, {3.8089371923823137`*^9, 
  3.808937213565648*^9}, {3.809613483709401*^9, 3.809613507093747*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f09b0bde-6bad-4935-a6d3-5ff681acd324"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.21099, 0.531208, 0.953188]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.985248, 0.676238, 0.0398315]], 
            LineBox[CompressedData["
1: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
/RNxuGlF2cFB3D8RGsof6SfVuX8i+gllG4/35v6J8BV7S2tUuH8iJpzWPfm4
E/dPxMLx6iVqf65S/0TILZf5TvhBViaisaST2fQWcnkivs2899i+iVyZiL9m
ia/I35Gr2//+y+V6t1+S6xIhCsGDF8/Jr9v/ft7f6qL9hNyUiEGrbY/Oqya3
tu+5WGsReI8sECGk/MrSvbfJKiIYm1fY1Vwjq4rgdKBb0tjLZA0R/g0seLdK
SdYSQeX89X/Xl5B1RRiN6q8tJ8n6ItSGWfWbcpRsKMLSjpVrIg6TIUJdy7bC
k/lkYxHwKkb8ew/ZTITgBZsSHHaSrUXYV5S87dA2sqMIt6+/W/BpE9lThIhP
X7Is/yEHivChsNnhcBo5UoSuZ87ldpKShSIcvnP2/ZokslSE6Ne3pKfiyZki
bLlW7D0kmpwlQmFa+YTUMHKuCOfXvgppCCTni6BzuUps5Usuav/5kudeZR7c
X4Tp9S/Hr3Th/iIsKNHLOm3P/UWwfXHLc6AN9xfh/t9ynVRL7i/CyHAzsx9m
3F8Ema/6x3+Wc38RDl1tS+1uzP1FmNRyzEtixP1F2L+8W1nbXO6fBMmgow7p
M7l/Eg4tVU9Rncb9k6Dz4kpv6STun4S0Tz1U1SZw/yRYbx1sclaX+ychyf6/
lQt0uH8SFiYlRdwazv2TUH3cxMF2KPdPwrDXZ4S1A7l/Eh706XNfps79k7B4
4jQdjT7cPwkuIv39pd25fxKc+8t813bh/kl4bfFXyzcB909CwdL3R7f+ukL9
k+D97sOfca1kYfvPj27cVvuFLE1C14TUqK2fyJlJ2HnK4TrekbOSoDWv67S6
l+TcJIxSusak1ZPzk3Chc9TzpU/JRUnIf7li74dH5NNJOJs+2aa4iqxMgt5b
+25r75DLkzCxsdBF4xa5Mgnyfu9/VZSTq5OwxPnV/X/KyHVJKDG8XmOiJL9O
gu+WwPkDzpGb2n+/85NqP5witybhd/PJ6ZuPkQVi9PPf4OJaSFYRwz/+yKhR
BWRVMabLJ3v9t5+sIYaNln7Bld1kLTGWVwYnbtlB1hVDX6HV238bWV8MuV43
j5mbyYZiJIy13aa2ngwxTm98N6VDOtlYDLXzY/KrUslmYgw7Yft7p4RsLW7/
52H1pbBEsqMYBxOK7XzjyJ5ijH3g4D07ihwoxjxnnwU6YdxfjKnOQYbDgri/
GCtS7k8X+HF/MVLM9j547Mn9xXhc82jvBVfuL8a0BOXrAkfuL8aXJ84zc2y5
vxjhk+pf5llzfzG2rAq02WDB/cXYvfaHZoAZ9xejv3Gekdty7i/GyvLS+XbG
3F+MkSsSB9ov5P5iaBVs8V8L7i9GwM8rR8xnc//2v3+VB/vNDLm/GDH3TkQF
T+H+YuTv1zhpoc/9JfBQOeCwbjz3l6CnY/kWN13uL0HXmiWBPjrcX4KhS80e
p2pxfwkOhkYUxWpyfwl2X02tStPg/hLMK/Mcf6w/95dAc/Nwx5Oq3F+Chy45
86p7cX8JDutHzalS4f4S1C99lfaxM/eXwNmxX8NfHbi/BNl63xJGtF2m/hIc
Pb/ywPTv5EAJ3C6+m+vbQo6UQD/FYVdcM1kogXUPnN70gSyVoGnYs7xzb8iZ
EuwLGn/5eSM5S4KS3W09u9aTcyUQ3S8LmvSUnC/Bh87Gt+wek4sk+LLwR0TS
A/JpCa5rBBgfvktWSnC7X+2lb7fJ5RIU+5Sv1b5BrpQg7cPzB3Ovkqsl2Pb1
+p7AS+Q6CWI7loze+S/5tQTi7naHH5eQm9p7WZ4Yp3aa3CrBj6dn/vE6ThYk
o2G+R2lqEVklGaNMvl0tPURWTUZyjFp+1wNkjWQ0n93wc/4+slYy8mz9pyTs
IusmY+KGtq1Xc8j6yfgx1H6S+jayYTKMH37dt2ozGclQGEwOO72ebJwMXcOT
uY3pZLNkhGk+2GUsJ1snI8I23/SfFLJjMpQbjZY8SeL+7b//dkXoOCH3T8ax
fad6xsZy/2R8nt/y6VIk909G4TNP6cAw7p+Md0uHzQ4J4v7JCDCSn3nox/2T
0df7x58J3tw/GZ13/rCRuHP/ZGzK8X7x0Jn7J8Pf5MKyeQ7cPxkXbbU/r1/H
/ZMRelNd7T8r7t/+9zHt5iwrC+6fjKz1wWOvmXH/ZOSWH/k+1pT7J2Ns81rD
FBPun4ybGUazPizi/snwexKyznIB90+G9NN2n8tzuX8Kyh/Fa+nP4v4pyO7b
d86W6dw/BfGDq76PmML9U5C4+GxLnD73T0Hx5frit+O5fwqmL5xbGDuG+6fA
qb5PzcOR3D8FHhrqt81HcP8UHF5e0//aMO6fAp1eTgVGQ7l/CgSjdW6dHcT9
UxAxp3bhtP7cPwUH07MzK1S5fwqi/3bZZ9ib+6egt2xJ5/Lu3D8FFfJ79VO6
cv8UbDijsuB8R+6fgpYNdm6z/5RR//afN6I1+tJPclYKbPsZLLVoJeemIG+C
ZuHjr+T8FHTRHO7u1EwuSsGEjVcaP34gn06B6qSBl9e/JStT8MBKc0mXV+Ty
FDRdMYnMfkGuTEG+onHNmDpydfvvN8Mu6nwtuS4Fl8te9HJ/RH6dgpv+Nk4N
VeSmFHwy6P0s9i65NQVf7uV06V9BFkjhbvZ436EbZBUpXC6/UzEtJ6tKofvH
6MnbMrKGFB1/jlosukDWkuKTxKDT0FKyrhQ9ui62rzlL1pfi9xTZQvtTZEMp
/H7oBXY5ToYUh4M61BYUkY2lGKEjjHc8TDaTov7fgpovB8jWUnyZ/e/KrfvJ
jlIonXq9Mt9D9pTCcE+/ca92kgOl+KhxalFeNjlSitPbJxeabSULpZj7ufeH
d5vIUikii/VtctZzfynOeV9vNc/g/lK8lPbuqZrG/aUo0kxvPCnl/lLMnqK2
MVLC/aVoKtIfME7E/aXYqDfcoyqe+7fvedQ9eksM95digDLs14pI7i+F585L
d7uGcX8pCg+aaSuDuL8UDULn2YH+3F+K3VO7Rk7z4f5SZN0ZH93swf2lmDmr
cdtRV+6fiuCJN+tCnbh/Kgy2z/w40577p6JLUfKdPzbcPxUXTcs2XLTi/qlY
Uvx6UooF90+F+nODCNNV3D8Vojcy7VEruH8qwp009j5eyv1ToVl2fcfBJdw/
Fb8XhYwNXsj9UxFoPSEP87l/Knp/3bFIYy73T8WIBQ7i5zO5fyqGTy6KPjKd
+6fiWKfuD1KncP9U9Ms6UW0/ifunouxOYx+9idw/FU+jXLK7jOP+7e/VF15p
Gs392/d/u7m0TIf7p6LW1cMtQ5v7p8JmvETDdRj3T8WVQK9+RkO5fyqm+5sd
maTB/dvvr3T79aM/90/F68TovIdq3D8VL2O6F5/uw/1TEaOcdXtrT+6fil23
cTtchfunInbR0X+cunD/VGQ6RB5c0pH7p8JnZEjknD+XqL8MM7tNXtfrF1lF
htf5w+b0+E5WlWH8oCX5tS1kDRkUGrVzb3wma8lQsTYvu/ATWVeGvVNdZux8
T9aXocEsbpTsDdlQBrnlLHnMSzJkEIiCQj1ekI1l2FK1xduvjmwmwwnx4ndr
n5CtZbjtPmTo3MdkRxkG/ZP5Fx6SPWVY8n2envZ9cqAMtqNLh2jeIUfK4G0w
Ua/3bbJQhkvDxzYOvEGWytBh0ICjPcvJmTKULn8q6niZnCVDwqKwpV8ukHPb
9/eYM/VjKTlfhphrhdd+lZCLZMgcKj7/32nyaRmi66YUfzpBVsoguWe/pvUo
uVyGL+MmbHxZSK6UwSbt94nvh8jVMphb3Fr9/QC5ToYe/e8WfN5Pft3+Xl/d
6OcecpMMzWGt/QS7yK0ypBTumi7Ywf3leNvgU6mynfvLMftL7WL1LO4vR0WW
1XKdTdxfjl+qb99iPfeXw9ep87klGdxfjqeTRD3mp3F/ORSPehSuSuX+clRd
mnHQNZn7y3FueWS9XxL3l8P8l2m4SMj95Whu+7RmUxz3l8O/7EHl3mjuL0dB
hOJySQT3l6Pk6qp3d0O5vxy5Z/VU3gRxfznu+p5NUA/g/nKM+Hbgo44v92//
/ZbOvjnDi/vL0eX50CIzd+4vRy+VPlbeLtxfjk6/ci7FOXJ/OYqKil9n2XF/
OTJ/lXe7asP95ejTY9Pz51bcXw7XfM+QrxbcX44Oa1Zna6zm/nJMqFDunr6S
+8vR0O9rd5vl3F+Ob9n1xkIT7i9H3Q5Y5i7m/nJsGZi4r9qI+8vRMy789Q9w
/zR0zrpr1X8u90/DgBfhi6fP4v5p2PtJ86qbIfdPQ3yGU6BsKvdPw/6HJ3uf
NuD+abh1p+xKvR73T8OCO+u6jZzA/dPg6PWradZY7p8Gv6x5s71Hc/80xD4+
GJqtw/3T8FNninGFNvdPw/yOopW/h3H/NOxrO7YPmtw/DVMtUsYEDub+afjt
P0CxYSD3T0PQ4Q+11/px/zR0MBpyvqMa90+DbWFpvUkf7p+GsHeCbwE9uX8a
Fqe91zutwv3T8PxKw/gPXbh/GlbkLRwzuBP3T0PEpvumKwXcPw333SPnZLdd
pP7tP2+Wlc6tH+TyNNSf2qnWvZVcmYb8iwuWLG4hV6ehr2mZ0z+fyXVpyCxf
b37pE/l1GoqvzV0x8AO5KQ13d2GJ5Vtyaxo6mvUZmf6KLFDActrg2zcbyCoK
DInQODSinqyqwOizb+dYPyNrKHDRaiAKa8laCqwZbar9+RFZV4HfV76YjHtI
1ldA2MW7MuQ+2VCBiWVbfS/eIUOBks53bvaoIBsrsCDHe83qm2QzBfIPbK/J
uUa2VsD177zrb6+QHRVYOGT2ylVlZE8F0gOMn6ddIAcqsFSr55GqUnKkAo8H
5RjOOkcWKlCdsmhp9BmyVAE/B7UFV0+SMxXwfV20aPhxcpYCzyaGzAgpJucq
cL6bvlv5EXJ++99f1Li9Ew+RixSo0MOOgAPk0woY5r+Nuraf+ysQ7ilbp7+X
+ytQ9972Qsgu7q/ArRP5oyp3cH8F0EmpNyGb+ytQWeT/ULKV+ytQ5Dltac1m
7q+Ap4aXw4qN3F+BJYKflXn/cP90dMk/+V9LOvdPh83jyN1Wadw/HecVv45f
SeX+6fhlF/FNLYX7p+PlgKhRIWLunw43uZ9aVSL3T0eV4EXk3ATun46AVxLZ
1ljun45XvTyed47m/umwt9r/zCOC+6dDR/tUUU0o90/H80Gtf+sFc/909P01
bWxWAPdPx83c1jSBH/dPh9UeM+04b+6fDu2gwi73Pbh/Oo72n7BwgRv3T8e2
gt/Jp5y5fzomW5aYajhy/3Ts+RFZmmnH/dMRqbwU1GzD/dPRv7rnXDtr7p+O
6K0Dpt6y5P7tv+/kaz2mmXP/dDyM+3X5gBn3T0eHR8nFeiu4fzpEL3O3pC7j
/uk4uP6Au7oJ90/HlpLfPxIXc//2P7/du+a1EfdPRzhsXGznc/909Jw7qr5y
LvfPQKW6hcBoNvfPwCjNsynnZ3D/DPR/csjRcDr3z0Dn9z1EB6Zw/wycntPn
6N8G3D8Dgucrj+7V4/4Z6GNu+VJ/AvfPQO6MzNV5Y7l/BlwOZD5V070473+L
Okcf
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.519913, 0.338384, 0.950217]], 
            LineBox[CompressedData["
1:eJw113lYjI/XBvCxVZZIRF/rZM1algjRXUhEUtpIjXa0TPu0z9Q0TctMkaVk
GXtUhFIIQ4vshVLZJoWoyJJC+PVe73n6x/VxOnOe+7n/qLScfS3derNYrOY+
LNb//fv/X+2GSVWjVpee+GJI/wFl25JzzzTbySpQ1Ftwt7i0kdWwV+2Y14eC
j+Th8H04Nb8wqZmsCd5x52kjjr8jj8H7ugfm4lFvyWwkNh5jnS9rJE/AiNOj
DhRlvCFPgsbCE94OGQ3kKZh8bGNgeaGCrA2LvidcRjW/Jk+H0tV7ixamvSLP
ROlQlT//bF+SZ+PQZZ8B2SYvyLpw7lKza1z7nDwHfTq0D1xxryfPhd3DHcHf
d9eR5yHkxsuqUzW15PmQfV8ZoKHNWA9z1jzJKox9Rl6A3pOOm1//VENeiEfK
+7ZqOjHWx3u9vYKQ+mryIqwJPVfjsYXxYrxrCJ117/1T8hLs/CAuk/AYG6Di
xkvu9SGMl2J3330p0uwn5GVY6Hl7nsdaxoZ46TGr9PuXx2SgtNWp0ieTzAey
FgV2lpsycyNYs2WxP7qqaG6Ew/2nzjc7S2YZozjTVzrBjZkbI7iu3+rB45n5
cgwSPJ6o8qKS5ssxpn/UgY37yawVGKUzvTrDgZmvgGhgfo4zm5mvhGDfp8Xq
9x/RfCX2ZTeoTHQgs0zgmjGVm9/2kOYmeNYyLKUhjsxahRmjSt2PjWPmq/Bo
2nr9kdce0NwUPqOsZu/bQuabwqvPe88cFjNfjReeKsFTTt6n+Wq4Ob2rXW1O
Zq3B537iMPWf92i+Bo6lhwbcPUFmmYEXNnVnig0zN4NOjpJ7uRIzX4uO1cLC
nKt3ab4WTsKP7Ml+ZNY6uBqXpezUZubr0PHLP+1Xwx2am+OV2GrYmANkvjki
c6t3/bNn5uvRdTxxhJ0mM1+PK98iA5NqK2hugSG53YWTM8iwgGnlwiY1BzLf
Albdy/5kapHlFog49PR847vbtL8B+p/bLA7mkrEBm17qnzUPIvM3wLGiz8Ck
ZWT5BryaKTbtUGH2LRFw9dBQwdNy2rdEyOC1AwOOkvmWOHS1aVORD1luiVF3
ypqeLiWzrFDd/7hy2yBm3wqXDmX8/PGqjPat8ND6gCryyHIrcLKrp4fFkFkb
Ebj+/PgF1mRsRBt/Wb8105j9jZgTIVL4/i2l/Y0IUlqlNeUpmWWNw2NrDUyz
ybDGfF8F55GAzLcGyyDbxt6e2bfGtZJc0dp5zL4Nio0e9dk2iNm3gXvBymfx
b0to3wbGW+NfJsvJchs8L14Snn6AzLLFJz/BA7cQMmzRt8jp0LSNzL4t0u6X
NmjOYfZtUf86dEnfIcy+HVjNL5bMbrtF+3aImNrv5dn7ZL4dzrlcmlWcTZbb
4f4Iq9H1iWSWPYafnq7Wawezb4/W8yYlcWuZfXukeVp/l89k9u3R4Vu+591g
Zn8T0nRSp15pv0n7mxB2oWNU8hMyfxOuOxU6Gl0iyzfhpTj08/b9ZNZmbDyw
L9o0ktnfjDSl7ymdW5n9zRBt0mqyMmH2N6O44NnojTOYfQcs7ltpXKPG7Dsg
963BMdMfctp3wOH8uN/bXpDlDmCZ2f/rVUpmbUF097DimDNkbIF90iGvw6nM
/ha8cd8/o28os78FA9Lkbbs5zL4jUt8nvXu7itl3BCtmdFCeLrPviNb6PX4V
/zH7jpjhG1u0oDez74TsSSG+qTU3aN8J62rVMz6dIfOdoLH28V/7KLLcCafG
v3wVZElmcZBhcazMbQqZzYGtQ/6Hy93X6fM4+KH/ru/FKjKHg9393njfOEXm
c3BU6fy1fVFkGQdnT6c5OtqQ5Ryk6fWyXT+LrODghfyqylQlMmsrTAwzyvsp
rtH9rWDb/couLyJjK3a7r+pU30XmbMWneerfX28n87di7db3eq4mZNlWLK25
prWLTZZvxbKUMWd9uovp/lbMWjxAFPCMzHLGup/5s2bkk9nOGF/4a/iVFDKc
ocydXX/ci8xxxize8V9f1pD5zvizpvK7oTZZ5ownIbcdE/uR5c7o3DEpmtt0
le47Y9nte/3W3yKzXND34bFPnCNktgvmhax82SkgwwX8i7FJozlkjgvOmhpN
SweZ74Jy9RenPmqRZS44Gbc+260XWe6C60YK842NV+i+CxbM7FSxKSWzXPEC
Wf7/jpPZrvBp+/jkp4gMV6gOHXVHfTuZ4wqsexmcaEbmu8Je2fLb0tlkmSsK
ZDmvotXJcleMC9U2rv5+me674vGiNwnb6sgsN6yPuXHn71Uy2w0ROad3zpWR
4YaqP2q9jgrJHDd8a+vb+XYbme8G2y9L+/iuJ8vc8Ob55iOu88hyN0haVy25
osncd8Mr3Mzk/iui++54JB/lv7WJzHbHPLUPjkPukeEO0z9rdi/NI3PcoZr6
R7VPOpnvjpJOnT4Do8gydzzpVL5V5kqWu2PDg2rp5rVkhTuKPvKfeM5n7nvg
l8aRxIejmPseMG70Wra8D3PfA3NWfTnV0lJI9z1QM6DY9N8TMt8DSlU5s9Ou
kmUemKGb6rPhOFnuAXV3Xy0DCVnhgfMTDgzbGExmeeIXe7Tldicy2xP9IjNS
vq0mwxM7k9dvq5vL3PfEivseJzljmPueUNZx5sQrMfc9McNPcSzgyyW67wml
T34jTtaTFZ5o6126wrCMzNoGifnfoPHnyextaNZTcC5kkrENvAmn/V7HkTnb
UGDUJ7eFS+ZvQ7frH71SB7JsGyZ+qJqsasrc34aljywOc+cz97dBltJruPt4
5v52fIrUix4xiLm/Ha0txqf6dxXQ/e0Y1rXnkVETmbMd+clso6WVZP52TD/z
es2ZYrJsO8wu/PIPPU2Wb8eDpYJuz71kxXb4je8+ZxlLZu2A8bTC+Fwumb0D
MZ8Tf1k4Mvd3QHtX6IlEM+b+DggDHCvb9Zn7O3C+K/nM/qnM/R34pb7tpflw
5v4OlM77OcKyD3N/BwYoXbRKa8+n+14Qe1Xm+L0ms72gMu+DXuYDMrygvZX3
+fBVMscL/iJ0Dj1D5nuho98flQvpZJkXNkS+1g0Sk+Ve6LdROao+mKzwwvch
xTMd3Zn73uCPevHH15q57w0NvaTirBXMfe+evz/OR/yZx9z3xvlkIyOVicx9
b2zSWX83T5257432T5mbzvZm7nvjUI3BsJqvF+m+N55VTe+8/YbM8oGJZtDO
/Y/JbB90Z6RpsEvI8MFLFut574tkjg+8M0uyfI+T+T74ONkl+NpusswH+y9s
yzkhJMt9oNFnzgiPIOa+Dx7GNraXuzP3fbFkx7M1322Y+75QrhsxyMGUue+L
4/Yrd69fxNz3xe+SJS0B05n7vjgz7OmDfmOY+77olXbsC1uVue+LHXdl9h//
XqD7vsi8/MFCo53M4mK4Rq1mwRuyGhdZDhEDlj8ls7l4/G2ZIbeMrMtFZMTK
F82FZHDxUtuvI+o02YKLN/eGbvDPJHO4KJevvfVOQuZy8Wy+4bUv0WQ+F0P/
HPZRDyCncqFx5P6AZ65kGRf5tyKr19uS87hYUe0R/m01Wc7Fk6USdpoBuZKL
uMcxTqd1mLxc+E5YEy+dQG7n4oh+/GEvDSa/H3KTHE45qzD5/VCtsLXw/X2e
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
+Lz8kAfZs2e+PFj9rSOZmwjF9jled2zIvEQktO7uF2dO5ifCOfJjXakJWZyI
w8u6rscsI6cmIquqQrRqATk9Ed6Re9RyZpFliQjNe1d9ZzI5KxGFdc9kmuPI
eYmw2nvBtVWDXJSIp6UVXdtVyfJEKM3n9P7Yj1yRiHvr97h5/NlP/Scirc0p
/34HuTYRSSHdTy+0kRWJyFvwc/qit+TmnvdnrnTH+SW5PREpak/vZVWTuxJh
eG1VDfcBmZUEzoXlRillZJUkfL4yVOnsNbJaEjJf7A387xJZMwnWc7zY0rNk
dhL0Dm7OSzhJ1k5C1o+CRSqHyLpJGKo8Tc93L1k/CVXFaQOzpWQkoVCldG26
iGyahH8jb4x7F0W2SMKeCvF4ixCyXRLY0w2MzX3JnCQcerfrv6MeZM+ee9ys
S5ocMjcJ60bla1rZkXlJaIlSC+i9gcxPQu29soszVpPFSZgldfV0NiKnJmFZ
r/PrZYvI6UkYdv93QsscsiwJ87dz+9RPI2clwWbq2DbfCeS8JNQ91Xq1cDS5
KAlP1M5KxMPI8iQsCZvZ4TeQXJGE2cvr1vfqy/SfBH6JlmVEdwb1n4SoUxO4
Wh1kRRJU/Vw8j7aRm5Nwg6Oro/yO3J6E4Z2lJz+8Incl4RHvlYHlMzIrGbV+
XIQ/IqskQ7hVvfLHbbJaMvQMJO8OyMmayZhi91e5q4jMTkb513fSivNk7WSc
lK6PmneGrJuMjQvchEHHyPrJOHWzPto9k4xkNGlcFg7fTTZNht2l1N8Pk8kW
yWDdO/k0P45sl4z6Y2cWWkWROclQ/blmgnUI2TMZ72tX73jvS+YmY8L+80dU
Pcm8ZGgb+rBZW8n8ZCStHv3piD1ZnAzfhL2G3yzJqT15c38nsc3I6cmo6KXt
FryCLEuGwvNOy8Sl5KxkzE7b3b5Lj5yXDPX4zJHWs8lFPc/HNc6Mn0qWJ+No
/YyLA9jkimQMDPym1KxJrkzG4laTi7eHMv0nY+v8VvfvA5j+e/paf/2FVR+m
/57na1vev7I7nfpPxrFda/1PdJC7kmFy3UOL/YnMkqDEsipnwXuyigQ7hl48
Ga8gq0mQL1ct7Kgla0pwxvPGaeFjMluC4QNWlnjcI2tLoCj69KWphKwrQdzA
TeVdxWR9CW4Mz2GbXCJDgpAWGc/0HNlUgs1LOzSMs8gWEmhZN57SPkK2k6DW
zsPdZD+ZI0HVRO1P/9LInhLsXnD324lkMrfnfp7cLS6OzJNgefLkncbRZL4E
bqsleo9CyGIJREfqlb9wyakSCIvPLbPeTk6XwP1wdHioC1kmAUuv9V6sAzlL
gqMTJilW2JDzJFBN4vJ/mpOLJFj356bSSFOyXILS57kjXhiRKySYwFqeFbaY
XClBdYP+m6/zyLU988+DT2AWWSGBWCLl8KeQmyV4Nvr5Kul4pn8Jro17Ni3o
P6Z/CX5lpQ85oc70L4XB6bORfgOZ/qU41Pdw++u+TP9S/Mj+MPzm333UvxTC
j4tKIzvJbCnG+ELyrp2sLcVmnT7d5h/JulKYLgk17Gwk60txrnzu9WEvyZBi
b/xgt1s1ZFMp4mbVZGlVki2k8BsZfub5HbKdFPwpCyNrbpE5UrgmjatfW0z2
lGLmMe+yIwVkrhQVK+8uyTlH5klR/O9cUlEWmS/Fi4zpnqZHyWIpjqe6TVI9
QE6Vwrx6LX/8HnK6FLfGm7pqpZBlUnQ1DN8/V0zOkuLqZ4ODFQJynhSfnuy0
k4STi6TQnKHWVxFIlkthq/xCIfYhV0jhcN9S56InuVIKM29+6PGt5Fopyn+Y
3KvbTFb07C+aH2JnTW6Wolv2THLcnNwuRYE+O3mNKblLisy+J5UfGZFZKeC+
fbmTt4SskgLW3n68xXpktRRcbC5J19Jh+k/BAzQfTNFm+k/BHtOWs2snMP2n
oG2k8OWyMUz/KTC93LTbfATTfwqmn/ox++MQpv8UFM1+OQP99xn+D08eyjs=

             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.0358167, 0.691123, 0.698773]], 
            LineBox[CompressedData["
1:eJw12XdcDfr/B/CMyI6SEGWlSLISohdKIU0aEimR9t7jnFPndJoyyy4yMyok
I0J2KiGZpYzskFv2r+/jd173n/t43k/vXud1Xo/7uI/7MMzVz8a9o5ycXFMn
Obn//f3//2o2Uuw0Xrt117mLsn8AuRGD5+3YJZZZAeEnrP3dak8Y/b8VYXC/
eZ7RsTKZleHvGLjrvcsdmVUx5ueGSKWEapnVsKpxSEnhtgcya0A3YqSnt2mt
zMOh0+l4bfc9j2UeiXfiOp1e+57KrIk294CLhp7PZdbCLGnZHt9vdTKPgRPm
FLzPrZdZB7cSJvvNmPtCZl3sudtjoKic1sPqntFHW+Y3yDwBhqd9MlJL6Ilo
NpspeqPZKPMkPJy0dUOkhJ6MkWeM4kc/p6cgq+TD4pN6L2XWR/TwW8MlUfRU
KBf/1s27Qhvg5okcD9Mur2SeBpW6iydVTOjpeJC7aJaWgJ4B40ql+C7FtCHa
rm7te/gDPRPDNo+d82voa5lnoSLjlOVVC9oIHmU79SdG08DXwXty9h+QWQDs
tPe7qX2X77Oht7DbbqMffJ+NLscqvlwc+kb2PgfLvl7sFztXZsEcCCZ3n52/
mu9zcdlrYbajlO9zYeY59LPDIb4bI2bglyzHG3w3htPGB5szX/PdBHnxk069
6tQkezdB2c630R00ZJabhyh7j/zzM/g+D4o+uf0ql/DdFE93TFA778d3U+xL
Pd1lhpTvZlD+42yjn813Mzzx/LIu5TTf58O18ebbeRV8n48IP+lY+5d8X4Dm
tSrLSn7wfQHyPXfNPdD7rex9IYxW/ExIHS6zYCGulIq3b9bnuzlG7p0UHTCf
7+bQO6Z9VGsZ3xdh5/ZXi1x9+b4IhYVDDNQEfLdAH8uNFQfW890CHSeZVM/e
w3dLLAiPCrpQyHdLNPcPrblyme9WGFJwwPV4tcywQrrG3B5dGvjzVljavaDt
RLPMpVbYsz26OvAf763hlPTf9fu93snurTHPb3Bi22CZBda431Pc/4y2zKXW
kB8geDBuqsxyNvjk/bTO0Zj3NmgOzzz23or3NtDxsh7+1pn37T9/uaB1vCfv
bXGkQrkpLJT3tnhqapPWUcR7W4y1Gp1TksZ7WyCnapzhVt4vRtPicPVtubxf
jIn1xwpzjvN+MY7E60WuOsv7xTAM6vev41XeL4FX3YJR8yp5vwTL9I9MyX/E
+yXYP/Kw6aNG3rf/vHPp0jUfeW+HvZLX9mNbeW+H87HlFz7JvZfd2+HZ6f69
DbrLXGqHDhuivI2UZJazR7XiseItajLDHp+lBx/4jeK9PXr7Z3abpct7ewha
338u1+e9AxokxwaZG/HeAXf+LJ0RYsp7BxzPHmB9zpL3Dhhu+nj6H3veOyJl
fv/M3yt47wjd/+6q567hvSNK1Keu2eXHe0d03eomGRLG+6XorfwBBbG8X4pL
ASsGyUt4vxRHvn0c7ZLG+6V4P+HZaedNvHeCTr+7+49t570TPiw4lZ+8h/dO
WFtmJow6xHsnOOdrjpmbz/tlKF+iPPFdEe+XQfeUpt7mEt4vwz5v41nKZbxf
huAOQfpTbvHeGWN+TbTaUcV7Z2he3pSk9pD3znhxIFK1+zPeO0PZaXSjTiPv
l+PxwlWFK97yfjmcxBb5kz7zfjm2Hthl2NLC++U4+Ldidd1P3q9Asu2CTTly
H2T3K1B77Xp3tS4yC1ZAu4vf75M9ZC5dgZKKLVen9pVZzgVdlo5XLlWRWcMF
qX0Pxv8azN/nggzDKrHrMJldXKDV9O6//Zr8/S7ImtS94u5YmbNdUBjyq/i5
HvNcMG+4MKyLvsz1LnD6t3jgl+nMX4neEYonzxoxfyWUzQomHjRm/krM3X5Y
L2E+81eil1zuGH8L5q+E04BDtZ1tmb8SbueXiMrsmb8SWie8B1ksY/5KaPg2
XP/qwnxXmDya88zFnfmuWChWntKylvmuEAaH1jn5Mt8VE69X9cgMZL4rzq5b
M/trKPNdkTcz8e2iKOa74pxZt/qQOOa7wtPE8/OFeOa74e/p7atfJDLfDaGP
BPL3Upjf7pe9VitlMN8N2l/v2ihsYr4bboo+rGrIZL4bbp29dqh1O/Pd8FKj
RePCbua7YUyrlv2evcxfhQ2LFHLXH2D+KvRUqs6xy2P+Kow6Oy639RjzV2GR
k1KPO4XMX4X9JvK3I4uYvwrHdMcn/HeG+avgHFOgnF/C/FVoCEoJHXaJ+e74
qOra8V4Z893xTv2f0OoG891R+0wz4dpt5ruj8LDGw2GVzHfHb4OgmOBq5rsD
umNv/3jAfHdsuafxxuYR892xwaLudNxT5q/G56VHIl/VMX81Wi36Oyk1Mn81
rj43XBvwmvmr0fv8QL3ot8xfje0Pxr658IH5q3GhKHbs+8/MXw3ls9c//frK
/NW429Kp8M935q/BwJigvZN/MH8NbF939tT+zfw1cBweXTjgH/PXIO7uwkOq
HT/K8tege+eiQ9ryMmevQWXpnMn9FWQuXYMeASpjfnWXuX4NBMeSAp70klnO
A6Ne5H8+pyizhgfOmbfV+ijJDA/c8N/juVhFZhcP6KtVF2sOZL4H8qp2yL0a
zHwP3Lr7NzJ5KPM9MMd4h++aYcz3gKKRyH7ASOavhdlH2wm7NJm/FhV/Uhst
tJm/Fkd6blnRU4f5a1Ea6FVzVJf5a6E73nn/lAnMXwutqa0xlZOYvxaFI/49
MdFn/lrMPvRO950B8z0R+a+k0W4G8z0hLvnn9GQm8z0xwsp5jD2Y3/7z9sh6
PIf5nlCMabhsacJ8T/SoPLm92JT5nsiLPuM2ZAHzPfG295I3InPme2Hw01n6
jy2Y74V+JqvXaFkz3wuf6/fXx9sy3wu5ZmlXHi1hvhcU68w7dnVgvhf0vmXP
DFrKfC8IHh+fu3kZ872QaLjn5uflzPfGnSGdA1RWMt8b8pozym3dmO+NhK37
rm12Z7435obndb21hvneSFapE7StZb43CkXFPh29me+NF58bTQ18me+NkW4t
Ogv8me8Dt/2/nD0Dme+DJpdLeeJg5vugvIdDyM5Q5vtgQu9v0gvhzPdB75zg
O7cjme8DuVNNqyqimd/+LjQvuB3LfB+I7FovVgqY7wvJc4vzD0XM923/9+fp
7JsJzPdFaZFAv1LCfF/k+FcW7JUy3xd5BcP1dyQz3xd+AR+iclKZ74seJ/Wj
U9KZ74sXoy5lrsxgvh+OHdYZv3wD8/1gs67MfNIm5vvhYoeBHQdsYb4fWmO3
b2nJZL4f7sZ38izbynw/5FvP0Ny7nfl+CJip0MF7J/P9oNE/vdRsN/P9Eff8
fP5/2TIr+mNa4r2O1/fw8/hj0EyHyL25Muv5Q8Ureondfn4+f5h/DssZdVBm
K3/kT6ie+vYQP68/mpcpbN2RJ7O/P5RjVQ2cj/Lz+6M86ljbz2MyZ/jjfX2u
T1k++/ijcEqvuWGFMue33w/+XDTyJPv5o+VnVF71KZmr/OHj++xcwGn29Qd+
jv5P5YzMzf7YLr9aqeQs+wcg9LDJeJfz7B8Ah9ayILkL7B+AZde0Z2ZcZP8A
+JeOthp/if0DkFZoYXbrMvsHIO/WxO5+ZewfgJaNOb+/XmX/ADxRw0DJdfYP
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
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.68343, 0.28, 0.602415]], 
            LineBox[CompressedData["
1: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
+pfm/R9kGDhL
             "]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.21099, 0.531208, 0.953188]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.985248, 0.676238, 0.0398315]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.519913, 0.338384, 0.950217]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.0358167, 0.691123, 0.698773]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.68343, 0.28, 0.602415]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.21099, 0.531208, 0.953188]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.985248, 0.676238, 0.0398315]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.519913, 0.338384, 0.950217]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.0358167, 0.691123, 0.698773]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.68343, 0.28, 
              0.602415]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.21099, 0.531208, 0.953188]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.985248, 0.676238, 0.0398315]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.519913, 0.338384, 0.950217]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[0.0358167, 0.691123, 0.698773]]}, {
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.68343, 0.28, 
              0.602415]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {
            FormBox["\"Number of Rounds\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {{0., 100., 200., 300., 400., 500., 600., 700., 800., 
           900., 1000.}, {-0.1, 0., 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 
           0.9, 1., 1.1}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Measurements Plot\"", TraditionalForm], 
         PlotRange -> {{0., 1000.}, {-0.10789437060794804`, 
          1.1029703956274683`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"Loss\"", 
            GrayLevel[0], StripOnInput -> False], 
           StyleBox["\"MD\"", 
            GrayLevel[0], StripOnInput -> False], 
           StyleBox["\"MS\"", 
            GrayLevel[0], StripOnInput -> False], 
           StyleBox["\"RS\"", 
            GrayLevel[0], StripOnInput -> False], 
           StyleBox["\"STD\"", 
            GrayLevel[0], StripOnInput -> False]}, "SwatchLegend", 
          DisplayFunction -> (FormBox[
            FrameBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox["\"Measurements\"", 
                    GrayLevel[0], StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False]}, {
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.21099, 0.531208, 0.953188]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.985248, 0.676238, 0.0398315]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.519913, 0.338384, 0.950217]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.0358167, 0.691123, 0.698773]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.68343, 0.28, 0.602415]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}},
                   AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], RoundingRadius -> 5, Background -> GrayLevel[0.85], 
             StripOnInput -> False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.21099, 0.531208, 0.953188], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.14066, 0.3541386666666667, 0.6354586666666667],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.21099`", ",", "0.531208`", ",", "0.953188`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.21099, 0.531208, 0.953188]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.21099, 0.531208, 0.953188], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.985248, 0.676238, 0.0398315], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6568320000000001, 0.45082533333333336`, 
                    0.026554333333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.985248`", ",", "0.676238`", ",", 
                    "0.0398315`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.985248, 0.676238, 0.0398315]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.985248, 0.676238, 0.0398315], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.519913, 0.338384, 0.950217], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3466086666666667, 0.22558933333333336`, 0.633478], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.519913`", ",", "0.338384`", ",", "0.950217`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.519913, 0.338384, 0.950217]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.519913, 0.338384, 0.950217], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0358167, 0.691123, 0.698773], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0238778, 0.4607486666666667, 0.4658486666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.0358167`", ",", "0.691123`", ",", 
                    "0.698773`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0358167, 0.691123, 0.698773]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0358167, 0.691123, 0.698773], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.68343, 0.28, 0.602415], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.45562, 0.1866666666666667, 0.40161], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.68343`", ",", "0.28`", ",", "0.602415`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.68343, 0.28, 0.602415]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.68343, 0.28, 0.602415], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendFunction", "\[Rule]", 
                 RowBox[{"(", 
                   RowBox[{
                    FrameBox[
                    "#1", RoundingRadius -> 5, Background -> GrayLevel[0.85], 
                    StripOnInput -> False], "&"}], ")"}]}], ",", 
               RowBox[{"LegendLabel", "\[Rule]", 
                 StyleBox["\"Measurements\"", 
                  GrayLevel[0], StripOnInput -> False]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxl3XmsbWddxvFLS2mjKMQQgoAipKhgBKNIZJB9AwmDQzUC2hADjSCpRNCg
RppYh0YRSCSmEBAlNMgYJSKmqcSgewNFkCFAlYJQsNRSSm9L5+F2oHav9Xye
4/nBP82Xdc5Za737/Zxhrffu9fBf+61f+vUTjhw58uXvOnJk/9/8b7f+55Td
e+73Fze/9X3f2urTH/bgY0974V3tez/2XZd+7QF3tv/xKY+7+M///fb2r572
wU886hXH26c8f/9/3NY+/6VfuuClX7qlfcbZZ+532b7vfvdPuan9/jef88Zn
X3dD+0XLAV7fvv8Hlg9on3VPvPw7vtm+6IL9Do+1f2R/tJ+5sv2n+9097or2
lx+w/4L/2378cnqXtr9/f/ofuKT9ma/tP+Hz7XNOfda5pz7rovaZ9+zt9Id9
vP3G/e5P37Y/sAzo29sXnLT0Rj/gVcvHt9+5fr32W9f9ta9dj6f90+vxtp++
nk/7mvV8269fx6P9pHW82pet49l+9Tre7Qetr0f7N9fXq71bX8+D81tf7/aZ
63xof2CdL+37r/Op/aJ1vrXfv87H9n3X+do+Y53P7fPX+d5e/3vk6Ojdfi9P
OOnk+tB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmo+cXHx2v+Oj4xEdf7/jo
fIiPzpf46HyKj863+Oh8jA/Nx+jdOct53qc+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofno+cVHxys+Oj7x0dc7Pjof4qPzJT46n+Kj8y0+Oh/jQ/Mxeve0
F+4P7KT60HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/N
h+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+aj5xcfHa/46PjER1/v
+Oh8iI/Ol/jofIqPzrf46HyMD83H6Mz7e9eH5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB89v/joeMVHxyc++nrHR+dDfHS+xEfnU3x0vsVH52N8aD5G7z6y
H/YHn1gfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50Hz0/OKj4xUfHZ/46Osd
H50P8dH5Eh+dT/HR+RYfnY/xofkYvXvlMu4n1IfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40Hz2/+Oh4xUfHJz76esdH50N8dL7ER+dTfHS+xUfnY3xoPkbv
nnHufqDvVR+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPz
ofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfPT84qPjFR8dn/jo
6x0fnQ/x0fkSH51P8dH5Fh+dj/Gh+RideXykPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQf
mg/Nh+ZD86H56PnFR8crPjo+8dHXOz46H+Kj8yU+Op/io/MtPjof40PzMXr3
uv1pPv9bWz40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+ej5xUfHKz46PvHR
1zs+Oh/io/MlPjqf4qPzLT46H+ND8zF698Bj+ytad9aH5kPzofnQfGg+NB+a
D82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+a
D82H5kPzofnQfGg+NB89v/joeMVHxyc++nrHR+dDfHS+xEfnU3x0vsVH52N8
aD5G79603BC5vT40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oP
zYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+ej5xUfHKz46
PvHR1zs+Oh/io/MlPjqf4qPzLT46H+ND8zF699D9p519W31oPjQfmg/Nh+ZD
86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD
86H50HxoPjQfmg/Nh+ZD89Hzi4+OV3x0fOKjr3d8dD7ER+dLfHQ+xUfnW3x0
PsaH5mP07rz37b/wLfWh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzUfPLz46
XvHR8YmPvt7x0fkQH50v8dH5FB+db/HR+Rgfmo/Ru0fsh/ncm+pD86H50Hxo
PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50Hxo
PjQfmg/Nh+ZD86H50HxoPjQfmo+eX3x0vOKj4xMffb3jo/MhPjpf4qPzKT46
3+Kj8zE+NB+jd+/YD+Obb6gPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD56
fvHR8YqPjk989PWOj86H+Oh8iY/Op/jofIuPzsf40HyM3v3wK55wzytzXX1o
PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50Hxo
PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD89Hzi4+OV3x0fOKjr3d8dD7ER+dL
fHQ+xUfnW3x0PsaH5mP07rnL511TH5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB89Pzio+MVHx2f+OjrHR+dD/HR+RIfnU/x0fkWH52P8aH5GL173rKfb9SH
5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H
5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB89v/joeMVHxyc++nrHR+dDfHS+
xEfnU3x0vsVH52N8aD5G716wHNfX6kPzofnQfGg+NB+aD82H5kPzofnQfGg+
NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+
NB+aj55ffHS84qPjEx99veOj8yE+Ol/io/MpPjrf4qPzMT40H6Ozrumr9aH5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/NR88vPjpe8dHxiY++3vHR+RAfnS/x
0fkUH51v8dH5GB+aj9FZx/el+tB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
o+cXHx2v+Oj4xEdf7/jofIiPzpf46HyKj863+Oh8jA/Nx+jdJcs4/Wd9aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40
H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/PR84uPjld8dHzio693fHQ+xEfnS3x0
PsVH51t8dD7Gh+Zj9O5Ty7h+tD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+ej5xUfHKz46PvHR1zs+Oh/io/MlPjqf4qPzLT46H+ND8zF696rldXtvfWg+
NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+
NB+aD82H5kPzofnQfGg+NB+aD82H5kPz0fOLj45XfHR84qOvd3x0PsRH50t8
dD7FR+dbfHQ+xofmY/Tu1OV1eO+GD82H5kPzofnQfGg+NB+aD82H5kPzofnQ
fGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQ
fGg+en7x0fGKj45PfPT1jo/Oh/jofImPzqf46HyLj87H+NB8jN7dtP48qQ/N
h+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/N
h+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPnp+8dHxio+OT3z09Y6Pzof46HyJ
j86n+Oh8i4/Ox/jQfIzeXbf+PVIfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0Hz0/OKj4xUfHZ/46OsdH50P8dH5Eh+dT/HR+RYfnY/xofkYvbtivZ5VH5oP
zYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oP
zYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB89Pzio+MVHx2f+OjrHR+dD/HR+RIf
nU/x0fkWH52P8aH5GL172Xo/pD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh
+ej5xUfHKz46PvHR1zs+Oh/io/MlPjqf4qPzLT46H+ND8zF69xvr/fT60Hxo
PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50Hxo
PjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+aj5xcfHa/46PjER1/v+Oh8iI/Ol/jo
fIqPzrf46HyMD83H6LxPyjfqQ3d9SbrrS9JdX5Lu+pJ015eku74k3fUl6a4v
SXd9SbrrS9JdX5Lu+pJ015eku74k3fUl6a4vSXd9SbrrS9JdX5Lu+pJ015ek
u74k3fUl6a4vSXd9SbrrS9JdX5Lu+pJ015eku74k3fUl6a4vSXd9SbrrS9Jd
X5Lu+pJ015eku77E+VlfYrysLzE+8dHX2/oS88H6EvPF+hLzyfoS8836EvPR
+pJ015cc7t0L1vW89aG7PjHd9Ynprk9Md31iuusT012fmO76xHTXJ6a7PjHd
9Ynprk9Md31iuusT012fmO76xHTXJ6a7PjHd9Ynprk9Md31iuusT012fmO76
xHTXJ6a7PjHd9Ynprk9Md31iuusT012fmO76xHTXJ6a7PjHd9Ynprk9Md31i
uusT012f6Pzio+NlfaLxiY++3tYnmg/WJ5ov1ieaT9Ynmm/WJ5qP8aH5GL37
0fXfg9SH5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+
NB+aD82H5kPzofnQfGg+NB+aD82H5kPzofnQfGg+NB89v/joeMVHxyc++nrH
R+dDfHS+xEfnU3x0vsVH52N8aD5G7/5u/feE9aH50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H50HxoPjQfmg/Nh+ZD86H5
0HxoPjQfmg/NR88vPjpe8dHxiY++3vHR+RAfnS/x0fkUH51v8dH5GB+aj9G7
H1r/PXp9aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfm
Q/Oh+dB8aD40H5oPzYfmQ/Oh+dB8aD40H5oPzYfmQ/PR84uPjld8dHzio693
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
RzsevZ7/1V334Xi049H2r+1f27++ctnP1+Pvxpz/VW371/av7V8bD+14tOPR
R5e+PB6v7/Fox6PtX9u/tn9t//qvl+2Xxc+13b+2f+38tf1r+9dvWI73i5mv
x7aXL////7TtX9u/tn/t/LXj0Y5HP3P5ev+1uWT9Oj0e7Xi0/Wv71/avT18+
/sLNZfm5ftPy9T7dtn9t/9r+tfHQjkc7Hv2KZfv5m0+tX6fHox2Ptn9t/9r+
tf3r9afXp5/8+fxeYv/a/rXz1/av7V8/eP387YfW497evvz+cn7b/rX9a/vX
zl87Hu149AX573vze5Tj0Y5H27+2f23/+vfX/a3n8ccffvKj1uNpX/D/z/Oe
tn/t/LX9a/vXH8nrdte6/439a/vX9q/tXzt/7Xi049GvWefT9qqMg+PRjkfb
v7Z/bf/6C3F4LL+X/tg6X9v2r+1f2782HtrxaMej/3D9frD9qu9rOR7teLT9
a/vX9q8/me+jV+f36B9cv9+17V/bv3b+2v61/esnrt+/83P4692/tn9t/9r+
tfPXjkc7Hv3a9edV3yfa8WjHo+1f27+2f/349edtf05cNn6O27+2f23/2nho
x9OfQzke/Zr1942+r7Xj0Y5H27+2f23/+sfX35e2V47fu7T9a/vXzl/bv7Z/
/cr198Pti/N3lf1r+9f2r+1fO3/teLTj0V/0e3J+b3Q82vFo+9f2r+1fn7P+
fr89I38HPmb9/btt/9r+tf1r46Edj3Y8+uL8XXNJ/g5wPNrxaPvX9q/tX9u/
tr/n5e9Y+9POV9uftj/t630+f6f5etrxa19f+/ra13v0+vfkUV9P+3rax79k
/fu2H69tf/f693N7yXNO3uXv9Z329+bYflT7e3CZtufeux+vbV+vcx1s1/6+
8/e/6wnzesBHbl/u7+9cX7Dd17fd19f+nnO9wN+X8/rBOu4n7FzfmB9vu+Oz
3fHZ7vjm9Qvb/X3n+oPrLfN6xDPW9XA7119sd7y2O955/cN2xzuvh9huvGzX
tvv71PWMw89TPri+sV6XPNLzsd352H74ecsH11tsP/z85YPrL653HH7+8sH1
F5/v+LW/N32+v3/n9ZPXrevXD55PNT7e9j6vKtudv+19flW2O3/bnY/u86vy
8V4f2/s8q2x3vrY733k9RrseOLc/cP33LH1+hO3Gw3bjMa8v2W485vUm12u8
3vN6k8/3es/rT7Ybn3k9ynbjM69PzetF2vWBuf1N679/6/M25sfbbjxtN562
G895Pcx242m7+TKvj/l44zevl9lu/Ob1M9evjN+8njavb+nDz9M92P7Q9d/P
jufrHu/42X74ebsH1+dsP/z83YPrdbabX7Yffh7v8W738Yefz3twfc/2w8/r
PbjeZ/vh5/ceXP/ze8Ph5/ke7/UX212vn9frzlv/PX7Hs7+HZDxtN57z+qLt
xnNeb3T97szxe6f55vON37z+aLvxm9cjD78P5fFvuz45rx9q14vm9kes79/R
v0vmx9tuPG03nrYbz3k91Hbjo823eX3UduM3r5fabvzm9VPXL42f7a4f2e7+
z7ze+Y7l94Mb+rwg242X7cZrXp+13XjN67Wud5pf83qtzze/5vVb243fvJ5r
u/Gb13ft3/Wu2a6Xuv5mu/tn83rt+vP+uo6n7cbTduM5ryfbbjxtN5/m9WUf
b/zm9Wbbjd+8/uz8jN+8Hj2vF+s+33Nsf+76/oIHz/vMduNpe5//OcbX9j4P
NNuNn+3ml+19Pmjadh/f54Vmu/lne58fOq4j2N7niWb74Z/Xxw6eL5rtrmfa
7v7svP49n0dvu/Gcz6ef1+vn8+rn9XvXw823ef1+Pr9+Xs+fz7Of1/d9feM3
r/fP6/Ha9de5fT6ffH78fF657cZzPr983l+YzzO33XjN55nP+w/z+ebzfsR8
3vm8P+H+QJ/Pme2uz9ru/v+8nzCfV2278ZvPr573P+bzrOf9EPcTjM+8HzKf
bz3vj8znXc/7JfP51/P+ybyfoft8ybF9Pq/YduM1n18878fM5xnP+zPuf/R5
lNne74f5/D6fMtv78yPb+7zKbDdevn6fX5ntxmvef9Gut8/t8/m18+Pn82xt
N57z+bbzftJ8vq3t9Zzt5te83zSffzvvP83n4c77Ue4HGU/b3Q+w3fqbef9o
Ps/UduM3n28673fN553O+1/uJ5lv8/7XfP7pvB82n4c674/5+sZv3i+b97O0
+xdz+3y+5fz4+bxL243nfP7lvD83n4dpu/Gaz8Oc9+/m8zHn/bz5vMx5f8/9
NuNpu/sbth9a3/X/7s/N5x3abvzm8w/n/cP5PMR5P9F288v2Q+vD7mnb5/MS
5/3H+fzEeT9yPk9x3p+c9we19XBz+3z+ne3Gbz4Pb97vnM/Hm/c/3U80v+b9
z/m8vHk/dD4/b94f9fWN17xfOu9navev5vb5PLT58fP5aLYbz/m8tHl/dj4v
zXbjNZ+fNu/fzuepzfu58/lq8/5u779mPG13f8126y3n/dj5fCzbe38y243f
vH88n5817ye7P2u+zfvJ83la8/7yfL7WvN/s6xu/ef953h/W7gfO7fN5SfPj
5/OTbDee83lK8373fL6S7ebXvP89n68074fP5y3N++PuVxs/243fvJ+treed
2+fzc2w3fvN5OvN+/Hy+zrw/b7v5Zbvx0rbP5+/M+/nzeTzz/v58Ps+83z/v
t+s+n25sn89Tsd34zeerzPUD83krcz2Bv2P6PLtsN7/m81fm+oL5PJa53sDX
7/Pvst14zfUBuveDx/b5fI358fN5G7Ybz/n8jbnewXbjM5+/Mdc/zOdxzPUQ
8/kcc32Ev6ONn+29P5zt8zqj7fP5Cv16Ga/5vIW5/mI+f2Gux3BdxPya6zHm
8xjm+oz5fIa5XsPXN35z/cZcXzGvU8/t8/3258fP99+33XjO9+Of60Xm+/Pb
bj7N9SPz/fnnepL5fv1zfYn1HsbPduM314No/15jbp/vv2678Zvvxz7Xs8z3
Z5/rW/p+4Jlfthsvbft8//a5Hma+n/tcHzPf332ul7Fexfjabr2D7f69y1zf
Mt+f23bjOd+ve67Hme/fPdfnWO9ivs31OfP9vOd6nfn+3nP9jq9v/OZ6nrne
RlvPMbfP92ueHz/fv9l24znfz3muH7Ld+Mz3c57rieb7O8/1RfP9nud6I+t9
+vMi261Hsf096/3db1sfNN+v13bjNd+/d65nmu/nO9c3WR9kfs31TfP9fed6
p/l+v3P903z/37keyv6d/1yvNN+Pda6Xmu/ParvXf66fmu/POtdTzfdrneur
rH/qz8ux3sp25zPXS3n/QK+P7Y5f2z7fT3Ou15rvrznXb83325zruay/cr62
G++5vmu+n+Fc7zXf33Cu/7J+y/HO9WC2G7+53mu+f9xcLzbfT26uH7M+zPHN
/c31Y/P9uOZ6M+vLfP5cb7b+PDixvfo/+PeT2vqW2f49mc9P78b2rseyHs39
/rm+y3oh9zPnv7ey3sb9cetPrDfRfk+Y6zGs17D+QltvYD2C+4fuz9ufdv9d
u94/70+7f+1+kvu17s9q13/dz7R/7X6ldn/O/TvX293Psj99eH3JN3q9cd6/
cX/H9Vj3M9y/0K4/uv7ff8+T7r/nSbueMK93ux7e+yG5Ptz7Nen++5G0vy/n
9VDXS13vcz3Q3++ul9mfdj1M+318Xh9y/ajryXM9xd//2vWS+Xz1eT2hz2fO
52t/L/t72u/D/t60f+3vyfm80vn3lr/H/H7k7xO/T2t/f8zn3c3fz/3+7vO1
3z/9furnk9/X7F/7fWw+P2b+vuL3Gd+v+375+Xmt7c/PSz//tJ8vfv74en4+
+H6vfX/u+13m+6vvv77/ef+r8f3Q99Ojvn/+7PI+J3dtfnk5z3vtbr3nKE77
4B2bBy3Hd2R3Xo5L37E//Itv3fzkcp53bt+W89R373d77MbNk5ZxvG37Ls9h
Sf99Xpd/W/59/K3bZ++nyRNubp+ReXHhcvw3bn9lv/vTrm+/JPPw9ctxfTPr
ta5qX7j8fnlZvp9etf2eZdyubL95Gf+LN29bjuOy7UOX38cvbZ+2HOdnNr+4
HMeX289b9vu57U/cZ3+er998bHmdPrG9O071/ZbX55Pbly/ez9ucnu8D+uJ8
nzm+/PfDm99Z5t+H2ra/fJnfn92cke9zZy6e/ntz6nI4X2g/J99HH73M78s3
91m8Xd6+c5kwV28fuczXKzf/sHwbuKJ91vJj4vrtdy/jdN3mb5efj99s/96e
3aU3b09Zfk+4afOpBcSN7f/Yv2yPvTXvz3LL5uH5OaPXddd3bP9o2c/xzffl
55peXv6T7t6eteznrs335uemXg73gru2tywv292bh8fNTy3z7cjuo+vntx8Z
l7+7fv72U+v+22ftp/cnjm9uXebpHdvPreezuevu/f9u3Z69nm/7n9bx2Jy4
nu/2T9bxavu+tDq9YfvAdfzz8//g+6R+6vr6bX5gfX22v53vs/ovl3H7yuaR
y9e9dPvs/Nx4/joftj+/zq/2+gvx67dPXObZedvHrPN1e8oV+4n0z5tnLsf1
L+37rvN9+7J1Pm/+YPXQ/nh+Tr5onf+bd6++tu9eHF8RB19r/8Lqc/uW1V/c
XNO+ZRnHa7c/t3y/ur6/p6zvr3RzXocb23+T34OOrt8vNjeu32/a6zr049t/
XZzfvnna+v1r+/7lsL+1+ew6H/v6rus1r+7rY7wfss7/7U35OWq8jedFq8ft
+ev3k47H2/J7kvO5dv1+2eNZXub33L1dhuWDJ++uWXujbb9+7aO2a7/vzs/3
+6vPn9/Pff7Y3n+f4ev5+nP/vt7/AVc93s4=
         "], {
          {GrayLevel[0.8], EdgeForm[None], 
           GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxUnXW4VVX3cE/dE/eC3d3dgSiKraDY2IWAWNiJggqimNiYqNjY3WJiY3d3
d7ffHO8c+zm/74/1rLX26jXHPveCeMa8A/fdfJ9KqVT6eLZSqRr5pM5SifoK
kVaOVI/UiNQv0qyRolupZ6QO23pFakZqReodqStSt0irReq0flGkvSINjbSK
8zFmVcfRb8VSrsseNnKd2SP18Fkt0urO3T1Sn0gzRpop0vqRZrC+XqTprW8Y
aRb3vUGkma33dRz1NZxvqkhrmk8daS3zaSKt5PqceZNIc0SaM9KASEtGWirS
zpGWsN4/0ryR5ou0sedgzBaR5rFtq0jzR1og0raRFoq0cKRtIi1o/WLvbO9I
WzofY7Z2HP02dS9zRdrMfO5Im5uz3nbOvUikgZGWjrRMpF3cO/WdIi3uGQbZ
vmyktb2DaSPtVkouiNVLcWkPReAejLS9cy8aaQfzxSLtaM68QyIt7/h1nG+6
SOuaE7PdnZuY719Knoj5fqXkifq+peSG+kHGjFgdaCypH+A46qO9F+7jGO+L
+iGebR3vGNZX8a7J4Xofc9Y72HUYM6KUPMHX8FLyRH1YKfmDxyNt57051vWJ
/8hSMgFHR9kO74e6F+5jlO3s9TCfMe/R9mX8Je6VPY4zZoMjnWVcifPJpWSL
+J9YSm7gi3exp2c+1ZgRq7GljCX1UxxHfQ9jwnuwpznjT3I+1jihlEyzxnGe
lfdgjDn8Hm9Ov/NLyRMxP6+UfFA/N9Ku1se7Hvs92zNxzgvdE21nlvI95Myn
eQ5YPt2c9/IMc/pd4JqMn+D9wdQXke6IdGekzyPdbv3KUrIFa3d7Ns50RSk5
o+3qUvIBU9caM1i4xrhSfzXSZZEuj3SV8zFmouPod6l72c++5Ps7Zn/Xu865
D490Wyl5gpdbS8kH9ZtKyeiRnoN22L/HvROHu0rJ5XGek3beleud+4hIN5jD
+I3mI7yj0Y6/2XVg+b5ScgBrU4wx9/1QKdmCtXtdn34PlpIz2h4xfsTtMeMK
y5ONH/XPy3GeSHdEetj5GPOo4+h3v+vD5iRz3oMHzFnvceeGqedLyRk/o54r
JVvUnykll5zhBdv5PH7WM9Hv5VIyRNxetP2SSE84N+/lU5HOKSXXT5sz70v2
neB985nBz7RbvEti+VopYw9r75SSJ/j63nNyvrdLyRBt75WSD2L4oTGDhQ+M
JfXXnQ+u33U+xrzvOPq9YTucvmkO42+Zs95Hzk38vyolT7wfX5aSD+qflZJR
GPzadhj8wb0Tk+9KyQ3n+cZ2GPnYubmPT8xh/FNz5v3Wvox/xTjw3vxUSrbg
rlbO+BGf30vJE3z96Pr0+62UDNH2SGfG789I/xozWPjHWFLvXs574T6WiJ+D
D3cmU39HetJ+P7s+nP5iDuO/mrPef87Nu9IoJ0+co15OPqhXy8koZ2iWs53P
ko5ynol+XeWMK3FrlbMddkrlnBtmy+XMYbxSzpx5O8vZl/Ff+G7dWc73Hh75
2TZVOc8KazOUkyf4Wric5+R805eTIdpmKicfxHDWcsYMFmYpZyypD4vyepHW
jzRjOedjzMzlHEe/acrJPZwuUs51uL9py/kM3mcr59x8Zs9fzncDvuYrJ1vU
5y0nK9QXKicf7HvBcnJAfYFyjqM+eznn42fCHOXM4XrOcubwPl051+fMj0f8
H+tMvlYtZwy4117ljBn1ZcrJEEwtWs5zwN3S5eSGtuXKyQRxW7GccSL+K5Qz
ftQP9876RFq2nPMxZvlyjqPfk7GXyfGL9R+w3kqWl4jnS0X6S057ODfvR+9y
MtQt0mrunfoq5eSSM6xuO+zPVc474J1eK8pTlzNWa9gOLys5N5z2NIfrlc2Z
d037Mn7ucs7HZ8A85cyJ2drOTcz7lZMnYr5hOXmivkE5uaG+STljRqw2Lmcs
qW/kOOoDIi3pfTzZyrvZKdJmnm1u73gG2exjDtd9zVlvU9dhzDbl5Am+ti4n
T9T7l5M/eNzWdt6bXVyf+L/A50fsYzH2FZ8nz3Qm75u7F+7jJT6Xos/iUd7C
Z8z7XDyf0plMHeFe2eMBxoyY7GdcifPuskX8h5STG/jiXZzeM+9lzIjVnsaS
+h6Oo76OMeE9WNec8bs5H2vsWk6mWWOgZ+U9GGQOv4PN6XdwOXki5gfJB/UD
PQf1w1yP/e7vmTjnoe6Jtn3L+R5y5qGeA5b3Nue93Mecfoe4JuOHe38wNTnS
GZHOjPRopNOtjywnW7B2tmfjTEeXkzPajpEPmDrOmMHCscaV+s2Rjox0VKRR
zseY0Y6j3wj3sqF9yfs5pp/rjXHuLSNNCUZ2jPzUSG8HF89EfYcovxrlVzqT
wXc7k/fTIo1z78ThrHJyOdBz7lzOd+V4594q0gnmMH6i+Tbe0QDHvx7zPxXr
bhflc+UA1q42xtz3+HKyBWvnuD79LiwnZ7RdbPyI26XGFZYnGD/qn0W6rZy/
F17kfIy5xHH0O8/1YfN8c96DC8xZ7zLnhqlry8kZP6OuKSdb1K8qJ5ec4Trb
+Tye6Jnod2M5GSJu19vOe3m5c/NeXmEO11eaM+8N9mU8n7X8POf3jDfjPp+O
+9w+nt1i7GHtrnLyBF/PeE7Ox8/v0bbdIx/E8KOY59mY56QofxDl9zszhrc6
H1zf7XyMuddxJ3jHtI/yrslh/A5z1vsk5nsu5j85yo+Xkyfej8fkg/pLreTu
4UhP2A6DU9w7MXm6nNxwnidth5HPYv7nY/wpUX4h8rGRPxjpi3j+YiuZf8q+
jL/JOPDePFdOtuDuPeNHfF4uJ0/w9azr0++lcjJE26vyQQzfMGaw8LqxpM7P
MH4/4veVV5yPMa85jn7Puz6cvmAO4y+as96bzs278mE5eeIcH8gH9XfLyShn
+Mh2Pkve90z0+9S4ErePbYedt5wbZt82h/F3zJn3E/synveen138bvVlOdmC
u+7V2Gsl5otUreTZONMPEYuXIxb3Rfkr+8LUT3z+xPP7o/x5lB+gL/fZShZ+
5p6jPCny7yP9Gn1ea2V8f4/y61F+KMpLx8/HrzuTa/5y8a14/k2Uv4tn33Qm
s7+V8/Oaz+9/5Yn34x/5oP5nORmFwf9sh8FKJVnhPOVKMkH9d+eD5T/MGc9f
Wk6RnV8jPeLatUreB7GtV5InWJu5kvHgjjsq2U5bZyVZgalGJfvCUVcln8Fd
90ryQQynqWTMYKFbJdtpm6qS7cR26krm9GtWcj5YblUyZ71pKzkH78R0lczh
aJZK7hGOZqwki7A2UyVzzjBrJdv5DP7Lu+R9na2Sz/jz+hyV/HMF7Exfyblh
eYZK5sw7eyX70u/viOFfncnO385HzP6NZ29GrL8mRhH3t6P8LXHsTHYWijlW
qeTdcdbO6PNB9Pkp2hatZGzgYolKxo/4L17JuFJ/J/p+F/m88WyRSL8Yz8Uq
OY5+tZjz3VbyWY/ye61kuBnl96P8Y5SXrOTc3MeKleSJ92OFSvJEfdlKcgl3
PWyHl17unfisXEluOM9KtsPLUpWcm7tZupI5XC9TyZx5e9qX8Y91C24jvVWP
34cqyRlMLR/vUbeuvPu1KskKTK3q+vRbs5I80bZOJVmBkfUrGT+4WK+ScaU+
W8z3WdzD/FFe2/kYs67j6Nfb9WF2dXO4XsOc9fo4N6xNH3N+FHPOxVxR/jDK
c0a5XyX5g7UZ4/nH8Xxu9hrl7l3J3SyRfxrP5+OOozxP5JtH6uvcvIsbmMP7
hubMO1P0/6SVPMwR5c+jvECUt4m0YCV5mxCJ/3iyb6T9PRtn2rGS3MDXdpEW
lqmdfAaDAyrJCvEcVMn4wcXOttO2i+3EeaA5/bZ3PrjewZz1BjvHcpF2NV8+
0l6VZAKmdq8kl3C3hzl8DbWdd2isazD33j7r5TnhA46GODdc72a+ovfRy377
2Zd72dN12McB3hMxXyLu9tu42y2ifKDP4O4wuYGvgyvJKEwN8xkMHiErxHPu
mGeuruTicNtpG247cR5hTpwPcT64PtSc9eaNOb6I/WwU5fmj/GWUNyYOUf4u
yv25+ygvHGkz7j3yb1rJ1TK8T5G2jPJBnoN9zxnPtor8+EgnRtq6Ikfx/KsY
u0mUv45808hHRTqhkv3pd3KkbeWIeP7nz5xTfEacurqSSfpf7X1xvrNkCHZO
ryR/8HW2z+DuHLmBl/ONJYyMs522c20n5ueZ0+8M54PlM81Z7wLngK8LzYn/
pTIEFxdXkjn4usQcdi6znffptEq+S+z7cp/BzpWywh2Pd24Yv8icea+wL/2u
si/3cmoluWbeid4T8b/Peyc+1/gMBpeLu122K9m5rpL8wdcK8ez7iNmRUe4Z
5R+jfHSUV43yL1E+Jso9ovxDlI+K8k+Rj4z81kirxPOfWxnr650Plm8wh9ne
0efX6DM6ymtE+bcoHxvlSZFOkot7Io2Rq3vNOcMDtsPItZ6DfT/oM97vh70L
7njpmP+4yO+KdHcly8z7kH3p94h94Wiqav7e93YlPwPgkZ9tk2UCFp6RFZha
JX7WrNWVZ31anmh7VlZg5AXjBxfPG1fqy8Za/0b+X6QpzseY5xxHvycqyTTM
rhvrrN2Vd/mkz2D8ReeGNfZ+tfF/Uz6ovyFb1N/17oj5OzJxrWeeaP0l5+Pn
wMvmMP6KOSw/5fqcuW/s64+I401R/tn7JQ4/GRvqm0aff6LP7VFeP8q/R/nG
KG8c5b+jfFuU14zynZF/EelrYwYLX/2fGC5XzTvjP55vHv1Xj3RH1L+s5Fj6
/Rnz3Rz5R5FWjvZbIv84Ur8o/9VKVr9xbvj6VQ4ejfSLe6f+YyWZ4wy/2Q4L
r3oHvLt/RnrcWP1u+2ORvnVu3r/vI91fScZ/MGfeP+zL+Necj/f7dXNi9pdz
E/NaNXki5tVq8kS9Uk1uqDeqGTNiVa9mLKl3VHMc9QFxD7X4/fKTKO8U5Wpn
3k+rmmdjL9wxrE/xrsnhulzNnPWa1VyHMf1jni26kq+pq8kTfHWrJn/wuFW0
/xv3/16UB0a5I9b9lDkj/zDyGaLvNvH8v+jzftQ7q7kX7mOHeF7pzJh2VfMZ
827HP8SI5x9Eeflq7pU9LlbNmBGTRaoZV+I8dzXZIv5zVpMb+OJdfNozz1/N
mBGr+aL8nTGcp5rjiO3fxoT34B9zxs9VzflYY45qsswam/E7ZOSzxrPZqln+
PNLs1czpt2Q1eSLmS1STD+qLV/Mc1Jep5nrsd9FqnolzLl3NPdG2cDXfQ868
QDXPAcsLVjPnvVyomjn9lqrmmoxfwfuDqeGR+kbaINLBXVk+ItLK1WQL1vpV
22fqWU3OaOtVTT5gqnc1YwYLq1UzrtT3iNQj0kqRVnE+xqzqOPqt6F6q9iWv
Oabmeqs7N3923y/22Rk8zBjlfaLc6kyu9opyI8rTRvmAKHdFeaYob+TeicOG
kWbxPAdFn27RZ+YoD+7Knw1rRNotykO6kvE9Iq9Hn2miPKgrx3JXe0e5Gc+n
i/Im1eQA1gZUM8bc95bVZAvWNnZ9+vWPNK9tW1czfsRtu2rGFZa3rWb8qPP5
wc8lfifayvkYs43j6Lep68PmZua8B5ubw/X2zg1Tg6rJGT+jBlaTLeo7V5NL
zjDYdj6Pd/FM9NutmgwRt11t573cwbl5L3c0h+udzJl3iH0Zz2ctP5P5ubt9
3Of08WzdSHsae1jbT57g6xjPyfn2lSHahsXYXbsydlNHTNaO/OBII4hp1NeC
DeeD60Pj+SFdydQR/Jkr+qwZ5aG2w+ne5jC+jznrHR39j4q0TpSPlCfejxFy
Qf34aD8wUp8oH2U7DI5278RklNxwnqNth5FRMW6azryH0VGeNsrrRfm4KE8X
5fWjPNK+jN/dOPDejJEtuDvH+BGfk+UJvo6LtIX9TpIh2sbKBzE83ZjBwmnG
kvrjMsjvK6c4H2NOdRz9jnd9OD3BHMZPNGe9M5ybd+V8eeIc58kH9XHVZJQz
XGA7nyXneib6XWRciduFtsPOmc4Ns2eZw/jZ5sw73r6M578J8HeE/Hevi52P
+F9iTvzv9WycaaaIw0GRX8ndwm3U9+dcUZ65M9kbF+VZo3xolK+LNCzS4eyH
z5B4fghnifJsUT6M2HVln2uJRZRniOcHRPmaKL8ZebdaxCLKM8bzA6N+QzU/
p/n8vl2eeD9ukw/qN1eTURi8w3YYvEdWOM/dMkH9RueD5ZvMGX9XpGPtd73n
YO37vA9iO0meYO0548Ed3287bQ/LCkw9YF84esRncDdZPojhE8YMFh61nbbH
bCe2j5vT70Hng+WHzFnvSefgnXjKHI6ed49wNKWaLMLas+ac4QXb4eIW75L3
dd34c8H5XcnIxfzZOeJyaZSfdm5YfsacecdHnwsiTYjyBP6OJ/pfFuVbnY+Y
XRbP54znl3PWKF8R+WuR3pULOHoHJqxP5O+Fov/VUX7PduLzobEkhh/ICvUf
vXfu6WP54EzvO45+18ac50SayN67cq23I33kfIz5xHHs/Sv5gKPPqskfPH5u
Dndf2w53P7k+8fnGZ7xb31WTJ3j5oZo8sddPXYd5v7Uv/b63L/261/IdeSvS
z84NazfG/uflv69E+Q+5gZer4vnc8fyqKP9eTeZo+6uazMHLv8aSGP4jN9Sv
4O9qOvPd/9P5GPO34+j3i+vD9a/m8PubOev959xwtwD/fSHyRpzj1ph/fv47
BDGJ8nVdyeDt/D1JPH+VGER5vii/xH1EeZEovxHlO6O8UGcywz/6ZW5YLtcy
572s1DKH/bv5uyD++0SUp6rl/RHrqWuZw9o2UV4w0kKRFqnl2TjT9LXkBr6m
qWVfOJ2hls9gcKZacgNrs9YyljAyYy3baZu5lu0wNUstc/pNW8v54Hq6Wuas
N1st54CvOaL8ReRfRpqvlgzBxdy1ZA6+5qllDjvz17Idvtap5RrMvUAtn/F+
cM6f5GjOWs4N43PVMmde7uNHWV64ln25l3lruQ77WLSW90TMn4l7XjruuTOe
LVbLZ3C3dC25ga8laskoTC1Ty2cwuFwtWSGeD8Y8i8Y81SgvW8t22pavZTtx
nhR97u/KOC9Zy/ngeqla5qz3cLQvFvPU4tmjUV48yh1Rvo/fmSNfLdITUV4y
njej/FSUl4pyK8q9a9mHn0eL1/Ic7Ht1n/EurllLnuDoNn5/jrxnpMeivERn
cr6Gfem3ln2n8b7vrOZnyto+I05HROoTqW+knWt5X5xvg1oyBDvr15I/+NrQ
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
9eTqYH63jHyTSCO65fP+kbauJx/EcLt6xgwWtq1nLKlf7P3tHWkr52PMNo6j
34kx5+Gxh7mjfHKUj4jyPFEeSznSvFHe3rl5VwbVkyfiP7CefFDfuZ6McobB
tvMe7OKZ6LdbpBWM2662w84Ozg2zO5rD+E7mzDvEvoy/xDPtE2k975JY7iEH
xH+/evIEX/vKzWreB4zC1P62w8jBxo+4HRRpTeun8GfPyEdHOlRWiOEBjlvD
vTBfL/fUy/UOcT7GHOY49ntWzDki7nnDKB9eTxZh8zR+Z+mWDI6L/Mjo0y/K
x9ZzD1tEOiqebUQe6fzoM7Iz2bgoysdEebMoD3Md5j03nh/dmQxfGOVRUd40
yrsbB+7rOOeGq3HGmBieJCswxbvY07s7sZ780XZKPfmDkdOMH3E71bhS39OY
MP5k52PMWMfRb4zrw/7x5jB7gjnrne7csHaeTMDUufXkifrZ9eSSM5xvO2c9
xzPRb7x74kwX2A47Zzg37+KZ5vB7ljnzXmhfxj8R93l63OfbUZ5g7GHti0h3
RLoz0lX15Am+7vGcnO/KSAfaNlFW4OuymHNCt+Ri9/icuaRbxvNV2iJdHulq
52PMNY6Dr0tdfz/7ku/vGHKYvSLmGx17PiLKF8NM5LdHuinK4+GDOfl9uTMZ
4xz0gf973Tsxubue3IzxnLTD6VUx9tgYO5xz8Tt1lEdw//DMOpHusi/jr4vn
x0efo6N8fz3Zgrspxo/4PCxP8HWf69PvIRmi7VH5IIaPGzNYeMxYUl801lq4
W/6d2SPOx5jJjqPfJNeH0wfMYfxBc9Z7wrl5V56XJ35ePScf1J+pJ6Oc4QXb
+Tx+1jPR72W5IW4v2s5n25PODbNPmcP40+bM+5J9Gf+lMeBeb4jznRD3OTLK
rxPverJ2J39uiufXRfkHz8n5bo/nJ8bzazlf5DdE/j7n5bMo6jfTN8pjOzN2
bzgfXN8dz0+O59cTlyjfG+nGKL9pO5y+ZQ7jt0b7Ld2S2Yf5s1uMvSXKX8sT
78dXnoP65/VkEwa/sR0Gf3TvxOR7ueE839oOI4+yl0i3RvnmyG+L/NNIn9Wz
zLzf2ZfxrxgH3pufZQvuao2MH/H5Q57g6yfXp9/vMkTbX/JBDP81ZrDwj7Gk
zs8wflfid5c/nY8xfzuOfr+4Ppz+ag7jv5mz3n/OzbvSaCRPnKPeSD6oVxvJ
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
2/C3LeCfpagvXEpPHP1wCe7iPhYppTuOtsVK6WXDK7eEe8TNNp/zsd6itjNm
cdt3dK94x3hP8BQOdA1ig3sNJxp87F5Kf9yM3tn6pWSIZ0NKbXfdHqW252+o
sSTfq5TOyPWNTQ/7Mm9P2xmPF3GQ+8B9SBlP4vKus2up7Q5kDTjA71b4A8lx
v63u3vG6wcSh9lvT9gPdC58N+N5g5TD7we6+rgHL+1nv7Xz7eYZhjiHGI7xH
Yn6kdZxqj5XSe8U58JXhLYOXUaV0ycHjUY6BtWNsg5djS+mBK9x+Y0rJ0Gj7
wdBx9itcgNTh+Gjn3dh1qMPTCc4FXydahwM8b/je4AmH28mlZGWs9cL5d5pz
4QjDGVb4/2iDm7M8N0yf5BrbOh/1AbafYYzPdswOrj/WGONxO8f7vbaU/jXi
f55t8IIzDpccDOGMwyUHaxfbRvwmlNIDV3j+LislN5fYj7hear/CC0gdNi90
3j1dhzpMXeFcMHSldVi4zr3C2cRSutwOde/UYe16++3mfjlP4QKkDW7wvuGS
g9OrXONg56Ne+AIZAzc3O2aCP3v5uXuU8aHtMn8O87OW8+Apw1sGKzjjcMnB
E55CXHJwdI9t8IH/7d5S2/OHW+54n91jjO+330m2U4fTO533WNehDk8POhfx
fsg6HDxeyncGnh4tpcsNViZbh5cn7DfK/eKqg5WnSumH406fKaVLDqYedo3T
nI964Qt8yjhMccxI57vVeD/nfXHfH5bSvwYLz9sGKzjjcMnBE844XHJw9Kpt
8IH/7bVS2/OHd+Zyn71qjN+w31W2U7+klA465p3gOtTh6W3ngq93rMPBR+4V
nt4vpUftBvdOHSY+tt9F7pfzFC7Aj72Dz0rpkoPpd13jOud7t9T2BX5iHD53
DPH+wjox/6qUf2Z+OX4heDvSwt3zPDjLcJjBCh45/HHwhJvs61Jy9INtD5bS
I/djqe35w1f3gM9+MMY/2+9h26nD6bfOy3co8l2KeFfuc03a4Au/3G+ygOut
8AeS44GDLdxuON4K5x/9uD/OUbgEyXHJ4S1kTnjGY4j7EGdc4Qhk/KOu+atx
xd3GvcANXjg8btwxHjb8a8SfZ/SDDzxGuORgCA8eY2AHTxxtMIE7Bw8cccMj
hlcMbnhGP+KKA45+xJV26rCJq4554ZJ1qMMQLjLmgimcZtSJPQ449gpDONxw
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
+Q7x0dF/pe75Xa7TdeVzvod5hq78TmbOem20/9KZ32Pe6Mp8fs9Onzk9y8fe
A/f2gRxyTr4zmnMv2ZXfIcx3Bc/clc/5zmr29rlzztqV32XNd1av2D2f872/
83Xldx3zncbsk+8r5ruvp/I53509TVd+7zHflb2AZb7TmD3zPdh8B/sK3bPM
912P4meFc3Herz07e/jOvS3eld8RPdo9s3++/7pH9+zDd9xe5/2z73m68ntu
R7hnvueW72fmO1iZn+9WZvw38rOi/fku3JXsz3erTvbzBJcWZ/nRsw/3O+v4
nrptu/K7Mfkey9W68rt5+Z5e1uC7X0e6f76/9xjv/zfP0qcrv9OV72Xt2T37
8P29/6+pe4+7fqzyON40DnHvTWNK01GqmRw6TQeGRCIUMimnYkqSSCJnnUhK
RE1SxqFySDqIVEQhFZJKKGeVQ0oyitQQNff7uT779Tx/PK9n3dde1/pd11q/
vX97X+v7XWuN6dBRK/EF6ajJe8h0vAfY/cq8vHLXs371XdX1fWWyup2b9X5R
W9V7Rl1XNV03nRuy+qvWrP6qesJeu6/314unY1zNzq3mRr1Q9T/558F85Rpk
tWjXT0e92g3yidqzpxdfdu1XzU81bN8xN2p0qmH4wXmdtabjtTPn/994btQY
VbtTXVB1SN/QmJqi28+N+qLqjm4xN+pMqh25aeO3t3e1SRfscTpk9R2tVW1T
a//Q/Ph2c+PvXbKjpqX9qm+pPupX01FvUb1CdSzVq7SmpVrjHr2uxuMZ0xED
67ZmtR8f25onrX/X7K/X/cMm364zHfrqW750OvTVJnxr95v6m9apRqK6mn4f
eN57nq8/HTXr1P06eG7UTty3ay3bvvhc7cSXt+bl8v8Rc6OGnjp7h6SjXuK6
06Gj7t1+6aixqLYdm2o4svXofHLA3KjXp+7iR5PV8Tt83s5Rc6M23lnz8nvn
Ftbg8796eV+bHz9obtTL+3t1JNSLOLoxdfPWm44aegvq8s2NOoHqRh42P/6y
6fjb3uns016ekB+s1fWt/fC5UYdNDUH1ldTgUqvrs42rBWdNT2mNJ82NGnFq
eZ06N8bVeTttbtR8Uxfu+LlRQ0zdt6MaZ8P61Y5TA3CD6ZBvyD9PzufsktWR
OzM76qp9em7UWFM77ppqitH9yLydDaejftnXp2N99nCEnOzc0DuiNauL+I35
8VPmRi0w61cHTJ27s7K/eHtnT226b6arVth56asV9vvqeKghY+8r5YevzI2a
XeqgHTl/rVdMRw0se1H/Sl217yWrHcTX6lvx/aVzQ1a3ynXVv3pU131uazi7
falvdVn/q5Fl/avmq1dOx1x1wDaejrnqG9F/UfZ/NjfqFKmPdNHcqJWkztg1
yTu1TvWO1OzadDrmqjfjNePqH900N2r+qM9zYTbV9rphbtRW2qV90VHDyz/j
6n1tNB1+U3Prp3Ojbo8aT7fPjfoqR7e2lVvDx+b1XzUddXyumhs1f9SMOmc6
1r1Ga1qz9YuROj9q8qiN4nW1fv7b97e5ofdN2I307sjmp/KP6+zYXtT2USdq
s+mQ1QV6oHWqy3Hr3KgPox7QX5LVh2FT7ZdPtq/Vks0xrn7Lw3Ojhsvl+fMl
+e0/p0NWA8a66djH7/pMMIYDA2sOe775dNyT6ny8IR4l7uS35seXmYyaEdam
rog6NktORq0SNUk+7vN2Ml5T/0J9kgdbmzowP2y/G7avc+f1/zo36o88ejL+
Vyvm/rlR50StoaUmQ1bDZLnJsKPmhs+0V7ZfOpu2hsdPRg0KdSesTQ0KdVQ+
MX+t106H3vnz/z9vMjjk57XmV7XWzVr7a6bDvvoWi2dT3RZ1Meiq8XH0vM4K
kzHniV1LzYQV85O6GatMBg9d/QR7VE9DrZVnTUa9BbUU7Gvz9m79aiyoocHm
Fu3l+ZNRS0H9hOekg1PvHx31GqyJjjVuOR021VR4XNdS+8N6t2r9L0xWM2Ht
1okjv9Jk8OjVhlgrGY/emvHo1YjYYjr2ogbIp+blbabjNfxqvP6P5Ac1GdQY
2Xo6ZPz+b0/HHrZt3du1l/vmxr2k1tIxnkGT8dqhPeM8p3G4cXXxu9ecDM64
ugOvm44aAuoAbNY4bvirJ4MnjvNrTW9ujWs1fmh736E90tsh+/zzxnz++umQ
ccdfOxl28K8vaJ342JtOBtcYP3276eCV40pv3PsI1337dO4qpta8bWvG9z+3
Ne/S+rfMNn76+pNhU92D/5m3v0Nz8E7p352O+1othbdOhq/wlHeZDP7pPa1/
13y5x2TwXnFdXevt7ct7Hwf2zta8e58DeIw4p/iue6aDw3gc/0yH3oWtjd4b
psMmXux2XQuP2lrf2dqPn9fZdzL+ftN0rBOv0frxZ/Gyt58OGX/2HZPBhcTd
3aW94Gt/oHF8zA9OBjcTV+47YjEZfNr9+x8nd490ntBe9ssPal6qH6fmnH3i
cNq3NR7Q3o+eDI4VTuiBk8Hdw6U8PB38zaMaf3f6OKR4fBdNx/rwgt7fOI6n
9eP64XieMK+z43T8bc04objAD0wGHhEW8c3TMY7bhyt4YPvdaTr4ege3HjJu
6XGTwRPEDfzvyeCR4R+eNhk8sq+0ZjIe4qfn7fzPZNj97rz8oeaf2ly8M7wm
+8BLNJ9PcMe+NBkcM5yy0yeDK0SmZ9y8naeDm4aj972uhYd20mTwlXDVTpkM
jhLu22fglyaDp3R2OrhL30wHd+nUXv9y12XvrPbuWge23yNaP44KGR/pbdOx
zttbP64TjtxFybhOX58Mjgxu1Ycng2uJ33tZ4zgyl08GXwanwPwj88mFkyHj
T52dzk2t/6j28pbpsIlreeK8vOt0vPb99o578/bp4N3gy7BJxs86aX78isng
31jzMV3rpsngdOBcXJqMe2McTh7X4xeTwcuAk99tOubiTFw8L58/GRyeK/sf
3+ey9Kft97j2fttk8DXwOHCAcCrwKW6ZDBmPgx1cD5ygk+ft7zENrz8d47D2
d00GFwDm/+7JwP/D81ufa+FsXJcOnskN6eDOfG7ezhLT8T65ZDr2hjOAB4Av
gTtw32RwJeD/xZ7P3AuXOlfstfsngyOAC3DnZOC8YbzfOR0cARhwexOTf2qP
9F+WH05tv643u751n5yfT5m388fJ+PuB7MONP2I6MOrw5z9Ix99wxvDqJ7V+
GHVcj79Nxr5g2veaDow6HPGe06Fzav6ES8et+Gvyifn2C/nZfk/PJ3TOaD0w
rGRY5x90rupMdcXpwIfBg02nA2MM24yPcmbrtJezWpuYwKrCqX7eb+HpwMnu
nQ7cK/wiHdjZq8PRuv7cdNj8eft1Lde5bH58qenA0T6m/2FonzAdmMjVWts5
zd03GS7S9c/tWj/oDNqZ85Mah5Pcbzowk3CC1gCjC8u9TzIs7mPSWbzr8gm8
HLvWYE9sfrv1ODPXa9xZ9/6Nw0ZdMy9fNf/vQp/L04GjgnlZdV7+zrz8748Y
/180/+/N8/IPHjF60186//8OvWbc33rYX/KIcW5PdubG9irz/y6Y//sFjxj/
v/AR41yOnQebZ45zfmu8tHU6t7s4ndlr+qTLA1ya/oqtGe7L6/YpL0DnsnxL
/n7rcc2Lk+UKfrDItS5r/Io+T7y/Li5GdJyt633rDP8nndcfXo5Av2xn8nrA
68n9zP6XI5Ef8foV6TjL/2my3AUd+QXruaL10/9p417/UfLstZXSv7L3xQ+S
Vykv4f2yXeNXL70wB3J1PrEmvaK3blz+Q87Fnn7evqztmtbvWle15h8lb5uN
a9Inm39Y/ry8a7Fz3SJ+uyWdyxt/XfKN6ch7XJ/808aPaF83dV25nF+0L3kQ
40e2tpvTvzL5yOzf0PiPku1FPoedj2XP33Ia+h3LnXyrHIq/v934LcnyKrcm
/7A1H94e9VE+P/n2dORYftm1DsvWh9vvbTMfpm+u81t9l5z9XtG9J2ekv5Y+
W86o5TnkReR65Bb0uJWnkA/Sj/nC8j76MV9UrkZuRl5GPkSu5bvltu5s79el
c1Frviv5tGzyoXyCnpdyDfJOv21tcit6AMvX6BX8h2S+uid/ep2e/Iu8DZ27
07k3mR/+mN++la3zygfdvYj+H9v7edk9t7n6/t6T/Kd05Hwe6rrXpMPPcn16
DMuz3Jz+Pfnhz/lKzucv6Rh/IPnaxv/YuF7L9+Xb/8tvfCM2ck1yPvenf0t2
6MtPPZisB67c0pPKMflbbsj/DyXLLz2cbF//m5/J+uA+pfG/pyOPxf6/PXLs
n63f5f+/Nfe29M3l43vyMx29eFfofiPfXb5MX175IDkYvU03Lwen/+5Ty3nR
me19ie4ZOZ7FmyvfpDerPNQsNzbr80tH7uuL2RTHH05Hjs/1fpVN/vxNc9nn
W312/zVZ/917i+NS6fAHHT7XS1cOTP5L7k+PVzk+vYG9pseueFinsV9lk468
Gv2tyqPR37QcmT6YcnBya8s0Ls+1fPsSR31bNysX+g/5Wc7t0fmEznLJdPSm
FaPbkuUWb2zubJxNcb+ruZu19mUXsUme7enRrc3cx6QvRv/S+uXr5O1eUx5y
+eTfpPO0xh/XPfCbPh+2yM7j0/999me5Xz1x3Tti+tj2fk/6risvyIf6YfrM
0X+Xv+W0fA7qWXfwdPSglZsTPz1fNy4mTypG8onG31ssVijWZH1e39e8FdIh
myP/KK/41MblUp/cvqyJfGjxWjEfsvm09OVG9Y49qFg8Pf/Tf0bX5ZN/zefy
lnqCfjV9ebcDe389M7/9Mfvvy87T07kv/YPyidyiOfd2rQPLl66Uz/Un1U/0
jGzTl/OUw5Tv/ED6qyS7B/SpPST52Y2Lz3OK1z3piPVf0jmkcTofbO4qcwvz
t6sWO7ng56Yvb0r+Zv5/frF4T+vWU1Ve9d9bv//9Lccqn7pyNuVdX5AOv72w
uFjz8+YWxvB5xfQP6ZyZ/KLmev7e0fPigcbpXNO4Z59r69ep7yoswBrFUX51
9WR5UePym/K/a+Zza9Yj1jP9kMblc+WJ5Yvlcx9KNg5voNepfO/pyQcWu7Xa
O5svSV8s9Ig9J3ntYidnvU7X5e+X5v8/tmZ7lMvWJ1Re2970OtXn9OHsf6Pr
rp2O9yR9/QHllOnLI9/bve2+lV/mK3lkeexN8wldc+Sg5Z83SIfuy5PFVD/U
W5I3apyfX9GaH0hH7OSkN0r/gXRube7L5xbGbYPWSeeV6csBvzJ9eWnr/HVr
3iT5oeRZjPRD9Z1NLn39bD7cuFjIY2+WjnvBPSGnLTe+cX5gZ7Psm+v7ns88
+W/fCfVUFLfN+wzU00EPCbkndvTvlKfWk1GvUHnwddM/u7W9Nj/LmW+RjvGt
ks01vmzjeojKcf892b7Mp6fno3y4XPXLyum/Jjv09QqFr5Bj1i9Szvny6cAM
+Fv+fJt05PT1KJVzl5PfLvmRyfL2Yrp1cWd/m9Z2ZnNvaz1bNb5YPuFb+fk3
5B89MeXm5eX/sXHXkreX739cc9+YLHb6oYoDTMIOja89HX03X1p83lR85f7p
6Emo7yadaXbeWHwX61rLZ0ffw3XKxZPlx2EHrHPd1rxTstjtVIzIO+d/eAw9
WWEblmxcLOQzdkln2WwtEz7hLYvY3CXZXL0/1wsX8breF49q/J/CEeyaDtwB
jAJMgrXv3/qXalzc+X/3/EzWExReAk4BpmHDMBp6i67fPbB740uns0H3z9u7
Z9jfrXF4j926TybZXz78gx6TsA38S167+OxVHI3tmw6f719M4Sb2a3zHdNYJ
77Fna4OxIB/Qddl8RTbNhbtwfuts39k4bMUB+Yff3p9/5J70Ad2rax3QdWEj
YCb2LI7vTf7wdOAu3pe/3lcsrOWDrU2M3lPcl2/uXu3xXYvYfFdxn3atd2Zf
L899Wqd+nLAlMBqwGvuGH3l/8nLpbND4wc01bj37Z+eQReYeuMja7QXWA2bk
oOY+If0ZpuVDyfZ4aD7Xi09Pvi80V79GmBO9KfWYhKPYO/2NiulhxQVm5PB0
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
6Xh9k3TEjjy75qbp7NBc/oG53jR9mGl46/NaL5vndK1XFdPt05nZf1X6Yr5m
16L/6sb5TX8seO+35E/7gg9/TbGwHv3JxBN+/LWLxFQfMhhvWOktk3dN54Js
blGMdkzngu6Zzbuv2HzNIvpbtR4+3qr16D1knfc1vs1kYUy2KUZ8od+VXle7
tEf+9/57fe9Bsdg2v8G6b92a4bzJ92Zj2/TJ5v+2ufpy/a64/FfxMv6G9I1v
n847Gp/p6413V77Sf8s1d0//rtb8puIi1js0vkfy73tPvbl97ZxNsT52OrDi
XiPrDQZ/Dke/Y7GDH3/LIuP6gd1TvHaaLOQovDUdWP03dd29GqcP5w6//ofW
wubd7Wvn4rhrOjP7O6fPzn7Zn+Ha4cPh5vVF0rfHZ+Zu+dw//a70uoKfJ8O9
w+fvmk1jXnt8c/XBgod/R/KdfQ7v0dx9k+mYu1vj9PXHwgvYPXkWxz3TxxfQ
vwqu/sJkMcIh2Lu58OZk+Gr31Nu6x/AF9mm/e+YHeP79sj/ryQWvD6t/QPIK
cQH2yc9w7gsw+ksMHP3+2SEflr4Y6TX1tOQDigU+wrvS5wd4/k3y/bvzp742
+jTpt6NvmB5Rj4svQIb552s9nrwOx8+meXgBxjdunjn4BfgEBzYX1+GgyUIb
728cn+D9zaVzcGvDrbCeFVvzwcWL3w4pLuwcNLvu0oOTsEn6dDbN5gfScS09
ivAa9so/7OMJfKjYwbPLtfxnXIpDkw9IFiNxpv+qxvn/1cmHp39w8quLkX5a
M599pFjs37VcFz/iiPRxIcgfSP/I/MynejVtFCeC/K7GPpbM5x/L/+8r1pum
Y84B6RyV/nuyv2LjH+8ee0/yAq7H0mPuu/LnO4rFe/Mn38Lp65cAt//T6eCD
6M2DY3F0PscT0WMGn8I69AnSTwrfgC7+Ae7GMZOFHBE8CzyMQ5MPLF56R+GG
XJTNTeKAHJPO+9PhW1yK49IXF/2oDk4+vnjhMpyQDt9/uljgp+jHhOOA66HX
0Zeyf3zj+r/Q0R/Gfujs1zqPaz34FngIOAh4IvaO94EXclI28UJOadzrJyfz
/8nFjm36X2xcX6XTk09N/yPJxn1u6LE047t8vviyf0rXpXNa+kckz/T1WBIf
PBi9l/Bi8F++OFnIj/lSsftoMp1d8ufXi53eTmcVC/2u8GjcJ1/o3qBzenM/
ljzT/3I+ZO8rxQgf54x0cGDIeqTwi35CXygmZxYj6/lq18WLoXNTul9LFqOv
J4vFN/KPGH1tstA2HZwa12PzjnTo35x8dnY+Ox2cFH2E2NS76BfF6JziZfyb
zT0q+RfN1dMIXwafSK+jX/Z++VYx+njXujmb5zX3E8kzztC5i9wPn+u9jN/z
7eKLa3Nx9+cJ+e3r6VzYGvBpzk/+VOO3Fq/vLBI7PZZu734wflvyRekfk3xb
9i9o/KPJZxbP7xZfXKfvpW+Nl7ROvv9+Mb2x124ojpcUI36y5l/1un3iE9HR
KwgPCHeIfb1Zzsjmr/tMu7RrfTx9MT229/IyjesnhD91VLJY4ED9qFjQuTz9
45KXjROkPw0eEO7UjxvHjdKLaLk4TT+ZLOT94BjgF5yQTOfEroXfI0Z6HeE9
fSp5Frsr0zeujxFO1jHJ/I+rdXVz8ZrI+n7gGFnby9LX94jP9Eayfr11Pp39
f46T9fPsm0/eMB//rDjS1/Nmdp3bm8sev+BJ6S90Q/7Bnbou2bjeP2vHpbo2
GafqhuRjex6JnTje1PiJyeuko7/OS9O5vnvjuMaXSecX6Z+UvIAPtfTwy8vi
jen9s15x+dVkIZ/slnQmrZvPPtc4fbwr/CscND5mc938eWvxOiGdmf1b08ez
0v8D9wof7deNs6mfyj5xwfSz2S0/3zFZGJM7ihE7eFv4WXR/mz7ZfDwyfK87
GxcLfW7ekc9/V1zWas6L07kr/dOSZ/p63uyefHfjX0he0AdnOnrn4KJdkrxO
Nn/bvXHldHDx9EE5ufW/s/j+vljjrP2hfV2azLe4XgvmLTm+5/h+4pnIX3y4
b/G9r7nihW+Ga/blxvdqXA+evZPvLdanp7939v5cXHDx/tI4zht51pNFL5bP
Frs/FevTGt8tHbw7XNqvJH82vz2YD+n/tfEzkmc8PD1jTmpf97Z+Pnwon+Oo
4aqdkp0Hm4vT9/BkIR/xb/mN/HD6zuWcBzo7/HL3JL/hyeHUfS5ZTxH6uHP6
gFyXP/WqOTW/6UPDN7iBizVuL3qZfDaf0eFD8+noO4FHSeeq7LBpj7Cp8MHw
wziGj2w9eHtLpI+rp+8Izh1OHo4e3typ09ET5Wf5h87JyfaCP4hXN9dc/tVn
5cTmsuPvM9P5WbFz3SuzM20u/+iPwjf4e/odqPF/TjrX5LNH5zfyMu1lscb5
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
dNi7Pp943TrUhDLOX84a/h9adst7
             "]]]}, {}, {}, {}, {}},
         VertexColors->CompressedData["
1:eJxUnHc8Fd7/x5GQygqpJEKkkgohOfjILirZKymUkGREJSSjpCgjoiIjsvfI
HiV7FrLnvddIVsbv+ON73379+Xqcx7nnXvc8PV/ve8VjZnvpOhUFBUXPTgqK
LRT/+zeNKP7fv2l09+b98BsrU4jCMuno0e/q6H/5lpGcpORFnM9ZcJ9XMSLn
DhLxdi1zON/zIoVL7wY5j/frkWufxnnahILbZRtynr6zVSCTgPMLs0c61e6S
c9ZS8T23xnBOkKkdCXYi58JyDJOLg1PIvbl4hpXWjZx/eT2FDH7j9YfF6Ewv
uZPzoBMrT1/8xOvFRymlcz3IeWgp0/SrtikkKxq18FT8CeRXkqrMGqdQyam2
hIj6p+Rcplvz/b9veP/+lzrHPfzIOUN/zx+9SryPCyMzzeXn5Hyt6CrP/a9T
KNo9MM6JJ5Ccm/QUD+nk4fXxyo00iS/J+R8nmjFSOs63mK2dUwgi523t+49J
JeHzqPrlOswEk/Ove7ZcFI3F6wMlv06mvyHnjltX7ndETiHTD2uyPH6h8PpE
/5Ha/wafp3X3f2nO4eS8r7HDYu35FOKu2U5/wz2CnFcI1jDcfYKfb8Pf89If
35HzVTffWHs3vL9p44XPd6Lh5z6nZ/bHfgrZ3SnNDHr/npxH1os9mrDE648q
7kkd+EDORSJfzasZTyEm/aRjj8VjyPn2/sKr9JfxOXuv1WS8iyXnrX3TQexK
UyhwePDxsf1x5NzIydfXRArvz9pUz5AZT86Lc5Vmm45OIc0xupzS64nkXDsk
vECHC+dsyc/oxJLIefPgO6ZOhimU+oSXsMr3hZwP3a7eJr5GQiU8vteiOFPJ
eZ3YlyJNAglJfOTkn5NKI+e+BpO/KbtIyE5JlXLANp2c655uqeCsICEfv7r0
U8UZ5DxV9prW7WQSovj7PU/ocBY5l+jeN50VTELu0vJr0ZnZ5Ny0+Lx/sgte
v5dPTeB6Ljm33+IZu2JAQp01DXFisvnkfF6nMELyDAmFukuJ3lAvhPct3dvZ
QXYS4nik0V7yspici38OumFEIiLNT2bfWZ+XkHMz68PDfSVERIjIbF9cLIXX
095tv+NzIlK/zcmqEVxOzgdsS0x+X8Lr3Vcot1pVAgeKx7ofMRJRCX0+B6VX
Nbx/XrCmi5YSkKGXga3+fC05V97aJrP3OgEVtulsE+6oI+eZrqGVf5bx+1OE
+d24iBY5393yc+TYAs6b9VRPxlwl5+0OiqcU/+Bci/1u2F0rck79Siddagrz
YeV2/PlKO3g/FB99vm0S58JyLfbzDuQ8OqQ+NHUE5yaWJyw0XMi53FOHsGMD
eP+vzv43mh/APtcGuB/24Hu6uz5gSvYxvD9tLAOiOvG9jq75LpHqSc5P8bKs
BbTg/W+Q5t0lvMm5m8nzZJV6vL+8puThXz7k3GavYu/3GpzXznYzhfuT86ZY
UyWWcrzP7mSNbscAeP0pTrVzFE2hvjZ091secKm9yk77VzZer1p/TUjlFTnv
vDkifCUV80H1umLmBHCJ4/3W448T8D55ITKZUa/JeZnOvwG9D3gfRiG5p1Yh
5LzKYGF/Vzi+pwyHPXJVwsj5G2LU0cVXOA+n7pyTe0vOV4xsM1L88P7ugny7
tCLJea+S7a2Fx5gPdMJ8/B5R5HyML0mryhm/Dtdcb4qNApc+zrrJstji9Z+v
TufsB/6kLFazNprj5zVBYbF6/SM55+5q5/2jh7nUzffkbSlwSYT/m/HtC1No
Wq/gkNbJT+T896n0aWF5vI9X3jhPPnDps4HqP34x/Lh+mW9kDRLIOdMNWyYZ
AbzP2V2zZzk+k3PO0ml5Uw7Mt+7R9wt/gEt1okl09nQ4v+EyUTwDXPJJKzx8
ZQHzYVTUPNkPuDTXUvFyZAjzqiR98E0acEntb1ncaiMJaX5u9OSfBi7FP/Bj
uFWAucSvu1tDJZOcO8sIMC98JCFnjmfEgBLgUqvVO6KJHwnlmu05RKmfQ86d
tjKd07EhocD49S/+e/PIeWLUg7mHGiRkufVQLhNdATm3TCvjvX4M7z/eWp58
uIich5zYZviQFu8zYo32+nwl5zuTfGy5eogoNCrfc8du4I+aUvX87WQiiq+s
VAkMLiPnJ2pFCgyciMg52+XQwXMV5HzHqwo9H0kiirb9daLoVBU5z6+arBaY
JaCj396XlNrUwL2YsGdqfUdAWgmWbibbvpPzYQOHIEVpAurkNjL/vr+enGvJ
rKeOVk6iLzRbpK+ONZLz1w620/F/8fuznZ3nwBdzci4rbWuaMYPzR095UJg1
Oecz3q0aRsT36Nf7sawb9vD7SDqrUnccr+csV5WKcwSeMKd4Tw1t8IGk6cLk
Ss53uew0M+jDOdF7NjLmETnXzOTOCfuF885YW75T4EWXWixa49pxrsNex5bk
Rc7NMwMXPJowr37EnvaSAS/STPjaIVCHc50j3KwEX3IecbZ17FUV5t7J/tf+
2c/IubHwo5SSEpw3WcrGR70g53Qq5+iS8/HjFieTirTAi+qCbzy7nInzH/oj
nJPApZGimyYpyfh+eWvyCwaDF5U4l2sWfML3sZGn4chF8KLUgqehd6IwT3Yx
94bxghc9m1YY+x6C1/eUk7buBC8yFM4XKH+B11s6MIszghd9WefM1XiKH5e1
ZJH5KHgRt+RJRquH+JzduXt6TwJ/7JbO52y9h+97kyy7igl4kZZi2rF9t/C9
FutQCY8ALmkljJZEmmKPaqMfVCIAlxxo+o64X8HrT6x7LmuAF1manejKUMGP
m9HS5VULXFI1dqUTPDuFGsWDp9f0wYtSw+mma4/j9YmEtVIa8KIyQ3YlLx7s
Pxai+50agEsHG12+yLDgff5VigjlJpNzr55ctR5KfE6NIR/tihTIt+1kkp3G
fLA4vr72D7jUzvOaJNeDPWQgmb3/CPCHtzQqOaeGhBqJWw49cQAv4g6T+meT
jj3HRludqQu45C674/LRcBJaXDjTIGUEXvTTYEQv4RHmjHz41ZtbwYtkRtfH
XpqRkOAzSrv+duCSvbZyprs89qXQ+wVzHcClizEvXyxzkdB0/jCNDhN4kSCJ
JGK5QEQVAT7OxQrgRQ8/76vZ+Z2IWGMOfn0ZB1xioBGXXg8losAGDS4aCfAi
yl6K54ymRLTIuBTiuQ5cInFFd+Zy4fV061KS9OBFpkuh/EvNBEQtJtEibgle
9E3vvhznfQJKOnFsbv9x8CLH7sMkCyYC0uRMCyhxa4Dfj1aJay8DJ5GxrvbW
3KImWD8sfLBjdgIduqng9FG0FX7uRhdH9270tcJzRie+2YKHFKktzmx4kZd8
Ji0DeNE3vu8p70c3etYvUU1jZ3JufbxzQAD3NYrgRoH9ndDXPDLEeT16MTdk
PpmTiqGvucyKNyZ34X3KvYd2HwYvumCyrBffivfRa6Rq+Qx9LX6MStumAedJ
/mutyuBFCmeOzazUYs4Ym1k9pQQv+nt+2FqzAu+/Ve95bQf0NcqRyiXzYnye
R94BpTfAi342XnYQz8Xra7dPms0Cl2w0/E6WpGFv4bM2+vMCvOhm9wGl1USc
D9NJfJEFL1q4Licz9hGfx+OT7fRW8KL886/2u0Zgnry0fivRD1ySP21wOSUY
58dPHj7SClwixIwGP3iGeVXJXhXeB1yyOawz1eOJzxkjJuRFB15EZ/f0bvV9
/PqsM79gjgMusdoMK4rcwTw5e4l3oQu4pFm/ZLfTAvNKrKrvIhfwR8Lwb/wl
Q+xFLlr9iffAi240/1aY1cR9KmOreU4/cGnvBYaMbgXME2nxd1bm4EW17nN+
FBKYqyO270nrwKVM77OCqkL4PIc1FvOzgUu5lfUzH/bhx1URqHrvD15UWDCv
PLMdP18fwf72x+BFD3tsG3f/IyFuQaoljwvAn/i+Kfe5MewbfylncuzAizSP
vzto2oY5s31/+2oCcOnfXeVvR0uwL5U4G5xaBS7RaDws4EsgoXjGfcqZt8GL
OiZSXtIFYm+5RDnsuA5comieaXrmgHn1e6DvZA5w6cZNOlodbbyPnsuLF+HQ
17zyqWaXRLG/6bT+Nk2FvibkKyEwzUhCurednq1SgBdJbHsg+HqEiGSzdxdq
fwcu6S7aT+3LxflZSy9uBF5EquBmfuyJOdO55LgwCFySMd2x1VmJiJjWIjpQ
BfS1e6/Oc2hQEZGuddDZp0TgUtLJF/uq0ggo4qY3b8Odb+S82+osVf0lAuJO
YyW9sPoBr3PBWA1v/yQqZjHqtnMFL1qnftcSpz2JqAlP00xjm8H/hyOIkokT
iMnymQqHThtw2zuoOvrHOBIfSet3q+0k59r7HvspTOD3Q8LQw3sF98j5tEKk
1NDwRh8pMKvcd5+cWwltvanXj+9FSNvy608PyXnve7fE9934njKnlAqlQF9T
5+K3zu/A63/aEWsPghe906p8Gt2M16dd2V+YAn2Ni3f7mYs/ME/sbO6b6YAX
jSjG0ddW4/XPDZPu7wMv0h1rV6Yuw+tb/IN/rUJfo5co/bNWgM+/msb4HwXw
Rz1auSoza8PrOm7XvwIvIqxVznGnYD6cc68vOw1e5HDrvJ1MPF7PG0u4Ng1c
MkKhr2jf48cVnNbbVwxcchk6tdMxDOf9NBluH6Cv7Zbg2+75Ep9/eUb8bBT0
tT4BOUYBX3yvabOPS2dDX8u/ENys5455eJGg7z8OXJpekZ9mdsKcuRq9ULof
+EMvEiN57jbmxprLd10d8CIFmpzjY2bYN04f2Lb8Abj0qvjgFpIOXn8s/i2i
Av4Yz85oKqtjLmWW9v91BC+SbTj/ewTh14FDkZ1vC/BH24P+Vs7JKSSSlfKO
JQH6WsHn/TyxfJjDPqrdBrfAi1prhaxD2fDPpfLT/Vl18KKAkUwhx634cYWv
JUhdBC/yiaIzODCH+UPrqEFfDFyaTfAm2PaT0Jjp69OU48CllXN7JWV+kJBs
tIEN51Hgz/i32x56OSRkd5G3y8IPvGjHqQO2PlEkpNywg8GFdpMXqUuzPH2C
uXHyTHdAHPS1qLKO59RWJMTU7nkwxxa8aCV2zDtKZeNx772kvQFeZHq2gXLg
EOak0I7B3y+hr/lQaSueocA9tCMqXG0FuER/bFR2sZWIkkKqFs/qghe1vmlU
lIghIkMV19qzvcClBir38R5rIvIZX89gCgMvOss4O+h8jIg4vG37JIKhr/GE
kS7xDxHQori/ZVsv9DWGc160BgEEFNjRUy7wHPrausGbumhBAqLjPv92KR/6
2sXDFw2Zv0yiQv2CgHwl8KL8N/dD/HdPor2xbB+a3reQc2mTAXt5/QnE4uko
Ov+mHV6H1JzIrdfH0cBZHt/xWz/JOVN+Glfe3jFUvFvyyb7Xv8k5R8fIQe6N
vjYmuKfnN/S14KigZc/f+H6Ji2RTyYAXBbMwjOb9xOuz5513fIS+doOB+tDX
to1+tLhqzQ1e5Omy831gI35/yvznkpIDfY29QczhyHd8rx04hs/dhDm2eevu
Rv/KjX7HNrdbCrzIfLB095evmCcCTxnvs4IXsf/zlQjIw/tLPe65EwFc4pzp
zRfIwOfJ+0+ZWRy86BXDp+h7SfgeGbi1hwxs6msxX0LsYzf6mjar/kfoa2sJ
jJ0c7zbm52wrtS7gRdZ/BvquvsHr+f+rfmoBXvT0BruvYsCG793IN7IBL8oV
Osv09Qlefylr+kwg9DXSo/i8Mje8nmr6W7wFeFEVDz1J6S6+v9UFMlQhwKU0
DePR/6ww37aJs3p2AJeW6yZTE41xPzL1HkgQAi8ijR1rsbmMeTIgH87/Crjk
kBpr/lgJc2xG5VYLI3iR7Nvtsk1SmIchz9Y6YoFLT7nLxdWO4fNPvRUI0wYv
Iiw+cuniwq//AEVjIx94kbXpJMU1RuxRs0EDUbvAiyQyKK2/r+F7WjeEVHYB
fxwC8lNmCNg3OHSoh0WAPz8+8aSndJGQSNBwD/V18KKhB/ZHuypwv+PplLid
DlwaOsAlKfUF70PJZWPICV4kP57//PVr3LNuXeSL+wRcuj5+MejDfRJKter/
1n4FvGhP7bwGvRHmm00QhcFx8KLPT50nr0ljH3vipFwqCV5EXaGYdpwDP+7X
oEnqB9DXPgmP326cIqI6v+xAt8fgRTG1mukeZUTUl+5ye2ISuMSpp8mm+YKI
OE8/uPLoCXgR/6BM/qoWEXWO0Amz6IIXdYmJGM8yE5HExYcMt+3AiwIE/SqY
KjB/Cr78cvkNfa3gcvykmyUBCZoVfeAohL4m9dRhSvbfJOIYPCa/wgJepOBG
nMlynETTDKoSgvzgRa9mMqYeN0+gfEkRucUs6GudMRJHyikn0Dvr/Zf/LHaQ
8w/3NPsfT42h+4eL7y/KdcP6qt6Mw06jSNNePjSJuR/eV7Xm4WmXhpGAtfj3
CP1hcm5olO4ZtzHHvtR0SOYoeJE5+vT628Yc+3zf0axw6GvswqbfC1owB/6O
aew9CF4UETMp61yP90k/5ve7HPpaxMtv/is1eJ8TOXvzH0NfI01aEhXK8T7b
/NR8jcCL5n9tyT1fhPlAtW39ZRJwibruwSeWnI2+88xU+wx4kfN3irWAVJwf
/PFIthu4dJvXvqQoAT8un9Pgi0DwokljQ92wD/ic58bGEvTAi2i+vMzf9xb7
zMNgA2ZJ8KJ3B0YPygThnENC0UkEvIhBPF5xyQ/nbrNXvsiBF9UVpUwpeODz
PGdirbABL3oiQs/F4YLXT+XJrHQDly4V/c6wtMXnvELnNc4C/ElTdrh35Drm
0rjjxZf64EV+1gLbtPQxl2xYfj3MAi7NazvJtF7AfONhO+HMD17EWsZuFiGP
uVEkUHQ3CbjU3DzlFS6GHzd2q1mKOngRi1tVZL4A3v+BiFISHXjR2+v8bsMc
+OeiftlVc3DT52vuTcsU2/D64YbYvt/AJc7i4X7SAvYWrph+5sfAJWN3FdNn
wyTEsWzxTzIOuPQ0y4YxrQn3rDjWbVNDwKVmwe8ZxwqxR9mfL+c7C14UTcPL
8D2GhOjeNOzXyAAuqSqVRCn5k5Cl/78t3mrgRQwP1AOv2OLHPS7x7xM9eJGN
TtW9EE3cK33DP/rMA5d0EkuJb4XxefSHeeXYwYtu7J0q6aQjoWg9hpm79uBF
2x/e/P2hl4j7YxL1OD3wx5566Q1fChFZd59W/uUNXpRM10C44EJEoflPw3zE
wIu4xPljK88QEatGe3szD3hRGVvaeMkcAc1ddEpf1AMvqn/RR9X/noCePf43
tjANfa2BU8xzDBGQzx6dkQIK8KIWwnLO+W+TKFOdlbu2Hbh0M59Z97HUJNJm
z4taZgMvys3qdkj0nkAHDz8/qj0MfW1LiJyUWtQ4mvu4xN7i0QW/Z5VmkO/N
MTTWJ0Xx60ov+EBVbHxl3ghyt8/84vBsgJx//byH6snxIeQRX/fvb/Qo3EeD
Ed6l/t/oQfMOmy2M0+S8eP5ubEs7vr/vqRWPvYG+5tb360Hqxhy7lJGlVAC8
iLVXZZfOxhz7L5OBYyv0NYr2KxoVG3NsCrYrnZHQ1xoXD4nMleD1IZ6E0Scw
x5b+6d02kI9/X99ReaeqBF7UrzFU7Z+J19MSaBh6gEsBp0PPTGzMsTln99x5
Al6UdI6VYukT5sNr0vJXOfCiIDvb8+lR+Dy/eGOsd4EXeU1fr2AMxet/e44w
rACXZO4IPaIPxDxJvSZmugpcylfjqQ9/iv2BOdlJfQ94kZB33+nch7hPSU1t
WRIE/qiiQkW9ezhndxbs0AIvMv1S5XP3Fn5cUaHRgJfApRtH8s/8M8WcCcr3
Ce0DLr0z/WY0eAWfn5ChGPwfeBFD8V6B/arYl2TiOQ0KgUvvu02PhJ7FfLs1
FLSsDl5kfIQ9UE4E7x8stfpjAbi0wq2yn/og5ljfL223r8Clugfyn6pZ8PNV
TD29PQ76Goeh3lU7Knz+B62tf9Kgr4V+tLraO437WtX18T2zwKWs7K11hB7s
LcEx6BQP8Gebv2iPXS32Fo2co7OW4EWHba/ySGTgfOf4+IM64FJ3zvPPtG9J
SMKDT+mJBngR5yn7J2HumIf13fEW88AlN6sGhvBruJdZbttlUgVcUjbg8oj5
D59TbW9vTiX0NZT3/p0MN+531kNs7CvAJeVJTYnmRSKqiHU+ayMJXnRSGTXE
1BGRQ/FW765w4FJcDcN/deFEVJPvOxp5GLwozbGYksuMiJxVd8wyTgGXZgev
Ve3mISK7vr46uQXgkmLVD6/CNgKq+/Gya98l8KJ4vshTJg8IqPAn+zUaNvAi
Q6EJFU1WAuJO/pL6wAjm2PVcHAbarydRlVdU0KdE6GuCbK/mahYnkOnnnGPd
nOBFe39508+fnEChQUNtAqLgRYWqo4rMJ8YRQ5vZUP6ZX+Scl/Lrxc7mUZS/
+thQQ7+PnIv//L539NcwClKz/HZCeQheN6aDQQ/rBlDk74IuKosJ8JCtuUnv
qLrRw9WPCalrM/C+0on93aLUhkS1jjGxG/4l594WnJ8iGvC9OFs3k3QCvIjE
L8hxbON7R9uIk3fHoa+l3KT54rExx47/thJfDH1N/0bv9bBifN+tbvh80gMv
mttNc+x2Lt5ny/3izCHg0vKMys2ljTn2Y8/bsY/Bi/bamopIfsb7Sw6NZpwA
L9qRosQpEIP3OctKkpgHLmmlUrAUReB7OtHyqKARuMSqHBs4F4zz5eT2X2XQ
12oMeG2rnuF85+HT5vXQ12j2LYYKeW301qVSvb/ApeJKh4scrpgPyhZNfyOA
S/kHxJKf3MFcojPUU20ALqlvDaqwsMAc0I66TbsL+ONyN9Ak3RA/buDMzkwr
8CLNP9fKdS7i/vX6cRBtG3BJyzLuvfI5fJ6/LN8ntcGL5j3rX96VwPx5fLzq
+QxwaUwko7dCaAoxDYYdNo+Dvqby9tHJQ5z4cd/sSJV0BS86GMPH9HAH/r3g
euvfWTvwIpESw70p/0iIYvWUPsM54M9UxJ/IkHF8r09UcXvfAC96Q5vhxdRO
QqHeDZkL74BL0t2Sc5MlmCfSZoWyM8ClvsT/OucSSGjxYqVruil4kVsDc89k
IOYS3aCw/Axwie+qPIP3PRKqIXbti4qDvtbgOffcSgefpzyH28IXvOiEiWj7
YXESmt6RH2EWCX1t3fbbDXlmvJ5CL6hrEvpa0xsmSqYxzBMV14VHX4FLhS0f
marzcC8z679ffQK8qHLx8ZUbT3Avk5y+/KMVuETtxn8kRgX3uwOtn3rToa95
lCc3NFMT0fTgSw+rLuhrr/ofEXIyCcjuD0WErD54Udfrhjp1bQLud55hYedh
jr32goXeYHgS0ZRkdQTdBC+KJ5gd7DCYRKbnHRw/BkJfY9/zOq80dQLFv/28
Z0kavKil4+iOfe3jKDNavSEoDubYsanSEp2ZY8j67M4DUUd74PnGqvAc5xtF
jpnWRe9zoK+9md32xrp1CLXsJbQc0hkh56k/YmnpWPpRlHnm9NQvIngLv71A
43Qn4iAqEkKe/oH7cubeVTWLFqRvdk5DX30e9lnx6VAPaECtJfu/WXMukvOR
LLkdy9X4fbuD//cSFXhRp07V5dNlmA+srZzaQ9DX8qVdpEQL8T1qSr06Mwtc
6q2XdiVkYf9RrhPp9wIvYiJYqRpszLFXvK4fOwxepH7/Px/XjTn2bZ6p/f3A
JfoWjwCl93j/s2omnF+gr0mX64jkheF7J8I4kfESvKhCLySh9iXe/8Xh8NfP
wYtyLylb3/HF+1+aJMZ83PS9o+Emxnj3jc+bvLevtEFf0zKw9TR3wpx5zfrK
dhfwh/HRp6cRt/H+XCLbbdXBi4rPxj5TuIY5r6x7yyYEuER9y/uvhi7eP+qk
BuU8cCnfxvNCqjrmm+Cr4/NW4EURXRaPrshOIbs66l2af4FLuvRdV46dwufP
6lW4Eg5edIjalpuXH/PT9cDsWwPwIrtzP1QOsGNeXdKpYpcGLzJ9V/CHhgbz
8NQzHx4EXhSe5M1ZMEdCuuKvT1/IBC5x7o+l5RjA3BD+8uRRL3BJKihGZO4H
Xl+X/beQG/jjfNSB80Au9haJIgmGh+BFNxPmM02i8Xqr16nUy8CliDfBMfbe
mGNvsrPbQsGLQsxjNWlv4v6VnfDXzwS8SExx/+4iVexpEUcChLXAixJbhaq4
BHHvy7oUuesheFH+h8/pEZQ4bz3XJjoCfS3zdSDdk3YiMrzkWtChBl5UUXp6
cDEWc2ZGbkSiEbj03znOyz02RDTWtt+CzRe8yH+bg1Tlcdz7MkyOtj8GLwpU
spJpGiEgr/KsHY610NeCq2i2ur8kIMPvtR3rd2GO7X9Og9LsKAHFtzz5OxUB
fa1oecuR9+mTaAfb9GVXMfAim6T126L7J5HqBUplYX/oa3PEIUunqxNIWNna
8OB9mGNT0JZWediMo7XBf0Nz52CObZr6fVu1wBh6KNPUOWgKc2zD9qa6Ud0R
pHzZ8IbIhUF4v9H6/Lz5ZhBlzkypCrWMwXnmU9/GrPWgWi+B9GQK8KKHQuxt
7+zbUemEw+vUqjnIxa+SohuaUKl5g89xjgXw2N3dO0p0fyDh5ZqVhgTgUkm7
lo92Uw3S/DZhlPh9iZx/ozvIMPAV368fD5zcaIE/Z0c9XSvyMMdEaA70B4AX
8dGyWZtmYG6IFy8PCYAXHR30n01NwrkorVF5C3BJZM3nR2osvncOJZF1QeBF
5pPuu/TfbczPKw+4WoEXuaQZa316gx/3/eWxm9rgRQxh6T4BAZiHhXotRobg
RcshMr/pvXFOqS+i/GCTFx3gT2J5gHlCZ+iaaARedCNfUSliY46dIbjb6Rlw
iVV61/5IK8yrB6FGhnXAJQ9xCsFtJvg8x5fWf3IBf3gMj7C0XMbP1zU4P/IJ
eJGCj0L/pBJ+PRdsOjypgD8Xq50+yJ/B69lo0z6HgBcxlC2drjiG+VNcTeGi
BF7EfeJhs/6Bje9NSabGsoIXlbH/SSYy4vMIRMqpUoEXHW7QsjJd3+hTGTeX
tgF/QvXP7ntFJCEfbSH13kPAH66QKAajnyTEHUDDflwfvIh02mfn60oSEnzs
JpDyCbhELffQmyYFe87UvtAQRuBPPI2wp8MbzKvXB37khIIXif7RHXjjSkK5
dXY/XyqCFy2fiRDZbYx5Iis9/4wLvEj3Hc+x52fxPntHjh0TAC9KjQ4/cH/P
xvfAr9AYW4IXJdsqbJGfIaJQj+7hqXvgRfEEi7yDFURUGF4iOtG76fO1nWuz
Ai+JyPwlo2WJI3hRa8hOhz06mGNyQSaiSuBFXkGMtVdZiWjommfOjCF4UWLJ
lYqxKgLKXL7Yk1cDfS1Um2jx8xYBSau9Ljn6HvqaQdvUWfX1SRScKEvXQAVe
RLo+7JvgOokULW926jGDF9lmaVdndU4gBaHYAcFI6GtrJ1WSSrdNIHrRXxeW
OqGvVd4Rozy1PIYIEkL/Tu2GOfaLuopfIt6jaOCGo/K7P9DXPu4XPqFnNYzy
Kz5Gnj8Gc+yKywK86wwDyFk3LY9yYBJ+jt93rvJ7/0Q39rpQEgtngW/hd1u2
mrWi5pOK7Kv10Nc437LK37rTiOzT/xqrVgOXSsYsuepufEeNldcX1Q8Bf+xS
TlZIGVUjPq0/F9IEl8k5h8PZlVCFCrT8YbqkiwQ5i81Yq0oOvu+uQ5V+x8CL
fJZVCms25tjGj4mNP4BL0fLSIssb38fWmZq++xi8yEuUUNj5AfPn92xFowp4
EX+kr5jxW3y/skMj7QXBi9i5jei8gvC9Xs4ZW+UCLwrsZqyV99+4p3SF54+D
FwlRHbj2ygOf8x6SsDAAL6Lqqqy0cplCjb8VlKqbgUsaf+rnim3xed7w3OCh
A/4ctNCo9L6OPWffLm0BDfAi+VvUhZn6G3M2+0eWCcClbXOpk1Ia+Pk+7Pf9
wAFedE/3+qNt/+E+O6O1q/EdcEk5i6ebQXzje621rnwy4EWpluJV4oI4nzgp
KbAEXOr8j83+5h7sP146RWnNwCXqtr7QF9uwd5kMD+6oBy6pvxcQ81kkIdnJ
J8luTpu+99jElndihITiBz7YDEUAl1Jyvv6+1ox70BNq6rIu4NIoW1rpVCH2
mfekoS0nwIteJvNceheL+9Sh4Z69n4BLvluGQ4WfYR5Wp9xhPwtedKfF/+Bl
O7y+Rr7jxzJw6cj8v/EvF0lIM1LWlHkYuCTjl5zYdBxz0lDgyjAVeBGB90Hb
CXrsXaXH4gcMwYseJqYU8PcREWuSx8HmNeCSNJ+zRlcq7mu9Ml5iLuBFlo9b
mpArEZXMXbtDeQi8aMLbbD+FDBEl1UyyrjOCF/3mEQjUXiAgupmqh2rnwIt8
bptEjccQUGEQ9daMTuhr0Vt7C7z+I6CVZkaen4PQ11Tn9BmT6idRu3BwmUYl
cMnhDBX3CJpEwiwLjywowItE85xPPHyOvWjffinab9DXpp8W6YvHjyOZvm2v
D5nAHFvS3PdcsuMY4rT9Oa7KD3PsLW8nl+W+j6DlWkF6NyuYY7dPX1joUh1C
WlxmzOo3YY7N9jw86zZPH2of/hbMVzQF3ntyaM6nqAOljzx/coYHvGjsoro0
TWwz2tHR1e+WDH1N0FKiIdajHs0Pn3imbQJe5GMi8IwyuRZxCc5HfA0GLtEd
9tnfurMKFf+NXPRzA/6YLnB/1DhbjgTLTu9OEvkH60VT2FRXSzCng+8nl0Ae
+2iOhv8LvqfsffLFjuBFdP1B78Tj8H0vpjXQPblpXlSW2TcbhZ/nrYZmpS3g
RYTirBeXQ/G9Vghk4ZwELgV61FZeDMTrDaOeB0wCl8RvaLUMP8X33X5EyJ8G
vCjmfZEG7SPMse9qdOwHgD/UB30yk+5h//n6z8ZKFbyo4LFl2vdbmGM1U82+
3sAlbdWJYN2r2K+yss2IrcCl3YfkjBS18fM6+0tH9DR4UXD21cveqvhxj9UG
iaUAl3KCKbfTyeD1Vj+i1mTAiyQrdnbniuDn66z0cGgMuGRGvB7leRDz87L8
rmcp0NdYqfgkNXfh/Yse/Vp8DX0t95Ec5ZYtG3PCxo6oKOhrqqy/z7vN4D5V
wHDwzBhwqeyy6ZWQXhIaK19O8GMH/vx8Y3Pv8De8/hV7gqUReNGX3LUSikzM
h3us03++ApcyPzx5MPAW+09rrECnHHhR3t5mOt/HmEtavfa2o8Alc4t1vffm
eL3vNtOJLOhrEome5tUK2N8MK3N8M6CvvfH88eIxD+ZnlcCW0VHg0vMO316p
ZexF/6VtPywM/NFHVfJS9UQksrV+/FgAeFGp3yvZkAgiWky49e/cPvAipt3M
e4TMichdyel0Si9wKXD26te7vETkdmua2mwIuETlZ8Pv1klAhBT/Vi5p8KKK
t0oqke4ENMRTnsX2D/oa68BpnZMcBGQ6Jat4Wwbm2LrxqsdYwifRB+M21ZwQ
6GuZkjsHv6xNIJE93+8qbAUv0oj+oeopNYEqHta2zrKBF7mG/rFnPTOOWN+d
EP2yC+bYEUELe0v6RlF1J9O3RzLgRTuVLl96PD2MRu7oGaxywRybWf0BJRdp
APVabF0t54U5duOb04vjF7pRqOjQFv9O6GvSd4s9lO61IbOqaBnDc+BF0V3K
TWcPNyGRIIPdV2+BF4nYtYeF3K5Dc9f89oQPAZeevbGXNDtYg4z0P96xWAAu
SfQd557rqUCztHMLHjXAJUsb0W886mXoxpD98wVr4I+PD9UfSckS1GuEPNNm
IOd+5XrVlbYIFT5vDGIyWQEfu/az+noMvo98FtsCRoBL9Sl1Q2sRmCc7WusU
S4BLVX/VkyRf43sXUEYIToO+5pVSKMD4HN+7A61M4oXQ1xh+VZ9w8sI8kd4W
cGoAuKSV+3WnlevGPJlOufcVcClVmrn/5x28z83Ono8VwKXguNzhUgvsGzsn
lctpgT/b5nMGmY0wN2QofcuNwIv2pp3jLrqIPapbZcGgBrjUTawzytyYYyuY
KTqogBdpvnilMCIxhZjYv9w+PQhc+sk6dBEdwfwxf1DOFgpeFJo4eTyBE3tR
kh/Vz5vgRdnB0p70OzEnrW6HphiDFzF9PsWkuEJCdBqVK+/OAH9ajzNpS03g
nkW1+k7fELyolue2Rkk75sbgsW3/goBLfuP28YmluE9ZNDlfGQYuse/uUa9I
JKHQAOGTBZfBiwivHG3rX5KQRNMbuj2DwKXHkRXuDx2xFwlk/9kdCl50adT2
sKsuCfX5UVqddwYvap+4lKx7Gu9/qUnonh/0tc8/PzkFsWCPuvLqSU079DXb
1E5t33Ei8nGTUsnKAC4NOVTcsisgom7d7vdufOBFqzWTNipPiYgj971PZiVw
6VNcUdQPNSKqK2OhCnoPfc05odXkMi0RyWbqU16vhL6mf5TPNzaHgEQje7Nb
5MGL1lMCeKv0sEe5+w3WnwAvElQVOug/PomMO7SdWvTAi6T+XY9bMZ1EHLss
zXa6QV+rp3n960zOBPo29PklEy94UershwH33nEkK+Zwb+UJzLEvfPAXFCoZ
Q1WOTUY669DXLpz6Y6ogOoquh+2RcQqBOTb9TxkFBuIQmlTzcBrkhzn28vJw
x3XpfrSTXlRT9CnMsU9SnRihF+5Cow9Hny1bwhzbXcya8tXzFiQ7rLIuLgle
lHnVf+JjWQMKEjDaqsO4iT/I2T3gzTe0f7rfxFAf+DPNXJld9rUKeRVcuMSo
Cfyxa9tDb1RbjmL8XIridwJnUq0/kMxsSlGruY6CRQzkTM1rqas0X1Exf58K
9wHgjztLfMjxzgKUukq/c9kLckv5e4V7DuehDJ07Nd0/Iaf44Hp5JQzzwX03
z6Q7eJEGh+Uhplcbn6cvXZ93BS/qHfv1psAXc6xmq8rel9DX7qjJSM+7Y0/j
vT1tVwZ97ZDPt605Tniff18UD2wD/phJin38s/F97BbdMH858CJ2lpnq6I05
dlEP5ag/cEn0YmxM2sYcu+vKre/jm/5ORPv9Ho7zeP2ptu8rhuBFyhoMxHJZ
/Lx2ixt7jAKX4ldPMXw8hbmk5i75zh+8SPONa3c0/8bfpzy3G1IDL6pdFhqK
Zcc8/BR9/78j4EVXjZMsQ2hwfsphguUYeNHPUpKv9l8SMh3YdTUkEbg0dKO7
6OsA9pOXkgepW4FL3k8c0xPqSSg6LqTTnA34M9dw4MBQLuYYxRaG4jubvOjq
3Wvi7/E+Q7U1YQTg0pvnXLeNnmKeHNotfNgPvEjCo0Vi2y0Scu6utrfWAC/y
Eekv6FLDXrRAkDOXBy8y5PlgrX8Y97KJHjG9m+BFLCc7i1aosNf1uh0UbYS+
Ji9Qd4Spk4gIle/eP0TgRSPuRfE5cUTUuLgrX74MuDRfwmX3046INBe3PTrq
Al7kcF4kguEkEZkHP+DytwUv8npcHukyTkB9fwaZT2VCX9vm66UbHUxAuTm/
zqzqgxcdMfkptF+EgOJpjiWwP4I5tvA3s1bBnEmk3OHwxZAXvOhEZ9ie5oOT
SDoqNCzHAfrasoyXToTlBGKnnnofYARz7Lr9u8pHncZRo0/GH1NumGOn7OAY
TRYdQwo/oq4pH4M59uzLNYvcWyNoXzeVyAtBmGNfkhhiMMscRIYvTg+cCYE5
truX2avAK72opKg++3QbfO8oOFrSsjOmHWUfH/welAx9rcI3vUp9uglxFXyK
6KIFL6IwzlmP9v6B3AVZSnTeAZcW9fZ/0PhTgzwSnHcfLQcuLXb/+qPzqBKV
0W3bIhQNXNKV0WH3qytDN0Vu3u9R38SlhyfKm96XIK3oUy/8OzZ50cXdpQJZ
RaibrYfWQAU4k+v818GrMB+Na169YxsP+bRFzw2/07mI6jJfBsMS5CKXjT9k
7cxG4WKZaioyq+ScOvyBU3sA9qtHYdxmquBFn1tsIrW9MQfY1GJ0b4IX3TZc
dzN7sNHjWE1TL2/6f0V40l9M38X+01SwjfQYuHSlkv/EvBVef0Xpl2QpcGlC
2v6BhQn2FrPci0y7gD8fpLK4Tmvh/LPuYU4X8KLZFVlpbWXMw6t9ThJ/gUup
xnbNGWcwZw7PpT3xBS/Sipz8Ky2Mz3PlmfxVCfAilo+nx34dwPtHbl/yoAYv
UmwbonFmmkIiOtd516c39bXSEsq/6/heD/0ZTKEA/owJJ548ScIcYDZq6+YE
/rgevf532y/sGxLJCaYa4EXUIcPOmlWYPy8+3VkMBy4xxnhKN6eQENPXytPd
VMCfm6L3Gi+FYI/KS1ps9gMv+uJcou3nRkIc9xaD9E+DF5lXr7PymuD9fbek
1u8ELwr44WOfJYPXC9ztiGcFLxKllDQp34vXE2x3fLsMXqRsE3sofZaIPbz1
m81N8CJKWtntpZW4l1Wvxy40AZd2lGlXr74iougplUpmS/Ailpn6Lyf1iMja
ycf3pjh4kbfD0L8f7NiXDLq5A1XAi8bz97QU1mL+CJ602JMOfY3qjmLbSVsC
mnOqu2LlDXNswjXmLs0tBBTd53DaZRj6muANJYpg90lkZjGwlrIKXJLNjW7o
7sV96cCD0mdem+bYAuOfkpknEL2pgblKHvS1n1ua3aqpx1HodM6OAQL0tTWm
EDm616OIurfJbaoN+toTOxfz+EfDaJ5r5+kUik1zbKGVsbOiA8glkVbYKwTm
2CK8XdPT337inhT09Gk4zLEJMqVeC/6tyM806ix1PvS1L1SGbB+fN6KEtYv3
hPOAS5pz0Ss6L74jQlkHhRAn8IebvlCr3LUaOa82CjHyAH/Gbig8uWlYgRRH
vhgPj0HuY63+wH+oFPUOJXH3eAN/oiVunKGu/YoIEkHOv2k29TKT7vAr9wsR
i0OMepbdJl+qbFqNTs9DmtXn+j7Xbsr99vlQauWg1ICV+kdswJ+SNWP2b8pZ
SJBbtGhEG3LTBfR40D0DsVJ2vhh8AXl72t6Y3x7YW/wuL7ErgxfVEXaeKXDZ
+P9Y5N+F1gCX3garbmGzw/3OOvmNySpw6dLX4ab+jTk2m3J55X/gRSptt6XZ
DLCHaJ+z140ELv38FnvlvQZeH6Oo1rYd+JPtz+zq+B/mpG99pMhL8CK3JoZp
D3HMn0b+tffHwYsiS04WpgtiHhLiXOLHgUuZi/u3TO2ZQoHjshEHyoBLbet0
zfvp8fqtfcXnCqGvJT67LMqzhL1IrDqfcBu4NLG0nNQ+grlxVVPk9Svg0pCx
rhR7CwmVMN/Xj6gHLrk47lRJK8I9LlTQdpIPvGi9+g3jnU+YS+5BNFOhwCW+
xp5x1ud4n9WDZmnC4EXEu/q1GndISKRU9+aWSeAS5e8S+8pLuMcxzrbEtwCX
VoiDEjQncO/jLr0TMQVcEryQEea7nYTc9383v6EEXjRvdpgtrp+ItMYytatn
gUuSnWwnnqUTkYTMRad3t8CLvN70+Qs/IKIhtX/R/uzgRdTZ51tOyxJRn8ar
63JrwKUYzgN1Y0sE1L2XNipPBLxogPt8BTGOgAiLb3pelkBf02W3PbtPiYCk
zz9lPVQNfa07p7STqmUSveJeipjLgL42pB0XIntuEtnFmL1fnYC+lnNU4tB/
wROI7/wBiz9foK+hW/GW29PGEfVlY6PmMzDHpkw/bfXFYwytnOYxUPwL3zui
+Xzgskf3CJpLKNH7pwhz7HQKr+9514dQ5NqC5TNRmGPrntVfnNfsQ5pP1BhZ
jGGObWhD+fPy3w7UrLzOor0VvEh7dXfTq5pmdIXSIST7LfQ15bMS6X0Z9ejL
9J0W2svgRRTaNhR7mmqR+82hr3n+wCWKHnrfm4erUIlykVHsPeBP5sjJP6yX
y9FlxVPlUkeAP9NF36XHGEqRF9OP6XOFkNvx3KeJtCpGzQUiJnUnN3mOop21
rFYBklq4M+v0GnLZu50so7m5KHQmZv/g2Ka+1s3eceFBNnLn28+vLQKcofAr
eiQdkIlKLtDZSdhAvrjzo5VKTzqSe/e9WTsGcu5WDWEHkzTktlX8PnMr5BHv
0ygoHPG9rvs+vo6AP39nLHJ5rfG9LqX84+MKXvS69VNB1lWc3+b3V64FLl3g
v7snQRv7ifbbpm4h8KLOsWvSU6r45zfscZfjA3CJM1c410kGP+6K4DLdCfCi
5jclQ8dPYI7xEy22/AQuef8520vFi/d/IScREwV9zS9gyqlzF/YlYQaqGS/w
IvaeIaPXW/B6I/P/tJ5DXwszuN22ZxbzRFEowawXuPTzNZWV3G8S0v3Qbju+
HfiTpzQd0v8Nr/f65z5yEbyIS0GutiYTe0vx5K27GcAlXWv3N4UR2MeklkLE
RcGLAlOulTl5kNAiTWWXZydwaaHvxbe46yQUOE2p4xkLfe1AX5vk+DnMt7X3
Ztbvoa+VN/13qfwgCTUOlv361gJ9bSk9jPfDP8wZy5ODpIPAn/ZjDJT1Dbh/
vQxYePEYvOhhyjVt03dExOo1oL66A7xo1UA77dQNIuLgPn/PrB64JLmnNr2O
H+8vnmMV3gR9jXpX4vzpXwQ0ZJGiKnsIvChpWjWo3RP7z/3462r90NcYmuW2
MnASUKDtTNuLA+BFuyR2eVe+m0SZBzJGx73Aiz573VnzoZ5EWkRJmm4i9DXJ
nrrr63ITiNO/zpJqEfqam8NB3VWFccQg7BhFT4C+VnPg6LwbaRTZlsTtouEF
L9q2MhdRTz2CSLTsVWbz0Ne+/in5uZ9xEHlwPFSt6B+H36cmL5ZLI7oRv2Yu
VVQazLGFHifE2X1sQ7fQkSQlYfAiLpYjb0qVmtCM44ToAUPwIgnaP07joXXo
pMyWD5VdwKVMzZMpOfI1qOXWKdZLU8AlQVK3DOVCBXKsUE5FZcAlppsz2zlN
y5Bb7JbVRQvgz2INKnuqUoLKdtoxviNu4pIcf2LowSLUrFMwkWQAnFn8/s2P
IJuPHn/6ZDOQA3mg6y7S2I8cFBB4dkCeBrgxdubjKfP0LOQZ6u+SoQJ5qp2T
rWxPBppgZp7V8drkUadjf7yQS0d0emo09TmQB5Y/eGvalooClAIJl4c38W34
oXIXTwpKZXa+NbBzjZwXjZwZ3rfx/0AKeup6rgCXdNLD+e4Y4Z6YlWD96yJ4
0cf4AcmDl7BfTSaW5xYAlw4mJ7cfUMR9zUBVaKs0eNHi1sEKXUnc12Sjro22
Apf8TjY+ztuYY39ZqmzwAS9iL5PrOrJ/CmkWVXd46YMXjRjcfvlmJ+aPp1bz
sfPgRc+sed93r5CQ7OlaothJ4E+FhUNo9wT2Fs88Z/FL4EV0/TYxth2YJ1PM
eVt9gUtlEhcrLctIqPMuIfFuF3BJonKfUNBn3PuS/jP+oQheJCDWq5z6CnMm
mdP+XytwyedKHIejE14f53fvnQ940cMqtQl/Pcy30P8M5CzAixyMjJ28JfA5
Bff6hTqBF+28cURicBf2qyiVB3Wl0NdYtNsOU04SkZ3GlbT5OOASStwyvbuI
iOi+DDyS3Q1e9FrM2EjIl4h0LzOwJWcDl7JZP92dO09E6voNZoaB4EVsDx88
adyG1zOytrqmQV8LVjhP9SKfgMx/vSY+PQJe1DuutlvKiICY0qLPHWcHLzLd
R3kwkziJ3F/9czquAl7UHqTixXFjEn1K7SJFWoAXUakvn4gvmkDLDewSJtvA
i7rrt0c1j4yjgIpGzyxzmGOL08mmG34fQ4d+r4s/b4Y5tjGv20U+hVGkkEdr
lOMEc+y+yn4qta3DSM5BetnqL/Q1qnNyXf3X+9HqvQfnpUVhji0TRDQzs+5C
V8V96+tVYI49NB+UYp7ZggKoxeN/8G/6fP9O8afQhQaUfU2zfQ8V8GdFUmjX
YuE39PiO2L9SzU2f7/tqaQ91V6HinpsTVcrAH+opWXnxvnKEKmxtZ2mBMw6a
Ijtr3UvR4GRG4Y+oTXPsR338cvxfEdf0f7909m2aC0n2xnvOFOD39ZBfw2PI
G6dKqt/K5CGaAdqnRzsh79tHkL06nY283AY6/vAAN/ryeK5rzmaiihqDP1lX
N/kPL50bl1gGivj3UMQwDHLd+qILh5PTkJiiYLv+N8ijD3iW3b6YinZEpCg1
/93Esc9CVz+LfUEKV4gqsZzAJaYtZcVOtEmo4fcuLx8EuXwrz8ldethnnCoL
wnqAS41O998/Oo+9iCatcbsmeFH6mu3uk3KYM4cpWIq6gEuHlpztOUQxZ371
pc64gRfFi9grcB2aQkyTeXdOS4MXaebaCx3djfefj0+7vxe8aG0uy1mAFnPJ
VG6caR94UU6y7auZv5gPfFu7RqKBS3lXDNZuDGL/iVHdG1gLXLowWZxs3EBC
gmrMfGz0wJ/JEbm38Xkk7Bv9ao7XwYv0hSqsdnzAfqVfdE3yN3DJ8NpnNyUf
3LO+qYj5uIIXee0zU6S3JqFcpd4wAwRe1Ez56vJfdRLqG/hdlSgCXnSPV+xv
sBAJpdYkJ6VqgxdxDyQ5G1CTEEXviXvK+dDX2hWk68K6sBd17X934hR40d47
X+85JBCRiBP1JcNM4JKuQvbxNnsiku0576FtBV7EIVMrdAXfQwXG7ARtI/Ai
W7ajplwEAvLRilrbEQV9LWAqircwhICCPSkGueTBiyh2/LzZfIqAVqKOJ1hf
hTm29tF+v/iCSZR4wbXViBm8KPtLYZ254CQSOrfzh7UxeFGqa9zHNNsJJM9s
dkdSDrxInev1gujjcdTs/Znn6D/oa9RjCeU2cmNo2kR3RmEZvnfU8CPziOLD
EWRm/ib+7hbwIoZUYnNz0yAajuLT1zeEObZmJ4nG5Esv6gzycWuMhzl2AAdr
1nBHO8r7c49/ZzD0tYm7cZUWzM1ou+LR/eoLwCXTimYl6qwfaOzCdlLxK+CS
bOOTx2/ZatG0/7sDYfmb+hq/DH9+WCUqcUx1fBkGXNL8ryrSsb8MHbUN0P2g
BPwx3a7h1JReggTPHv2g1gI5Bd1PzktN+H3z1byw7dymudDe6htSrfkolVMg
wzkWconf+xKr1XLRHq9C+qfzkDP5zewQOZCNiuuvru2RBm7UcPB0SUpnotHu
XxXOzps4I/wpSOR1Ojoq5U/US97kP+lJIUEH0lCJFf3znd2QNz7fedryUwri
FXjhFrYVOBNYpaMpejkZhXgu59cJQe4+GG0sdOYzqplh0z+vDjnFH73poSsJ
qNF0OfX9TcjrXQT+K1HGnKlierswClyqP873lU8a5zT391m6ghfppofaZQlj
X8ocJ1w8vOn/gbyQlG/IjTkm4JhoOQdcWnpbsp2KeeP/4yU8Lf4NXBr0Oyfm
S4E97eMFnS4ScKmj6/hwEwlzyYwquZ8F+DNyw/5G9i8Sin/ZFRqmAF5EIzGm
vr0a54/cTqi9AC457jZSjUzFuY+w/pF54NK87FdzkVCcT2/PXHIDL5rtFmJ5
8AD7lcilHmFB8CKn+nIuYVN8Ho7yXVyrwKWj6dvDuxHmWI+CiTgVeFHAMI/d
dk7sUXH9q8oIvOi+0I5O7jnMmaR3aMkYvCiZoyvOqJqIQqVOl7JUApfEFHwf
NwVjz+nN+nNXD7zoQlGanooBEQWz2Z/M4gcvopa+yHF6DxENHXA8qyQOXtSt
HEf5vI6AOPMqZ0PeQl+b/5BxytuegLTGzMzqb8Ec+6F5YtMFWgJi7U6y962E
vsbYl+V478kkqngkyC80AVw6ZCQqtDA0gW76C+vwWsMc2zJr/MjTPRPIVEhP
czAM5tivSsK8EeM4yl4NHaYshzl2/1PHa6kfR5HMNItkVC70tYYV7eXo18PI
jObS9uJW+N7RK7GQF2W6A6g7uKnv/gWYY7u9YDFhYP6F5HMdG52dYI5tPK5u
7Jvdii76d2kWxEBfsxYzuH4qsRGpXr90fiQR+prg17zLGrnfkXgg8xECM/DH
5wgFw6vwasT195GbwR7gT6C6SP8thwrUTcigHR7YxKXD60tVC6UoScxdjsFj
kxct6X58MvYV9fYFq01RbZoLJXSsRQQXok56flPr25DXhLKW9tXkoVHrntHB
qk1zb1tNc3aLHMQye+/U/l3AjektW8av6GUhj6jf8m1akEsYjB42wfckjLV8
L2sA5HShnyz7VtLQ+tHJ2WslkDvTCa3qhaaimWL9kjnCJi+yZb+ZmvkFUYcZ
L2WybvIiKYOaHpckZKJ+n9dMAnJNq/EHGY6J6JYVT02w7iaOnSrbYvsxHlV3
lzPW3oO878UQKXnpE6LKYea5Hgi5jUBOybw49hmWfeMCPOBFudx7jIUPYy8a
/yUt+hO4pD7ar3l37xSyYy8ffJ0Gfa3l5L6cz/SYP7FhnL6J0NdiL4TW5y1h
r2BzZb9mDl5EXy1wxHUU+8wLz/PnfYBL2d3bRGpaME9EzdbdyoFLCxyMkvbF
mBt2DLbdHMCfmtnffP/F4f7VQpH+wx+8aFmF7s7ycxKyNHWd0uUGL/pYqv9J
zZ6EGocvh5/7BVyaYWZj+nWZhKb7vqxdKIO+lilBmy95koRqHJ6ZmHcDl/aG
vdzZtwOf32bk0PoJ8KKBezS/Dg0S0ZxmnUDtCHBp8eJH9bOZRCRtNxzOZgxe
ZMvOT7/vERH5qHd8EaAFL1qey+mwlsd805WVDyMAl5hpwiKdVgjIueH0rv84
wYtWd6gHERMJuG9GXQ+Kh77Gke53OEmVgGRtEzPeJUJfiwtvErvUMYnMX+cJ
5nyAvqYq09wQqDqJftLklBS2QV/7IEmVuxQ+gZz3LBzYEwx9beBtfte3vHHk
HMgW1soBXnTp0tK15wFjKDt7r923Sphj/7KhovchjiDVg/8mp/hgjs1kmPtM
wH0I9Su9GEldh+8dMXl6Kdx71Id+L807slHCHNts4LPBbuFO1MAgdGluDPra
tNQ0TyShGfkM0Nqm+W76+9mzWR2fh+tRcCoL/WtF8CIFV3NO/7+16Hj/iESk
x6a/E3GMiDt7rgqZD3C8SbUB/iwyM3JstSpHHmdW8or5gT9zg9oHY7lL0Ral
mzntOZB3fptIH/QuRrGfPvjyHt80x7Yj7G6xLkDLd6gir7+CfCx0SqX5Ry4a
3FGWfW5kU49b9li//CIbfYpmdGcTBm64B8keIERmokDibjd5601zpOh7KkyT
6WhCrWk+8gPkdmVW5p9upaH0avtT/s2bOKbOVM60OxW5zEeO7l/d5FGJxR+3
/khGpmwVscd5gRt2p205uBI+I98dLlw25yA3Jbj4R+clIKmrygvXzSGXXfYr
N12IQ4aa1X983TdxTG1lp73hJ6R2hvu3RPgmv5JjXB4cjEHT201KStMg76Sk
qH3Mi32pYv131QvwokItx7umrJhLlmIvZ+6CF7Ewv78iQI09qqdHjc0VvOiJ
C+ti9izmkkXuw8BW4JKd2r75id+476iovdOkBP6wWo+dCvuOOSDjUmqtCF7k
xnxYKjCLhJTHbIxWPgGXtBU1aN9EYo6Fb/ePOgRe9GHmUPp1T9y/hgN7Ymo3
cSkmRSP5BuZS1tatR16DF1GsslLRK5EQnUhqr8kL6Gs1H6lHtvCRkHt5VlTp
V+hr/g/caelWiSh+10r5193AH/FzY3tNm4hIvb1IcN0BvEh9a9pdgWgiimlz
MqtYAy6Fx4sQpCyJSLTg/jvBYuCSm+/NtIOCRMSZ+dlhohj6mspV98WpHgLK
/btyxp0JvMiMN455+1MCIgxV2cdVQ19bCXD1HjxAQNw+vHWDFOBFr9blHe0+
TqJsyrlDMvbgRcV+J1106CcRTZvYvg/t0Nf26Na+u6kygSKifnpd+Ql9bX7d
LqXuwjgSpJCW/1EBc2wnnc5FxpVRxHJRg6GPFryoZHW5q5FjBD2iplc3roe+
dv9zQJvH8UG0M2FAazka5tjKf84onyJ0I0OaAYMRX5hjL9fNPdRqbkOeYU9K
2tjBi+qK6MMTbjShve+XT35WBy/qtCszTq+oQ9+uaVi21G/6+1mLAxF612oQ
06HF0MOjwCXdPRTx8kyVKHFp/cpUwabP9/n29J9xKEO92Xm0M2ab5tX66YIz
eiXI3Koly3N80+duXd9Wf58tQmUxihQKusAZ3U+prn908pHYpG8gZRbkziFU
y2/7cxBz8lf3ui3AB5EPHfm25Vkof3ss3SulTZzxeHyIj5CB0huOu7p6QK6c
zkyXciEd5dSucgllb/Kr1M80tP2paMBX6MDvwU38+d57KUk8BWnuapZ6vWMT
Nyr+adWRklDBf6lSu05s8qXcG4t3+xLRo2CXksWLkJfEdt/y2ZKAYsTkXapt
IY+Wf7N+7WIcan9LUzLuB/m0ruNhr4pYdCfcsijn46Y+eKE7/oJuDOI4Y8/m
mr/Ju7Z5XB2m+4gsfo8m3GmAvN1Qz/AgA+5911sdMs+AF4mLr/bYr5JQdMRR
7mbBTX8PosB9/eEkCY1l/EveowxepHUu15OrE/Mn0bVi90PgUrix8oND5dhz
2O8fCf0BXMr2FDa5moT3r9i9c0ISvKhodM/9l0EkJOJ11XisCrhkQHi2YO1M
QppSJ56KuIAXiRYPf3mrT0IlnDHM57TBi+hztEUzJDf8LTi/zhy8SOnecu0J
Nuxpn3VNB5Ogr/2aiH/rRCAiwYTcg/9FAJdI7Vu+FhXj/qXcT8tCD/zhsks8
sc2fiJgeJdlnx0Ffq5hLyeHQxL1Mz11e6hF4kWuMqpnqDrx/dyIxKRL6WqNB
naVDEQF58UTmGbKCFwl23v8Zb0pAJTKHj+YtQ18TFbPc2z4ziYSPmLyJkwAv
Oq72eFLo1iRSaFm+qHUZvOjTfw/+j6nzDuf6+984kpAQJR+lEDJSohDpKURJ
EioZ2ZLKziYrM3tm7733zlZWNiEkeyVlVOLn+8/vnH/v61zn/XJdzv2+78fr
nPPmO9S0CAY/yAW+fUd9rTpULpX6+wLQZDTr10ggjm0SX/zCZHAerjvy3L2e
ijj2+kLeq27FOTh1Pv6YhjLi2Hd1uxjYGWdAX1CnragZcWwtN9YOV7+vcH2r
9On21DLKJz8puyeyPgOx+/YJai6Ui9zYxklbR/vg+kqA3SkalIskxzJ7w+m6
YTwwk674F/Ile0nBxuZvbfD1Ap8/pTTyH+voI2nSf1pgKuIandEN5D9MB6a+
X9tqBKHXh5p4iZDPGBApEssH14M+LO1yR2G+1CRBWCrxHsw8hsDrBMaxze6e
2CWvhsT7dKLxjkiPmM1uFVGqAB4dcg/rAazfnWf4vklUBtaVp1gSziDf4OCy
FHhFVAJVwpceF2hg78uKyyilJIrAiIzzeng45ldlFCtZFQVA8+yJS9sHpMv3
q7cHqOWD5c2Q2Ze/sHnWOpLjb+fCFm/Rht5JzE/EXEzN/8uGzdG5DwbXMf3r
72rDM5kwq8WrRPYE86U8aZvDSulA/Ob5rfe2mM/ECg1yFKQCvWW02UoI5kv+
cWSJl1KA8JD+xEw20nmVPYrP9ySBg3fZ5ZUGLEeZLCaxv00Egsf1oaJDWE4r
+ZvkoJEAmZJ1bKSL2DwmZAJvN1dhe8cg7lo48qXIBeaPR6b317v+15dn3yNf
IgzOPkrbvd+bPgnMdO0iX+oCMqcXlav7/xcv9gQfo1y0fLly+Gvifl4qULOY
6kG+tHJCpI/Xa9+XnOU61l+gXGTLe9+G/OW+v20vGypfRLlIgLF3j0puFSLO
jxMRnEG5SD+D5l4X977vPRugPCmBctF0Iee38oOrUN6j22majPqanM/1D8yj
+/6Tcrj2BzvKRU4bE88vZq3AjiJBglsq8iXDT1OBnRYrUOy2YBL8GOUi69Hr
sxECKyDJStYldAflosnLFmHvV/fX5+Mnsge8UV9j/qOs3xe5DNsXhDp1OVEu
OiwrV+8suAzpcb4bPyQQx25WkNdgqluC5eJaF8c95Etvta5GLPMsQa8NQ9zd
WygXXTn0w6jMchHOfxORZGFDuYg4tHvR0HsB1rJqlJQGUV+zIBgTIJebB75d
f9ahVsSxT5JkSgUFzELbzyyz0XHU16w3RP/UrX4D6uNuhx1ZEMf+RUNyjpls
Atw37V8Y22H7sakO/ms/PAQC1g6EDLaIY++y6x/8xdcLzsuy/97MIl/a/t5m
vfStE4gkO5kPeqBcNE8/ayki9BFabKRYfhQgX0ovTqN/UNwMgzSDFYtBmC9d
ben13myAclO5O+ri2L5Hv+sPVxvrQFnNxJD4E7Yfe6Q2Jn2lBqpZby3LiCOf
kadiOX5suRLoalUdHBIxjvSyv5VJsxykzQ7O/f2J+VXXce863lLgkapZnbuK
fIP+o85j7zvF8MW9r9jPEutr28/YMhL3+1qdwmhmFtbvAtiT3LgLYI0n6rn/
CLZ/8paFcWVVHthWkT6WJMZ6WRizobJ+DrybVbeJ5MR8IKrZ2EI2C+RTD1QI
3cF0L326UL0MMAl/l5v6DOn5xlxXOjPT4ODjnPOKbzAfW9x7q02XCg8JeYfe
xWJ+9XsxwCcpGQzkf0i1lmA57eIpAym5JDgs6vjuZDs2T/7XAR7aRNicTmDp
HMfn4fV++D0eDNbUwsl/YP3RzyA1sC4O/Ko6zP4S7iE/sYow0x5bBSFn68Hh
q8h/3GS1Iptb9/OS4NLjVFeUi5R3s3ueFvzv3g/eGZcF5Etf1L/IH3m37z8s
XOtcxigXETFFHDN23O9rew6llP9huej+/F0hrf1ctGzLbLeMfEkpT7aZ6Mb+
55Jfyer7jnyp/u4DBQXGfZ88mzUywoXdtzZwm8NvYwWs7xfU+CmiXHRdkTh+
+8MKHNP/sidcjnxpolmfLylsBUh7Pr6YlUG56MQFjzfq6itwy7+lj/Y4ykV/
Fh6cjjm5Aufz5Y+cOItykZvh7r3Hn5ZhMovC6cob1Ncsly+79r9aBqVo5VnV
+ygXUQ1VnpM6vAye0pwNXSmor7UK9FHKeS/BNGtRU+sg6mvrUee4Dy4tglCA
luKSIspF1H2a/nLMi1BXZN/QbIs4NutHr6Go/xbAbHQ4IeAd4ti3M85GchXO
gVFOeXtmFOpr4l6acDNrBuxXrju/ykAcO5FOZi7Ifgqqe59fGiFBHFv3y48I
b+VRkDvqUVSpiDh2aVHf67qv/cDGTld3xh/1te0wMvXTrd3gdtmuxyQa5SL6
rrRDJV/bwZaCrjboEPKfX+sPxdIrWkFCYvF76FHkP5MBU7Oxb5vgg6q01PAY
0kOyC7LZDjfAaEhfiIADtu+o/vdNRuI6cPF3zt3exXwpMFTqcF41jN3lCT9t
iOUllRAKsYkKSLR4uXuiCdt3xNTyU8K2DFZFPJzLqDGfmT5avPGsBAwbHW7X
K2A9q1GAcSmmCOLPPY4Wf4vprTphpWSFwOTBz/OxFut9MsRmjUn5UGn5PtBj
CXu/VsdufupjLvwM7hQyosXW9c9HxvA2Gz44kZNdE0Q6k/1pnQcemXCdvivD
+xE2ns+E2rcwHYZ3ti8MWWA+cLMoye5QGmS3N9309MfmiVwua3NKgScCzko/
0zDufZL720GGZBCX60zQqMX6mtJ5w+efEqFMWP02WR82D/9swMeYBOiK/qF/
dhabp/3TS32XeBA/cPbd5y1MD43P7duIhft/vbXvkyJfquN++jiGPAYSWy4f
zzqBdBdN5SK+9/v9bsumrZ8C+Y+jRlfisfRV4CBl6CtxRLmIq59EfsJvFTRr
gvbIaVAuCql+WyFlvu8zApefhrRj9x35bdd/V9ofT201eaAA9bVeISnGF/yr
MGwWzX39I+prSgILN65Q7ueiyBdfs06hXKQrtXAhZXq/Z3WUeA6OIF9a0rgX
uFyyAukEb15FyaNcxEWYIHvQeQWyN7ciB7aQL3VIJHDFSa7s59+NTJJR5Ets
4yHEB/aWYZjy8ejcIZSLfofs8izkLIOQ8uGA0gDU10zIiQIF5ZbBKfu7lYQf
4tjXu1QFI0eXgLw1gCU8EOWiR+6bfwbvLUHyLNux5DrU19yPpm8lJCzCYoUG
s7UN4tjXJEZpXjUsAPXPoGLuTdTXgoxKImUi56HyJlfoQBji2FS9bT8Ud2dh
StXwlPIBlIvuqBBPs0VOg+GdLcHidsSxn56V8VvLngS+iuffTqeu/r/uGV+6
Mvx0GKrzWL1oO1Bf21bfJuQ42gfEPQf2nluhXLRzTmOSjP4TEArMe/y7inJR
fK4W72OGNlAOmSt6ZoPxIkp5dzmtFjDcef4k+ynyH16bkqNMrxuhOCHoryAT
8pkIvhFZZ756UDH/mK1RhPSAkdKsx8m1kMvq1WbBjXHslR+vvd5UgUoDYbec
P9I1b2/1D0+VQz+d1kzyN6yvnXMSNk4oBfq/efS93FjOkSKNyckpBt6tJ7Iy
hkgfDlScnNkuhGbfDYlv8Vi/+2IgOGNVAKrTNI8P9GD7kSq+kf1lzocBz8bY
ur9Ip15zvRw5mQN7dWVqm8xYDqmSaWipzAIppdFgRUmsl7Eo5yR+zIB+B64B
PR3Mf7jMz2wcTAe1TtLc+NdYzmkQ+NbyLBVGgzsCdd5hflJqepV5LRlipw2W
/+Vj+eqro/JISBLMHLVWKWzBnufWba3nSolg+XzpdsUI9rk+qocHuBNAVlom
T3wF0+tE3njSx8OORLaV1S6mC4q/iuaNBanVB6fsKJH/iC08S7JUiIbS/GmZ
F4yYzqd6SiY4EozYGfP0uJGex7v+ySh2Fag3xgho/0O5iFqy9reC2yqQvj+p
212JfMnrOOHhwqerYJK2em/CDeWi3zrfxjlv7et1H49qO6BcdIX7q6oE2yrk
y67caMtCfa3fgCrqxe4K6Fa4nYuiQP5DUcaWsNa7AsnSvZu2BigXRalkeCwn
rAAHd0lD1BrypemduI9guAJj9ARFhLmor6lISFW94trPRTOdbArZ2PlZMj31
5Mn9XFQ0dOzLH+RLs/xqTcLey9CtefoLZy7qa3fnaNsKzy5DRLNm3rMp1Nf0
ebMoadOXwPC6YnORBspFq3fkFRmol0Cmu7Yw7D3qa3xDh642yy+CcNLkyaVq
1NciPilkuSgvQGx9scJGDOLY46q/R23I5sE7gCGAfgSdn6VU9zP0Oj8LMze/
ca2kIo5NyiuVLX/vG/yIM097ooU4dghNWL6M6Bco3SxOU9FCHHu7YXB+k3AQ
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
rocCKR98OmMNUfeeHhbUnw6gQLlnq63MIsZTil4yi0xMQVVk7kLNAdQ9/7nF
mdkLU7AkzCUpoYj8KmYyfK3dOw7hi+efuxpgneDsMUNuv9UP9Vqh9/g/Ib8G
zckiMae7IKqN4/s+E+SR4+jJ/sJzndCwoTtKsh3jLd6WVx9saoPHHw11la8j
XjnX6nh2OJHgv9rNN67UE9ZBaQioJBo1AX2X157HXwjjFO1SWa1bHYSxvODm
mkC8sgfV+jw566CrLrf+6RLGC+q5WIX16CDfV0151Ii65773zzr2vtW6TkGg
tycR9c3hzi7toRc0MGHVpITZIY7VtbCh+T0VZkcZqhq3oL7Ns9PIPe5U2N15
zi5VDvnl94+Pp/U/CqwwdA9ZZ6O+FefyPUupI0N4SnfJJ2fC90TnBFWOoUno
3dYYQjmC+qZ3WHSkRHsSLt6sOhTiivxa2u/oGso3BIyT9dol1/F7okLwBnYm
1j6gqC16rXij7rn8kHom/a4HdFlnchylkF+7X4hoRLp3AFXu+0jREcK9vY3C
v7KetINjgivz9lyMa2QcuHk9tRW+xeY9HRcgrKv8KaWpcqsFnvl7XN1jTZj/
5keMfrjdAFrRg3cfWhHGr1N6krzraiE1c9qj5CDya+HoFX3ZHzTY3mv62XIv
4sJscPhPwzUazFbN8Xcqo7690Kzd8/AADex/jiuXCCGPZus2vDsqtzrPHazc
0aeP+sbqsvT5xfBqvb2VzTVfE/miXn6Y7H2eDIEBnntZD6G+yZNsd12cmYLn
55Wf7pVCHgXaGbXQUifgl5KFrVw51g8qQRxZmvtHwLbsZqalHdYPmiZOSiyB
3TByqt5uuQzzn6TjE2bq3AUK5pXFnbrIFy+xzWo/+9ug6uqcdRAv8oJ1Skvy
uWQb3I4YcnrtRLg38OZkb5Z9M0SNfV7X9Zyge5v/Pc06Wg/cB3wFYl9j/j0X
bBkkhurAhpHiU1SHccP9WweKPtaAnILyuqgHiEvwdq1ARS86UE99nd0pgDwa
/xipvHyfBp6LpSLrq5EvgzISVNUhGkRZ3TjPHY443pAveDC1TAVJ7V0fL69F
feNKbHBzX81jXXTXbnlW5Nc3a+4r1uEU2Ko2suMgDfGiO7ex9exZrSskLL4Z
JSG/PuVe3St7bQq8U8QevxFBfbtwq2r2NG0SlNbdlDDcifyaljsk9jO5H8Iu
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

          "]], {}}, {{}, {{
          {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 {GrayLevel[1], DiskBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}, 
                 {AbsoluteThickness[1.5], Dashing[{}], 
                  CircleBox[{0, 0}, Offset[{3., 3.}, {0., 0.}]]}}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[0, 1, 0]]}],
              TraditionalForm], {0., 0.}, Automatic, Scaled[
             9.75]], {{{-1.8, -1.5}}, {{-1., -1.7}}, {{-1.5, -1.}}, {{-1., \
-1.}}, {{-0.5, -1.2}}, {{-1., -0.7}}}]}, 
          {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[{
                 {GrayLevel[1], 
                  PolygonBox[
                   NCache[{
                    Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}]}, {
                    Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}]}]]}, 
                 {AbsoluteThickness[1.5], Dashing[{}], 
                  JoinedCurveBox[NCache[
                   Line[{Offset[{0, 4}], Offset[{(-2) 3^Rational[1, 2], -2}], 
                    Offset[{2 3^Rational[1, 2], -2}], Offset[{0, 4}]}], 
                    Line[{Offset[{0, 4}], Offset[{-3.4641016151377544`, -2}], 
                    Offset[{3.4641016151377544`, -2}], Offset[{0, 4}]}]],
                   CurveClosed->True]}}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[1.6], 
                 RGBColor[1, 0, 0]]}],
              TraditionalForm], {0., 0.}, Automatic, Scaled[9.75]], {{{1., 
            1.}}, {{1.7, 1.}}, {{0.5, 2.}}, {{0.1, 0.3}}, {{0.5, 1.}}, {{0.6, 
            1.3}}}]}}, {
          {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6]}, 
          {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6]}, {}, {}, {}}, {
          {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6]}, 
          {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6]}, {}, {}, {}}}, {{}, {}}}},
      AspectRatio->1,
      AxesLabel->{None, None},
      AxesOrigin->{0., 0.},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic, "GridLinesInFront" -> True},
      PlotRange->{{-2, 2}, {-3, 3}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, Automatic},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
AXgtFR0=\
\>"]]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.808841868808941*^9, 3.808841910932103*^9, {3.808841942801041*^9, 
   3.8088419996603007`*^9}, {3.808937215819101*^9, 3.8089372228021345`*^9}, 
   3.8096135156044607`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"2e6ec632-08c2-4eb1-8502-43da45541d9e"]
}, Open  ]],

Cell[BoxData["18"], "Input",
 CellChangeTimes->{{3.809637904762086*^9, 
  3.8096379049520245`*^9}},ExpressionUUID->"7ee00ea4-9620-4d6f-ac5e-\
a3d863e5aae4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<C:\\\\Users\\\\lb-pc\\\\Desktop\\\\TrainedNet3.wlnet\>\"", ",", 
   RowBox[{"Net3", "[", "\"\<TrainedNet\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.808850088677372*^9, 3.8088501248859797`*^9}, {
  3.8088501717097645`*^9, 3.808850225446316*^9}, {3.808850472942531*^9, 
  3.8088504758814397`*^9}, {3.8088505993093777`*^9, 3.808850600495638*^9}, {
  3.809613905115096*^9, 3.809613912995902*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e3cf1025-22f1-4fa8-80e4-94e728e793c3"],

Cell[BoxData["\<\"C:\\\\Users\\\\lb-pc\\\\Desktop\\\\TrainedNet3.wlnet\"\>"], \
"Output",
 CellChangeTimes->{
  3.8088501326092215`*^9, {3.808850167738922*^9, 3.808850184636536*^9}, {
   3.808850215964816*^9, 3.8088502260680184`*^9}, 3.8088504762730093`*^9, 
   3.8088506010586004`*^9, 3.809613914487632*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"c4ea9a3e-cd98-4456-ab12-9351e9bb0a43"]
}, Open  ]],

Cell[BoxData["19"], "Input",
 CellChangeTimes->{{3.8096379073227863`*^9, 
  3.8096379074165387`*^9}},ExpressionUUID->"4374cde8-d0f5-4590-8b79-\
cfbfb0901882"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", " ", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<C:\\\\Users\\\\lb-pc\\\\Desktop\\\\TrainedNet3.wlnet\>\"", ",", 
       "#"}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Net\>\"", ",", "\"\<UninitializedNet\>\"", ",", "\"\<ArrayList\>\"",
       ",", "\"\<ArrayAssociation\>\"", ",", "\"\<WLVersion\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.808850234724721*^9, 3.8088502871000795`*^9}, {
  3.80885062739028*^9, 3.808850707183118*^9}, {3.808850920527836*^9, 
  3.808851009822424*^9}, {3.808851058212591*^9, 3.8088510677264037`*^9}, {
  3.8096139832378364`*^9, 3.809613993816932*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"e8609365-d732-42e7-bd8a-092b4b3128e8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> Association["Net" -> NetChain[
         Association[
         "Type" -> "Chain", "Nodes" -> 
          Association[
           "1" -> Association[
             "Type" -> "Linear", "Arrays" -> 
              Association[
               "Weights" -> 
                RawArray["Real64",{{4.092582751829124, 3.801257071680329}}], 
                "Biases" -> RawArray["Real64",{0.43036943173769837`}]], 
              "Parameters" -> 
              Association[
               "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
                2, "$InputDimensions" -> {2}], "Inputs" -> 
              Association[
               "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
              "Outputs" -> 
              Association[
               "Output" -> 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], "2" -> 
            Association[
             "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
              Association["Function" -> NeuralNetworks`ValidatedParameter[
                  NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                   NeuralNetworks`Private`ScalarSymbol[2], 
                   Association[
                   NeuralNetworks`Private`ScalarSymbol[2] -> {"SoftSign", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                "$Dimensions" -> {1}], "Inputs" -> 
              Association[
               "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
              "Outputs" -> 
              Association[
               "Output" -> 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
          "Edges" -> {
           NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Inputs", "Input"], 
            NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Outputs", "Output"] -> 
            NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}, 
          "Inputs" -> 
          Association[
           "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
          "Outputs" -> 
          Association[
           "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
         Association["Version" -> "12.1.4", "Unstable" -> False]], 
       "UninitializedNet" -> NetChain[
         Association[
         "Type" -> "Chain", "Nodes" -> 
          Association[
           "1" -> Association[
             "Type" -> "Linear", "Arrays" -> 
              Association[
               "Weights" -> 
                NeuralNetworks`TensorT[{1, 2}, NeuralNetworks`RealT], 
                "Biases" -> 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
              "Parameters" -> 
              Association[
               "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
                2, "$InputDimensions" -> {2}], "Inputs" -> 
              Association[
               "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
              "Outputs" -> 
              Association[
               "Output" -> 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], "2" -> 
            Association[
             "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
              Association["Function" -> NeuralNetworks`ValidatedParameter[
                  NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                   NeuralNetworks`Private`ScalarSymbol[2], 
                   Association[
                   NeuralNetworks`Private`ScalarSymbol[2] -> {"SoftSign", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                "$Dimensions" -> {1}], "Inputs" -> 
              Association[
               "Input" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
              "Outputs" -> 
              Association[
               "Output" -> 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
          "Edges" -> {
           NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Inputs", "Input"], 
            NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Outputs", "Output"] -> 
            NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}, 
          "Inputs" -> 
          Association[
           "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
          "Outputs" -> 
          Association[
           "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
         Association["Version" -> "12.1.4", "Unstable" -> False]], 
       "ArrayList" -> {
        RawArray["Real64",{{4.092582751829124, 3.801257071680329}}], 
         RawArray["Real64",{0.43036943173769837`}]}, "ArrayAssociation" -> 
       Association[{1, "Weights"} -> 
         RawArray["Real64",{{4.092582751829124, 3.801257071680329}}], {
          1, "Biases"} -> RawArray["Real64",{0.43036943173769837`}]], 
       "WLVersion" -> "12.1.4"], "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[
       Association[{"Net"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"UninitializedNet"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"ArrayList"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"ArrayAssociation"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"WLVersion"} -> 
        TypeSystem`PackageScope`AtomShape[57.60000000000001]], 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "Net", "UninitializedNet", "ArrayList", "ArrayAssociation", 
        "WLVersion"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Vector[TypeSystem`AnyType, 2], 
        TypeSystem`Assoc[
         TypeSystem`Vector[TypeSystem`AnyType, 2], TypeSystem`AnyType, 2], 
        TypeSystem`Atom[String]}], "Meta" -> 
     Association["ID" -> 269432100485467], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Net"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"UninitializedNet"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"ArrayList"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"ArrayAssociation"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"WLVersion"} -> 
        TypeSystem`PackageScope`AtomShape[57.60000000000001]], 1], "Type" -> 
     TypeSystem`Struct[{
       "Net", "UninitializedNet", "ArrayList", "ArrayAssociation", 
        "WLVersion"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Vector[TypeSystem`AnyType, 2], 
        TypeSystem`Assoc[
         TypeSystem`Vector[TypeSystem`AnyType, 2], TypeSystem`AnyType, 2], 
        TypeSystem`Atom[String]}], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     5, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Net", 
                  Style[
                  "Net", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Net"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["Net"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TagBox[
                  TemplateBox[{
                    RowBox[{
                    StyleBox[
                    TagBox["NetChain", "SummaryHead"], 
                    "NonInterpretableSummary"], 
                    StyleBox["[", "NonInterpretableSummary"], 
                    DynamicModuleBox[{Typeset`open = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, 
                    ImageSize -> {Automatic, 24}], 
                    StyleBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                    ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                    CacheGraphics -> False], 
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, BaselinePosition -> Automatic, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}, 
                    BaselinePosition -> {1, 3}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, 
                    ImageSize -> {Automatic, 24}], 
                    StyleBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    RGBColor[0.729, 0.729, 0.729], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                    ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                    CacheGraphics -> False], 
                    GridBox[{{
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1, 2}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1}]], "Parameters" -> 
                    Association["OutputDimensions" -> {1}, "$OutputSize" -> 1,
                     "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"SoftSign", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", Annotation[#, {"Inputs", "Input"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"SoftSign\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", Annotation[#, {"Outputs", "Output"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}]}}, BaselinePosition -> 
                    Automatic, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]], 
                    StyleBox["]", "NonInterpretableSummary"]}]}, "CopyTag", 
                   DisplayFunction -> (#& ), 
                   InterpretationFunction -> ("NetChain[<>]"& )], False, 
                  Selectable -> False, Editable -> False, SelectWithContents -> 
                  True], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["Net"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["UninitializedNet", 
                  Style[
                  "UninitializedNet", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["UninitializedNet"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["UninitializedNet"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TagBox[
                  TemplateBox[{
                    RowBox[{
                    StyleBox[
                    TagBox["NetChain", "SummaryHead"], 
                    "NonInterpretableSummary"], 
                    StyleBox["[", "NonInterpretableSummary"], 
                    DynamicModuleBox[{Typeset`open = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, 
                    ImageSize -> {Automatic, 24}], 
                    StyleBox[
                    OverlayBox[{
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                    ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                    BaseStyle -> GrayLevel[0.6]], 
                    StyleBox["uninitialized", 
                    RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> 
                    "Roboto", Background -> GrayLevel[1, 0.65]]}, 
                    Alignment -> {Center, 
                    Scaled[0.0001]}], CacheGraphics -> False], 
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, BaselinePosition -> Automatic, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}, 
                    BaselinePosition -> {1, 3}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, 
                    ImageSize -> {Automatic, 24}], 
                    StyleBox[
                    OverlayBox[{
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                    ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                    BaseStyle -> GrayLevel[0.6]], 
                    StyleBox["uninitialized", 
                    RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> 
                    "Roboto", Background -> GrayLevel[1, 0.65]]}, 
                    Alignment -> {Center, 
                    Scaled[0.0001]}], CacheGraphics -> False], 
                    GridBox[{{
                    
                    DynamicModuleBox[{
                    NeuralNetworks`Private`NetChain`assoc3 = 
                    Association["Type" -> "Chain", "Nodes" -> 
                    Association["1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> NeuralNetworks`TensorT[{1, 2}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Parameters" -> Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"SoftSign", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]]], 
                    NeuralNetworks`Private`NetChain`opart, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null}, 
                    DynamicBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", Annotation[#, {"Inputs", "Input"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"SoftSign\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", Annotation[#, {"Outputs", "Output"}, 
                    "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                    Initialization :> {NetChain}]}}, BaselinePosition -> 
                    Automatic, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]], 
                    StyleBox["]", "NonInterpretableSummary"]}]}, "CopyTag", 
                   DisplayFunction -> (#& ), 
                   InterpretationFunction -> ("NetChain[<>]"& )], False, 
                  Selectable -> False, Editable -> False, SelectWithContents -> 
                  True], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["UninitializedNet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ArrayList", 
                  Style[
                  "ArrayList", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ArrayList"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["ArrayList"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{RawArray["Real64",{{4.092582751829124, 
                    3.801257071680329}}], 
                    RawArray["Real64",{0.43036943173769837`}]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{RawArray["Real64",{{4.092582751829124, 
                    3.801257071680329}}], 
                    RawArray["Real64",{0.43036943173769837`}]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ArrayList"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["ArrayList"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ArrayAssociation", 
                  Style[
                  "ArrayAssociation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ArrayAssociation"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["ArrayAssociation"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   
                   Association[{1, "Weights"} -> 
                    RawArray["Real64",{{4.092582751829124, 
                    3.801257071680329}}], {1, "Biases"} -> 
                    RawArray["Real64",{0.43036943173769837`}]], 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[
                    
                    Association[{1, "Weights"} -> 
                    RawArray["Real64",{{4.092582751829124, 
                    3.801257071680329}}], {1, "Biases"} -> 
                    RawArray["Real64",{0.43036943173769837`}]], 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ArrayAssociation"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["ArrayAssociation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["WLVersion", 
                  Style[
                  "WLVersion", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["WLVersion"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["WLVersion"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["12.1.4", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "3a5aafe5-f60b-402c-972a-f86ac1f5f8f3"][{
                 Key["WLVersion"]}, "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{789., {155., 161.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{789., {155., 161.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8088509597243905`*^9, {3.808850990315662*^9, 3.808851010647991*^9}, 
   3.808851068956813*^9, 3.8096139951479535`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e9285c39-7f8f-4f1a-be1a-e6be76ae32c7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Wolfram Neural net repository and ", "Subsection",
 CellChangeTimes->{{3.8072789482037477`*^9, 3.8072789570573072`*^9}, {
   3.808937354374197*^9, 3.808937355519317*^9}, {3.809276177445157*^9, 
   3.809276186125537*^9}, 
   3.812463845973462*^9},ExpressionUUID->"353a51cd-cc30-45ce-8976-\
926320193db7"],

Cell[BoxData["1"], "Input",
 CellChangeTimes->{
  3.8096379408931837`*^9},ExpressionUUID->"8ed99df5-370d-4738-896e-\
f30cdebe73b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SystemOpen", "[", 
   "\"\<https://resources.wolframcloud.com/NeuralNetRepository/\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.808938286668131*^9, 3.808938297649207*^9}, {
   3.8089383589741464`*^9, 3.808938361525948*^9}, 3.808938462256349*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"b5a64978-dedc-45f6-abc9-bcec0032acc6"],

Cell[BoxData["2"], "Input",
 CellChangeTimes->{
  3.8096379547961507`*^9},ExpressionUUID->"cfa86d56-cf89-4f12-9f38-\
c86265f7dadd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceSearch", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "\[Rule]", " ", "\"\<Image\>\""}], ",", 
     RowBox[{"\"\<ResourceType\>\"", "\[Rule]", "\"\<NeuralNet\>\""}]}], 
    "}"}], "]"}], "//", 
  RowBox[{
   RowBox[{"Dataset", "[", 
    RowBox[{"#", ",", 
     RowBox[{"MaxItems", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "3"}], "}"}]}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.808945504178034*^9, 3.8089455042270145`*^9}, {
  3.808945593438218*^9, 3.808945606490364*^9}, {3.808946521225898*^9, 
  3.8089465569869337`*^9}, {3.8089466501363773`*^9, 3.808946653662771*^9}, {
  3.808947013747489*^9, 3.8089470431776686`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"a0f77188-d12e-4862-b063-e6c88db45736"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Name" -> 
        "Colorful Image Colorization Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> 
           "Colorful Image Colorization Trained on ImageNet Competition Data",
            "UUID" -> "e6859f22-c93f-4d5c-a897-e80036bc16b3", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.4.0", "Description" -> 
           "Colorize a grayscale image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.3", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Colorize a grayscale image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
e6859f22-c93f-4d5c-a897-e80036bc16b3"]], 
       Association[
       "Name" -> 
        "ColorNet Image Colorization Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> 
           "ColorNet Image Colorization Trained on ImageNet Competition Data",
            "UUID" -> "8e7ef3f0-8ccc-4162-bcc2-03d34d14c430", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.2.0", "Description" -> 
           "Colorize a grayscale image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Colorize a grayscale image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL[
         "https://resources.wolframcloud.com/NeuralNetRepository/resources/\
8e7ef3f0-8ccc-4162-bcc2-03d34d14c430"]], 
       Association[
       "Name" -> "Wolfram ImageIdentify Net V1", "ResourceType" -> 
        "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Wolfram ImageIdentify Net V1", "UUID" -> 
           "044dd5d5-5895-4252-889f-f67729b1a6d3", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.10.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.1", 
           "ContentElements" -> {
            "ConstructionNotebook", "EvaluationNet", 
             "UninitializedEvaluationNet", "ConstructionNotebookExpression", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
044dd5d5-5895-4252-889f-f67729b1a6d3"]], 
       Association[
       "Name" -> "Ademxapp Model A Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Ademxapp Model A Trained on ImageNet Competition Data", 
           "UUID" -> "52e497ed-7c5f-4792-83ec-a025ee058c1a", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.1.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
52e497ed-7c5f-4792-83ec-a025ee058c1a"]], 
       Association[
       "Name" -> "VGG-19 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "VGG-19 Trained on ImageNet Competition Data", "UUID" -> 
           "2fe854a5-131f-4d60-8534-27a8fa0ac4e5", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.1.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
2fe854a5-131f-4d60-8534-27a8fa0ac4e5"]], 
       Association[
       "Name" -> "VGG-16 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "VGG-16 Trained on ImageNet Competition Data", "UUID" -> 
           "08fd9fd6-8bfb-4f9f-88b2-c4334919bcfd", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.1.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.1", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
08fd9fd6-8bfb-4f9f-88b2-c4334919bcfd"]], 
       Association[
       "Name" -> "ColorNet Image Colorization Trained on Places Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "ColorNet Image Colorization Trained on Places Data", 
           "UUID" -> "a6fc21a7-7d1c-46d6-af8c-0691a06b64a5", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.2.0", "Description" -> 
           "Colorize a grayscale image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Colorize a grayscale image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
a6fc21a7-7d1c-46d6-af8c-0691a06b64a5"]], 
       Association[
       "Name" -> "YOLO V3 Trained on Open Images Data", "ResourceType" -> 
        "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "YOLO V3 Trained on Open Images Data", "UUID" -> 
           "38daa298-4f91-4108-9cc3-e4a21103bc45", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.1.0", "Description" -> 
           "Detect and localize objects in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "12.0", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Detect and localize objects in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
38daa298-4f91-4108-9cc3-e4a21103bc45"]], 
       Association[
       "Name" -> 
        "Squeeze-and-Excitation Net Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> 
           "Squeeze-and-Excitation Net Trained on ImageNet Competition Data", 
           "UUID" -> "57aad159-9319-4ff9-afab-95a2acb272bf", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.1.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "12.0", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "EvaluationNet:Inception-BatchNorm", 
             "EvaluationNet:ResNet-101", "EvaluationNet:ResNet-152", 
             "EvaluationNet:ResNet-50", "EvaluationNet:ResNeXt-101", 
             "EvaluationNet:ResNeXt-50", "EvaluationNet:SENet-154", 
             "UninitializedEvaluationNet", 
             "UninitializedEvaluationNet:Inception-BatchNorm", 
             "UninitializedEvaluationNet:ResNet-101", 
             "UninitializedEvaluationNet:ResNet-152", 
             "UninitializedEvaluationNet:ResNet-50", 
             "UninitializedEvaluationNet:ResNeXt-101", 
             "UninitializedEvaluationNet:ResNeXt-50", 
             "UninitializedEvaluationNet:SENet-154", "EvaluationExample"}]], 
        "Description" -> "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
57aad159-9319-4ff9-afab-95a2acb272bf"]], 
       Association[
       "Name" -> "Inception V3 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Inception V3 Trained on ImageNet Competition Data", 
           "UUID" -> "8d890763-4d74-4f89-90bf-88ef7c60f439", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.7.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.1", 
           "ContentElements" -> {
            "ConstructionNotebook", "EvaluationNet", 
             "UninitializedEvaluationNet", "ConstructionNotebookExpression", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
8d890763-4d74-4f89-90bf-88ef7c60f439"]], 
       Association[
       "Name" -> "ResNet-50 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "ResNet-50 Trained on ImageNet Competition Data", "UUID" -> 
           "bfabd9e5-7de8-40bc-964a-44901908630a", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.1.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
bfabd9e5-7de8-40bc-964a-44901908630a"]], 
       Association[
       "Name" -> "ResNet-152 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "ResNet-152 Trained on ImageNet Competition Data", "UUID" -> 
           "3dfe5a8d-b14c-4a75-b53c-8783c103d23d", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.1.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
3dfe5a8d-b14c-4a75-b53c-8783c103d23d"]], 
       Association[
       "Name" -> "ResNet-101 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "ResNet-101 Trained on ImageNet Competition Data", "UUID" -> 
           "8536f93a-af9a-4f71-a516-87eee51cc193", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.1.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
8536f93a-af9a-4f71-a516-87eee51cc193"]], 
       Association[
       "Name" -> "Inception V1 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Inception V1 Trained on ImageNet Competition Data", 
           "UUID" -> "55976aa4-5349-4c45-bf40-d607e2adf00f", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.6.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.1", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
55976aa4-5349-4c45-bf40-d607e2adf00f"]], 
       Association[
       "Name" -> "MobileNet V2 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "MobileNet V2 Trained on ImageNet Competition Data", 
           "UUID" -> "0361f9ea-8a2a-4a86-b270-733c1f95d38e", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.3.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "12.0", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "EvaluationNet:mobilev2_0.35_128", 
             "EvaluationNet:mobilev2_0.35_160", 
             "EvaluationNet:mobilev2_0.35_192", 
             "EvaluationNet:mobilev2_0.35_224", 
             "EvaluationNet:mobilev2_0.35_96", 
             "EvaluationNet:mobilev2_0.5_128", 
             "EvaluationNet:mobilev2_0.5_160", 
             "EvaluationNet:mobilev2_0.5_192", 
             "EvaluationNet:mobilev2_0.5_224", 
             "EvaluationNet:mobilev2_0.5_96", 
             "EvaluationNet:mobilev2_0.75_128", 
             "EvaluationNet:mobilev2_0.75_160", 
             "EvaluationNet:mobilev2_0.75_192", 
             "EvaluationNet:mobilev2_0.75_224", 
             "EvaluationNet:mobilev2_0.75_96", 
             "EvaluationNet:mobilev2_1._128", "EvaluationNet:mobilev2_1._160",
              "EvaluationNet:mobilev2_1._192", 
             "EvaluationNet:mobilev2_1._224", 
             "EvaluationNet:mobilev2_1.3_224", 
             "EvaluationNet:mobilev2_1.4_224", "EvaluationNet:mobilev2_1._96",
              "UninitializedEvaluationNet", 
             "UninitializedEvaluationNet:mobilev2_0.35_128", 
             "UninitializedEvaluationNet:mobilev2_0.35_160", 
             "UninitializedEvaluationNet:mobilev2_0.35_192", 
             "UninitializedEvaluationNet:mobilev2_0.35_224", 
             "UninitializedEvaluationNet:mobilev2_0.35_96", 
             "UninitializedEvaluationNet:mobilev2_0.5_128", 
             "UninitializedEvaluationNet:mobilev2_0.5_160", 
             "UninitializedEvaluationNet:mobilev2_0.5_192", 
             "UninitializedEvaluationNet:mobilev2_0.5_224", 
             "UninitializedEvaluationNet:mobilev2_0.5_96", 
             "UninitializedEvaluationNet:mobilev2_0.75_128", 
             "UninitializedEvaluationNet:mobilev2_0.75_160", 
             "UninitializedEvaluationNet:mobilev2_0.75_192", 
             "UninitializedEvaluationNet:mobilev2_0.75_224", 
             "UninitializedEvaluationNet:mobilev2_0.75_96", 
             "UninitializedEvaluationNet:mobilev2_1._128", 
             "UninitializedEvaluationNet:mobilev2_1._160", 
             "UninitializedEvaluationNet:mobilev2_1._192", 
             "UninitializedEvaluationNet:mobilev2_1._224", 
             "UninitializedEvaluationNet:mobilev2_1.3_224", 
             "UninitializedEvaluationNet:mobilev2_1.4_224", 
             "UninitializedEvaluationNet:mobilev2_1._96", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
0361f9ea-8a2a-4a86-b270-733c1f95d38e"]], 
       Association[
       "Name" -> 
        "Single-Image Depth Perception Net Trained on Depth in the Wild Data",
         "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> 
           "Single-Image Depth Perception Net Trained on Depth in the Wild \
Data", "UUID" -> "388a87b4-a7df-4c61-8416-8815efb87e11", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.2.0", "Description" -> 
           "Estimate the depth map of an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Estimate the depth map of an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
388a87b4-a7df-4c61-8416-8815efb87e11"]], 
       Association[
       "Name" -> "Wide ResNet-50-2 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "Wide ResNet-50-2 Trained on ImageNet Competition Data", 
           "UUID" -> "58aed759-7ada-46c8-9bce-dc7938690a0e", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.8.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.3", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
58aed759-7ada-46c8-9bce-dc7938690a0e"]], 
       Association[
       "Name" -> 
        "CycleGAN Zebra-to-Horse Translation Trained on ImageNet Competition \
Data", "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> 
           "CycleGAN Zebra-to-Horse Translation Trained on ImageNet \
Competition Data", "UUID" -> "4b148040-10cd-43e2-8152-1a31c675cec3", 
           "ResourceType" -> "NeuralNet", "Version" -> "1.4.0", "Description" -> 
           "Turn zebras into horses in a photo", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.3", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Turn zebras into horses in a photo", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
4b148040-10cd-43e2-8152-1a31c675cec3"]], 
       Association[
       "Name" -> 
        "CycleGAN Orange-to-Apple Translation Trained on ImageNet Competition \
Data", "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> 
           "CycleGAN Orange-to-Apple Translation Trained on ImageNet \
Competition Data", "UUID" -> "ec7daa81-cb06-4a57-bd01-adc00c40d068", 
           "ResourceType" -> "NeuralNet", "Version" -> "1.4.0", "Description" -> 
           "Turn oranges into apples in a photo", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.3", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Turn oranges into apples in a photo", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
ec7daa81-cb06-4a57-bd01-adc00c40d068"]], 
       Association[
       "Name" -> 
        "CycleGAN Horse-to-Zebra Translation Trained on ImageNet Competition \
Data", "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> 
           "CycleGAN Horse-to-Zebra Translation Trained on ImageNet \
Competition Data", "UUID" -> "1358efcb-d8cf-49f4-a130-d0dba2a0918c", 
           "ResourceType" -> "NeuralNet", "Version" -> "1.4.0", "Description" -> 
           "Turn horses into zebras in a photo", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.3", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Turn horses into zebras in a photo", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
1358efcb-d8cf-49f4-a130-d0dba2a0918c"]], 
       Association[
       "Name" -> 
        "CycleGAN Apple-to-Orange Translation Trained on ImageNet Competition \
Data", "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> 
           "CycleGAN Apple-to-Orange Translation Trained on ImageNet \
Competition Data", "UUID" -> "d148a18c-a9e3-49ed-ae80-3eebfe459123", 
           "ResourceType" -> "NeuralNet", "Version" -> "1.7.0", "Description" -> 
           "Turn apples into oranges in a photo", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.3", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Turn apples into oranges in a photo", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
d148a18c-a9e3-49ed-ae80-3eebfe459123"]], 
       Association[
       "Name" -> "SqueezeNet V1.1 Trained on ImageNet Competition Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> "SqueezeNet V1.1 Trained on ImageNet Competition Data", 
           "UUID" -> "ef989b1b-6021-470b-818f-6d5d41783473", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.6.0", "Description" -> 
           "Identify the main object in an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.1", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Identify the main object in an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
ef989b1b-6021-470b-818f-6d5d41783473"]], 
       Association[
       "Name" -> 
        "Single-Image Depth Perception Net Trained on NYU Depth V2 Data", 
        "ResourceType" -> "NeuralNet", "ResourceObject" -> ResourceObject[
          Association[
          "Name" -> 
           "Single-Image Depth Perception Net Trained on NYU Depth V2 Data", 
           "UUID" -> "68378e4b-8238-4375-aa45-0cd8e7a7a43a", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.2.0", "Description" -> 
           "Estimate the depth map of an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Estimate the depth map of an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
68378e4b-8238-4375-aa45-0cd8e7a7a43a"]], 
       Association[
       "Name" -> 
        "Single-Image Depth Perception Net Trained on NYU Depth V2 and Depth \
in the Wild Data", "ResourceType" -> "NeuralNet", "ResourceObject" -> 
        ResourceObject[
          Association[
          "Name" -> 
           "Single-Image Depth Perception Net Trained on NYU Depth V2 and \
Depth in the Wild Data", "UUID" -> "45974932-854c-4af4-86aa-faa1bff7e7ec", 
           "ResourceType" -> "NeuralNet", "Version" -> "1.2.0", "Description" -> 
           "Estimate the depth map of an image", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"],
            "WolframLanguageVersionRequired" -> "11.2", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationNet", "UninitializedEvaluationNet", 
             "EvaluationExample"}]], "Description" -> 
        "Estimate the depth map of an image", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
45974932-854c-4af4-86aa-faa1bff7e7ec"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Name"} -> 1, {All, "ResourceType"} -> 
        1, {All, "ResourceObject"} -> 1, {All, "Description"} -> 
        1, {All, "Location"} -> 1, {All, "DocumentationLink"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Name" -> TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
            "ResourceType" -> TypeSystem`PackageScope`AtomShape[81.], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> 
            TypeSystem`PackageScope`AtomShape[374.40000000000003`], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 3, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["NeuralNet"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 24], "Meta" -> 
     Association["ID" -> 231258431159773, MaxItems -> {4, 3}], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Name"} -> 1, {All, "ResourceType"} -> 
        1, {All, "ResourceObject"} -> 1, {All, "Description"} -> 
        1, {All, "Location"} -> 1, {All, "DocumentationLink"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Name" -> TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
            "ResourceType" -> TypeSystem`PackageScope`AtomShape[81.], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> 
            TypeSystem`PackageScope`AtomShape[374.40000000000003`], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 3, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["NeuralNet"]], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 24], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     24, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Name"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{All, "Name"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "ResourceType"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{All, "ResourceType"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceObject", 
                  Style[
                  "ResourceObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "ResourceObject"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{
                All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
              "Colorful Image Colorization Trained on ImageNet Competition \
Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NeuralNet", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{1, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{81., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Colorful Image Colorization Trained on ImageNet \
Competition Data\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{1, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "ColorNet Image Colorization Trained on ImageNet Competition \
Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NeuralNet", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{2, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{81., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"ColorNet Image Colorization Trained on ImageNet \
Competition Data\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{2, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Wolfram ImageIdentify Net V1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NeuralNet", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{3, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{81., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Wolfram ImageIdentify Net V1\"", "\"\\\"\"", "\"]\""}, 
                 "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{3, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Ademxapp Model A Trained on ImageNet Competition Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NeuralNet", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{4, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{81., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Ademxapp Model A Trained on ImageNet Competition Data\"",
                   "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "46bfd193-2f33-4889-86cf-3e42f954d088"][{4, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 4 
                    If[True, 24, 1], {1, 24 - -4 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 4 
                    If[False, 24, 1], {1, 24 - -4 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 4, " of ", 
                    Style[
                    24, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 4, " of ", 
                    Style[
                    24, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    4 If[False, 24, 1], {1, 24 - 4 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    4 If[True, 24, 1], {1, 24 - 4 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]], 
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 3 
                    If[True, 6, 1], {1, 6 - -3 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 3 
                    If[False, 6, 1], {1, 6 - -3 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 3, " of ", 
                    Style[
                    6, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 3, " of ", 
                    Style[
                    6, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    3 If[False, 6, 1], {1, 6 - 3 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    3 If[True, 6, 1], {1, 6 - 3 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{837., {94., 100.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{837., {94., 100.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.808946500397071*^9, {3.8089465450464067`*^9, 3.8089465623012767`*^9}, 
   3.8089466593165293`*^9, {3.80894702621247*^9, 3.808947049497503*^9}, 
   3.8096151495191517`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"dbdc4a93-b9f9-43c2-b082-d6d17c66e388"]
}, Open  ]],

Cell[BoxData["3"], "Input",
 CellChangeTimes->{
  3.8096379586231766`*^9},ExpressionUUID->"945aa3ae-14e0-41db-ad0f-\
2aa2d5359496"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "\"\<Name\>\"", "\[Rule]", " ", "\"\<Wolfram ImageIdentify\>\""}], ",", 
     RowBox[{"\"\<ResourceType\>\"", "\[Rule]", " ", "\"\<NeuralNet\>\""}]}], 
    "}"}], ",", "\"\<Object\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.808947858247735*^9, 3.808947913042235*^9}, 
   3.8089484098388414`*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"7a88d382-bde2-4bea-968b-d0c0aac90f56"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["ResourceObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"], 
                ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
               ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztm+tvlFkdx4m+8aX/gv+FviKaaNyob9jV7KtNWGXXjREjGIkvNllIuaZI
u0ADtNDLcGkRgYa2Kb3QNr2lF0rTexlIt4MDNFDIlmKZFDN+mF96PDm3Pk9n
3Mq635TJzDxnzjnf3/13nofvffiHbR99a8uWLbu/w8u27Xt+uGvX9r+8+10+
/HLn7k8+3rnjN+/s/NOOj3fs+v6H3+bLn/DvHf69eZ/9BoXAcuZpX6qifnpP
c7Lodrp29V+Zzd5RYZBc7Dox8OOjvT9Qf5Uj7y8s393sfeUL9GXwUuzedt11
z5fZvORvYqFhs3eXF/4+9Ucftbb7RzZ7dxvHyspKYuATH7WOuZLN3mBsPHny
pL+/v6qq6tChQ2dv7v4aGOSDBw+am5tP5MCbubm5bC6MlPY4wkhJ+896+7u/
mo0tLS2lc4j1K0xufHz8+vXrKKiiogJloTJ1dXV19cqVK0091X/t+pHO69it
n36xMA798+fPv3jxotBU/oPnz5+zt9NrqKysnJmZWfcnsGBjMGLzd+7cgaMx
hm8YAPE3A8YGRx9dJW7gX9jhzN0pLjEmmUyeOnWK1/8Gr0wmk0gkTltgt/Zg
TK6trQ17KykpQeaBLaELfA2bFGr2gIaGhqGhIRkJTaZFxQXkBfr6+mxeAOt6
+fJlNmdUYnLFxcV82d3drZucE+iUkY8ePWLbKMVpckzLJTUV0/KTdWeOBUTq
pAZaW1uRZ1FRkZhcRKeAEXuGnUyOWHwjsQE0q5QlPxRVFgTIykft0qVLcb2A
8exW/M5nijo6clAfoYmhIk/bczcAPYAYmJ2djTUVmq2trZVdBUzRALJFffo3
yAd3zj+2TE5O+nzt6NGjEZ0LEDCRkrKusCnqwHQhYsSQQsWWpqYmm9rly5eZ
Vg+JmIpPkowhYKqPUUxRB+pGLPb3BYktTC7xhERw8+bNmpoaXpV1ZXOyxcH1
qKIusSv2oKaKboo6WGt6etr+vuCxhY2hKWxVxQQFlQtI1uXl5QzTeWXjmKKx
YiBNYDC6nLM5USP8ixcvUmDcuHEjlUpFX0uMRI/kBliorKyMFfUM7jPFuWf9
lyd+R09aPrytfnrP4j+/sMfwcylRnECnLCR1KUTswE6Cjs6OhVgOXrCDo35J
JWX1kTBSXV29b98+yEJQl3BfqsKojUv7t04/abVXVCWKE1LhtLS0OMsnEF13
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
Nyy1wU8=
               "], {{0, 0}, {73., 70.}}, {0, 255}, ColorFunction -> RGBColor],
               AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
              None, FrameTicks -> None, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"\"Wolfram ImageIdentify Net V1\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/NeuralNetRepository/\
resources/Wolfram-ImageIdentify-Net-V1"}, "HyperlinkURL"]}, "RowDefault"], 
                   "SummaryItem"]}], 
                TagBox["\"\"", "SummaryItem"]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"NeuralNet\"", "SummaryItem"]}], 
                "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"Identify the main object in an image\"", 
                   "SummaryItem"]}], "\[SpanFromLeft]"}}, AutoDelete -> False,
               BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
         GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"], 
                ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
               ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[
              RasterBox[CompressedData["
1:eJztm+tvlFkdx4m+8aX/gv+FviKaaNyob9jV7KtNWGXXjREjGIkvNllIuaZI
u0ADtNDLcGkRgYa2Kb3QNr2lF0rTexlIt4MDNFDIlmKZFDN+mF96PDm3Pk9n
3Mq635TJzDxnzjnf3/13nofvffiHbR99a8uWLbu/w8u27Xt+uGvX9r+8+10+
/HLn7k8+3rnjN+/s/NOOj3fs+v6H3+bLn/DvHf69eZ/9BoXAcuZpX6qifnpP
c7Lodrp29V+Zzd5RYZBc7Dox8OOjvT9Qf5Uj7y8s393sfeUL9GXwUuzedt11
z5fZvORvYqFhs3eXF/4+9Ucftbb7RzZ7dxvHyspKYuATH7WOuZLN3mBsPHny
pL+/v6qq6tChQ2dv7v4aGOSDBw+am5tP5MCbubm5bC6MlPY4wkhJ+896+7u/
mo0tLS2lc4j1K0xufHz8+vXrKKiiogJloTJ1dXV19cqVK0091X/t+pHO69it
n36xMA798+fPv3jxotBU/oPnz5+zt9NrqKysnJmZWfcnsGBjMGLzd+7cgaMx
hm8YAPE3A8YGRx9dJW7gX9jhzN0pLjEmmUyeOnWK1/8Gr0wmk0gkTltgt/Zg
TK6trQ17KykpQeaBLaELfA2bFGr2gIaGhqGhIRkJTaZFxQXkBfr6+mxeAOt6
+fJlNmdUYnLFxcV82d3drZucE+iUkY8ePWLbKMVpckzLJTUV0/KTdWeOBUTq
pAZaW1uRZ1FRkZhcRKeAEXuGnUyOWHwjsQE0q5QlPxRVFgTIykft0qVLcb2A
8exW/M5nijo6clAfoYmhIk/bczcAPYAYmJ2djTUVmq2trZVdBUzRALJFffo3
yAd3zj+2TE5O+nzt6NGjEZ0LEDCRkrKusCnqwHQhYsSQQsWWpqYmm9rly5eZ
Vg+JmIpPkowhYKqPUUxRB+pGLPb3BYktTC7xhERw8+bNmpoaXpV1ZXOyxcH1
qKIusSv2oKaKboo6WGt6etr+vuCxhY2hKWxVxQQFlQtI1uXl5QzTeWXjmKKx
YiBNYDC6nLM5USP8ixcvUmDcuHEjlUpFX0uMRI/kBliorKyMFfUM7jPFuWf9
lyd+R09aPrytfnrP4j+/sMfwcylRnECnLCR1KUTswE6Cjs6OhVgOXrCDo35J
JWX1kTBSXV29b98+yEJQl3BfqsKojUv7t04/abVXVCWKE1LhtLS0OMsnEF13
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
Nyy1wU8=
               "], {{0, 0}, {73., 70.}}, {0, 255}, ColorFunction -> RGBColor],
               AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
              None, FrameTicks -> None, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TemplateBox[{"\"Wolfram ImageIdentify Net V1\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/NeuralNetRepository/\
resources/Wolfram-ImageIdentify-Net-V1"}, "HyperlinkURL"]}, "RowDefault"], 
                   "SummaryItem"]}], 
                TagBox["\"\"", "SummaryItem"]}, {
                RowBox[{
                  TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"NeuralNet\"", "SummaryItem"]}], 
                "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"Identify the main object in an image\"", 
                   "SummaryItem"]}], "\[SpanFromLeft]"}, {
                RowBox[{
                  TagBox["\"ByteCount: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"\"", "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox[
                  "\"TrainingSetInformation: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"\"", "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"InputDomains: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    RowBox[{"Row", "[", 
                    RowBox[{"\"Image\"", ",", "\",\""}], "]"}], Short], 
                   "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"TaskType: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"Classification\"", "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"ImageIdentify\"", 
                    "\"object classification\""}, "RowWithSeparators"], 
                    Short], "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"Data Location: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   DynamicModuleBox[{
                    ResourceSystemClient`Private`typesetstorage$$ = 
                    ResourceSystemClient`Private`typesetstorageLocation, 
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "044dd5d5-5895-4252-889f-f67729b1a6d3"]}, 
                    DynamicBox[
                    ToBoxes[
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "044dd5d5-5895-4252-889f-f67729b1a6d3"]; If[
                    AssociationQ[ResourceSystemClient`Private`info$$], 
                    ResourceSystemClient`Private`typesetstorage$$[
                    Lookup[
                    ResourceSystemClient`Private`info$$, 
                    "ContentElementLocations", None]], 
                    Missing["NotAvailable"]], StandardForm], 
                    ImageSizeCache -> {115., {3., 9.}}], 
                    DynamicModuleValues :> {}], "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                  "\"044dd5d5-5895-4252-889f-f67729b1a6d3\"", 
                   "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"1.10.0\"", "SummaryItem"]}], ""}, {
                RowBox[{
                  TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    
                    TemplateBox[{
                    ",", "\",\"", "\"ConstructionNotebook\"", 
                    "\"EvaluationNet\"", "\"UninitializedEvaluationNet\"", 
                    "\"ConstructionNotebookExpression\"", 
                    "\"EvaluationExample\""}, "RowWithSeparators"], 
                    Short[#, 2]& ], "SummaryItem"]}], ""}}, AutoDelete -> 
              False, BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ResourceObject[
    Association[
    "Name" -> "Wolfram ImageIdentify Net V1", "UUID" -> 
     "044dd5d5-5895-4252-889f-f67729b1a6d3", "ResourceType" -> "NeuralNet", 
     "Version" -> "1.10.0", "Description" -> 
     "Identify the main object in an image", "RepositoryLocation" -> 
     URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
     "WolframLanguageVersionRequired" -> "11.1", 
     "ContentElements" -> {
      "ConstructionNotebook", "EvaluationNet", "UninitializedEvaluationNet", 
       "ConstructionNotebookExpression", "EvaluationExample"}]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{3.8089484141647015`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"5566a026-af77-4030-9766-160aec7fa12e"]
}, Open  ]],

Cell[BoxData["4"], "Input",
 CellChangeTimes->{
  3.809637980930461*^9},ExpressionUUID->"e6c7843c-d070-492e-acf7-\
660a987fea25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ResourceSearch", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\"\<Name\>\"", "\[Rule]", " ", "\"\<Wolfram ImageIdentify\>\""}], ",", 
       RowBox[{
       "\"\<ResourceType\>\"", "\[Rule]", " ", "\"\<NeuralNet\>\""}]}], "}"}],
      ",", "\"\<Object\>\""}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "ResourceData"}]], "Input",
 CellChangeTimes->{{3.808948740409705*^9, 3.8089487448854856`*^9}, {
   3.8089487989431925`*^9, 3.808948803336613*^9}, 3.8096157205918884`*^9, 
   3.8124608678627405`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"3283fab1-d091-488f-8868-47bf73e3cf52"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 7, 7}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{3, 3}, {3, 3}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "bn_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool_1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {55, 55}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "conv_2_red" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 1, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {55, 55}, "$OutputSize" -> {55, 55}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "bn_2_red" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {55, 55}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "relu_2_red" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 55, 55}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]]], "conv_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{192, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {55, 55}, "$OutputSize" -> {55, 55}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "bn_2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {55, 55}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "relu_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 55, 55}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]]], "pool_2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 192, 
                    "$InputSize" -> {55, 55}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 55, 55}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]]], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 192, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 192, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 192], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 192, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 192, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 192], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> NeuralNetworks`Private`DummyArray[{64}]]
                    , "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 192, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 192, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 192], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 64, 3,
                     3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 96, 3,
                     3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 96, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 96], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "$Channels" -> 192, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{32, 192, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{32}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 32, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 192, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 192], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{32}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{32}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    32, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {32, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{32, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "3b" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 64, 3,
                     3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 64, 3,
                     3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 96, 3,
                     3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 96, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 96], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "3c" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 320, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 320, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 320], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{160, 128, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    160, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 320, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 320, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 320], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 64, 3,
                     3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {27, 27}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 27, 27}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 96, 3,
                     3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 96, "ChannelGroups" -> 1, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 96], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 320, 
                    "$InputSize" -> {27, 27}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{320, 27, 27}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{320, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "4a" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{224, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    224, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 64, 3,
                     3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 96, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 96, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 96], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "$Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{224, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "4b" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{192, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 96, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 96, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 96], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 96, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 96, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 96], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "$Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "4c" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{160, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    160, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{160, 128, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    160, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{160, 128, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    160, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{160, 160, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 160, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 160], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    160, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "$Channels" -> 576, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 576, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 576, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 576], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{576, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "4d" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{96, 608, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 96, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 608, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 608], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{96}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{96}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    96, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {96, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 608, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 608, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 608], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{192, 128, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{160, 608, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 608, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 608], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    160, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{192, 160, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 160, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 160], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{192, 192, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 192, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 192], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "$Channels" -> 608, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 608, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 608, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 608], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{96, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "4e" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 608, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 608, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 608], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{192, 128, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{192, 608, 
                    1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 608, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 608], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 192, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 192, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 192], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 608, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{608, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 7, 7}, NeuralNetworks`RealT],
                     "3" -> NeuralNetworks`TensorT[{608, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "5a" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{352, 1056,
                     1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{352}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1056, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1056],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{352}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{352}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{352}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{352}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    352, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{192, 1056,
                     1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1056, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1056],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{320, 192, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{320}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 192, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 192], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{320}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{320}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{320}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{320}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    320, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{160, 1056,
                     1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 160, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1056, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1056],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{160}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{160}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    160, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{224, 160, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 160, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 160], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{160, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    224, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{224, 224, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 224, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 224], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    224, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "avg_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "$Channels" -> 1056, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 1056,
                     1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1056, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1056],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1056, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT],
                     "3" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "avg_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "5b" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "conv1x1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{352, 1024,
                     1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{352}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 352, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn1x1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{352}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{352}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{352}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{352}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    352, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1x1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {352, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{192, 1024,
                     1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3x3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{320, 192, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{320}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 320, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 192, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 192], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3x3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{320}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{320}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{320}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{320}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    320, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3x3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {320, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{320, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{192, 1024,
                     1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 192, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{192}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{192}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    192, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_reduce" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {192, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_0" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{224, 192, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 192, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 192], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{192, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_0" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    224, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_0" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "convdouble_3x3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{224, 224, 
                    3, 3}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 224, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 224, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 224], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "bndouble_3x3_1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{224}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{224}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    224, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "reludouble_3x3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {224, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT]]], "max_poolpool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 1024, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]], "convproj" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 1024,
                     1, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "bnproj" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.0000100001, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "reluproj" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]]], "ch_concatchconcat" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{352, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{320, 7, 7}, NeuralNetworks`RealT],
                     "3" -> NeuralNetworks`TensorT[{224, 7, 7}, 
                    NeuralNetworks`RealT], "4" -> 
                    NeuralNetworks`TensorT[{128, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_reduce", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bndouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "convproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bnproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1x1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3x3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reludouble_3x3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "reluproj", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1x1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "convdouble_3x3_reduce", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "max_poolpool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ch_concatchconcat", "Outputs", "Output"]}], 
                    "global_pool" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {7, 7}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Mean, 
                    "Dimensionality" -> 2, "$Channels" -> 1024, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {1, 1}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 1, 1}, 
                    NeuralNetworks`RealT]]], "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4315, 1024}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{4315}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4315}, "$OutputSize" -> 4315, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024, 1, 1}],
                     "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 1, 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4315}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv_2_red", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn_2_red", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv_2_red", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_2_red", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn_2_red", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_2_red", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3c", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4c", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4d", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4c", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4e", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4d", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4e", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5b", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "global_pool", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "global_pool", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "MeanImage" -> {0.48, 0.46, 0.4}, 
                    "$Version" -> "12.1.4", "VarianceImage" -> None, 
                    "Interleaving" -> False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4315}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> {
                    Entity["Building", "AzadiTower::7v988"], 
                    Entity["Building", "Colosseum::pq39x"], 
                    Skeleton[4312], 
                    Entity["FictionalCharacter", "Yoda"]}, "Dimensions" -> 
                    4315, "$Version" -> "12.1.4", "InputDepth" -> 1, "$Rank" -> 
                    0]]], NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bn_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bn_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"55\"", "\"55\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_2_red\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"55\"", "\"55\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bn_2_red\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"55\"", "\"55\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bn_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu_2_red\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"55\"", "\"55\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu_2_red"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"192\"", 
                    "\"55\"", "\"55\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bn_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bn_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"192\"", 
                    "\"55\"", "\"55\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bn_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"192\"", 
                    "\"55\"", "\"55\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"192\"", 
                    "\"27\"", "\"27\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"27\"", "\"27\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"320\"", 
                    "\"27\"", "\"27\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3c\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "17", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"576\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"576\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"576\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4c\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"608\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4c"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4d\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"608\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4d"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4e\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4e"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "17", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4e"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1056\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4e"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5a\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5a"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5b\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "23", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5b"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"global_pool\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"1\"", "\"1\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "global_pool"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4315\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4315\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.808949456021619*^9, 3.812460942251601*^9, 
  3.812461025802647*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"67038ec9-41c8-4fb5-a045-b43c024057f1"]
}, Open  ]],

Cell["5", "Text",
 CellChangeTimes->{{3.80894196977754*^9, 3.8089419712017484`*^9}, {
   3.8089420584611683`*^9, 3.8089420682408795`*^9}, {3.808942126305831*^9, 
   3.8089423382872086`*^9}, {3.8089490868553276`*^9, 
   3.8089492401772337`*^9}, {3.8089493868803415`*^9, 
   3.8089494192727566`*^9}, {3.809392089166169*^9, 3.809392100335163*^9}, 
   3.8096380004103637`*^9},ExpressionUUID->"8908a11a-9d37-4007-befd-\
4890a075a181"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "ResourceObject", "[", "\"\<Wolfram ImageIdentify Net V1\>\"", "]"}], 
      "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{"ToString", ",", 
      RowBox[{"{", 
       RowBox[{
       "Name", ",", "RepositoryLocation", ",", "ResourceType", ",", 
        "ContentElements", ",", "Version", ",", "Description", ",", 
        "TrainingSetData", ",", "TrainingSetInformation", ",", "InputDomains",
         ",", "TaskType", ",", "Keywords", ",", "Attributes", ",", 
        "LatestUpdate", ",", "DownloadedVersion", ",", "Format", ",", 
        "ContributorInformation", ",", "DOI", ",", "Originator", ",", 
        "ReleaseDate", ",", "ShortName", ",", 
        "WolframLanguageVersionRequired"}], "}"}], ",", "1"}], "]"}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.808943903005988*^9, 3.808944002359289*^9}, {
   3.8089441674571886`*^9, 3.808944364612419*^9}, {3.8089444681704564`*^9, 
   3.808944520976567*^9}, {3.808944588748166*^9, 3.8089446386704197`*^9}, {
   3.8089446739715977`*^9, 3.808944674501134*^9}, 3.808949323911289*^9, {
   3.8089493607135468`*^9, 3.808949361287838*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"84b7798c-69a9-4361-911d-f2b3453c7273"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Name" -> "Wolfram ImageIdentify Net V1", "RepositoryLocation" -> 
       URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
       "ResourceType" -> "NeuralNet", 
       "ContentElements" -> {
        "ConstructionNotebook", "EvaluationNet", "UninitializedEvaluationNet",
          "ConstructionNotebookExpression", "EvaluationExample"}, "Version" -> 
       "1.10.0", "Description" -> "Identify the main object in an image", 
       "TrainingSetData" -> Missing["NotAvailable"], "TrainingSetInformation" -> 
       "Internal Wolfram ImageIdentify training set, consisting of over 3 \
million training images and over 4,000 classes of objects (not publicly \
available).", "InputDomains" -> "Image", "TaskType" -> "Classification", 
       "Keywords" -> {"ImageIdentify", "object classification"}, 
       "Attributes" -> {"LocalCopyable", "CloudCopyable", "Multipart"}, 
       "LatestUpdate" -> 
       DateObject[{2020, 2, 28, 1, 0, 0.}, "Instant", "Gregorian", -6.], 
       "DownloadedVersion" -> "1.10.0", "Format" -> 
       Association[
        "EvaluationNet" -> "WLNet", "UninitializedEvaluationNet" -> "WLNet", 
         "ConstructionNotebookExpression" -> "NB", "EvaluationExample" -> 
         "WXF"], "ContributorInformation" -> 
       Association[
        "PublisherID" -> "Wolfram", "DisplayName" -> "Wolfram Research"], 
       "DOI" -> "https://doi.org/10.24097/wolfram.34204.data", "Originator" -> 
       "Wolfram Research", "ReleaseDate" -> 
       DateObject[{2017, 2, 20, 17, 0, 0.}, "Instant", "Gregorian", -6.], 
       "ShortName" -> "Wolfram-ImageIdentify-Net-V1", 
       "WolframLanguageVersionRequired" -> "11.1"], "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[211.20000000000005`], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 21], "Meta" -> 
     Association["ID" -> 176033741002018], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[211.20000000000005`], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 21], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 21, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Name"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Wolfram ImageIdentify Net V1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["RepositoryLocation", 
                  Style[
                  "RepositoryLocation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["RepositoryLocation"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["RepositoryLocation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.wolframcloud.com/objects/resourcesyste...", 
                URL[
                "https://www.wolframcloud.com/objects/resourcesystem/api/1.0"]\
], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["RepositoryLocation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ResourceType"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ResourceType"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["NeuralNet", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ContentElements", 
                  Style[
                  "ContentElements", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ContentElements"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ContentElements"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"ConstructionNotebook", "EvaluationNet", 
                    "UninitializedEvaluationNet", 
                    "ConstructionNotebookExpression", "EvaluationExample"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"ConstructionNotebook", "EvaluationNet", 
                    "UninitializedEvaluationNet", 
                    "ConstructionNotebookExpression", "EvaluationExample"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ContentElements"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ContentElements"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Version", 
                  Style[
                  "Version", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Version"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Version"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["1.10.0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Description", 
                  Style[
                  "Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Description"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Description"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Identify the main object in an image", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{345.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TrainingSetData", 
                  Style[
                  "TrainingSetData", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["TrainingSetData"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["TrainingSetData"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["TrainingSetData"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TrainingSetInformation", 
                  Style[
                  "TrainingSetInformation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["TrainingSetInformation"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["TrainingSetInformation"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "Internal Wolfram ImageIdentify training set, consisting of \
over 3 million training images and over 4,000 classes of objects (not \
publicly available).", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["TrainingSetInformation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{1430.4000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["InputDomains", 
                  Style[
                  "InputDomains", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["InputDomains"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["InputDomains"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Image", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["InputDomains"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TaskType", 
                  Style[
                  "TaskType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["TaskType"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["TaskType"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Classification", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["TaskType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Keywords", 
                  Style[
                  "Keywords", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Keywords"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Keywords"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"ImageIdentify", "object classification"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"ImageIdentify", "object classification"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Keywords"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Keywords"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Attributes", 
                  Style[
                  "Attributes", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Attributes"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Attributes"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"LocalCopyable", "CloudCopyable", "Multipart"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"LocalCopyable", "CloudCopyable", "Multipart"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Attributes"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Attributes"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LatestUpdate", 
                  Style[
                  "LatestUpdate", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["LatestUpdate"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["LatestUpdate"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Fri 28 Feb 2020 01:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["LatestUpdate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DownloadedVersion", 
                  Style[
                  "DownloadedVersion", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["DownloadedVersion"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["DownloadedVersion"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["1.10.0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["DownloadedVersion"]}, "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Format", 
                  Style[
                  "Format", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Format"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Format"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Association[
                   "EvaluationNet" -> "WLNet", "UninitializedEvaluationNet" -> 
                    "WLNet", "ConstructionNotebookExpression" -> "NB", 
                    "EvaluationExample" -> "WXF"], ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[
                    Association[
                    "EvaluationNet" -> "WLNet", "UninitializedEvaluationNet" -> 
                    "WLNet", "ConstructionNotebookExpression" -> "NB", 
                    "EvaluationExample" -> "WXF"], ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Format"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Format"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ContributorInformation", 
                  Style[
                  "ContributorInformation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ContributorInformation"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ContributorInformation"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Association[
                   "PublisherID" -> "Wolfram", "DisplayName" -> 
                    "Wolfram Research"], ShowStringCharacters -> False], 
                  Style[
                   Style[
                    Association[
                    "PublisherID" -> "Wolfram", "DisplayName" -> 
                    "Wolfram Research"], ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ContributorInformation"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ContributorInformation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DOI", 
                  Style[
                  "DOI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["DOI"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["DOI"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["https://doi.org/10.24097/wolfram.34204.data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["DOI"]}, "Item", False], "Mouse"], 
              ImageSize -> {{412.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Originator", 
                  Style[
                  "Originator", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["Originator"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Originator"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Wolfram Research", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["Originator"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ReleaseDate", 
                  Style[
                  "ReleaseDate", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ReleaseDate"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ReleaseDate"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Mon 20 Feb 2017 17:00:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ReleaseDate"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ShortName", 
                  Style[
                  "ShortName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key["ShortName"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ShortName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Wolfram-ImageIdentify-Net-V1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "55b88a69-f219-479a-abff-5fc659ebd936"][{
                 Key["ShortName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 21, 1], {1, 21 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    21, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    21, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}, "Rows",
                     100000000, {}]], MenuEvaluator -> Automatic]}], " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 21, 1], {1, 21 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1179., {258., 264.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1179., {258., 264.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.808949336448088*^9, 3.8089493624421196`*^9}},
 CellLabel->
  "Out[121]=",ExpressionUUID->"d0d7a7de-0aab-4330-af81-da07175aee30"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["LeNet Neural Network", "Subsection",
 CellChangeTimes->{
  3.8096380209366264`*^9, {3.8124638601897593`*^9, 
   3.812463872025135*^9}},ExpressionUUID->"5daec5bf-1f23-46d3-9ae8-\
60d2984b52ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NetModel", "[", 
     RowBox[{"\"\<LeNet Trained on MNIST Data\>\"", ",", "#"}], "]"}], "&"}], 
   "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Details\>\"", ",", "\"\<ShortName\>\"", ",", "\"\<TaskType\>\"", 
     ",", "\"\<SourceMetadata\>\""}], "}"}]}], "//", "Column"}]], "Input",
 CellChangeTimes->{{3.807457274697358*^9, 3.807457275097705*^9}, {
  3.8074573090657067`*^9, 3.8074573646681175`*^9}, {3.8074574530751867`*^9, 
  3.8074574616402225`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"3d13dbf0-c13e-4286-b4e1-fbf066a316d9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"This pioneer work for image classification with convolutional \
neural nets was released in 1998. It was developed by Yann LeCun and his \
collaborators at AT&T Labs while they experimented with a large range of \
machine learning solutions for classification on the MNIST dataset.\"\>"},
    {"\<\"LeNet-Trained-on-MNIST-Data\"\>"},
    {
     RowBox[{"{", "\<\"Classification\"\>", "}"}]},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"Citation\"\>", 
        "\[Rule]", "\<\"Y. LeCun, L. Bottou, Y. Bengio, P. Haffner, \
\\\"Gradient-Based Learning Applied to Document Recognition,\\\" Proceedings \
of the IEEE, 86(11), 2278-2324 (1998)\"\>"}], ",", 
       RowBox[{"\<\"Source\"\>", "\[Rule]", 
        TemplateBox[{
         "\"http://yann.lecun.com/exdb/lenet\"", 
          "http://yann.lecun.com/exdb/lenet"},
         "HyperlinkURL"]}], ",", 
       RowBox[{"\<\"Date\"\>", "\[Rule]", 
        RowBox[{"DateObject", "[", 
         RowBox[{
          RowBox[{"{", "1998", "}"}], ",", "\<\"Year\"\>", 
          ",", "\<\"Gregorian\"\>", ",", 
          RowBox[{"-", "5.`"}]}], "]"}]}]}], "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.8074573517708564`*^9, 3.8074573653008323`*^9}, {
  3.8074574576628113`*^9, 3.807457461956421*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"af788de4-df00-4b9a-888e-c2a2cf15681e"]
}, Open  ]],

Cell[BoxData["7"], "Input",
 CellChangeTimes->{
  3.809638040572575*^9},ExpressionUUID->"aa6f3a63-8d0b-4345-985d-\
570bae165618"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NetModel", "[", 
     RowBox[{"\"\<LeNet Trained on MNIST Data\>\"", ",", "#"}], "]"}], "&"}], 
   "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<TrainingSetInformation\>\"", ",", "\"\<InputDomains\>\"", ",", 
     "\"\<Performance\>\""}], "}"}]}], "//", "Column"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"ebf424c6-f4ce-4603-8209-8493c17dc8bb"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"MNIST Database of Handwritten Digits, consisting of 60,000 training \
and 10,000 test grayscale images of size 28x28.\"\>"},
    {
     RowBox[{"{", "\<\"Image\"\>", "}"}]},
    {"\<\"This model achieves 98.5% accuracy on the MNIST dataset.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.8091091298776083`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"9ed026ad-634d-49bd-b171-cea2aed30d66"]
}, Open  ]],

Cell[BoxData["8"], "Input",
 CellChangeTimes->{
  3.809638043649969*^9},ExpressionUUID->"c31dcb68-a9d8-4f78-ad8c-\
0854f4e2762c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "is", " ", "for", " ", "seven", " ", "elements", " ", 
     "randomly", " ", "sampled"}], ",", 
    RowBox[{
    "but", " ", "you", " ", "can", " ", "check", " ", "the", " ", "whole", 
     " ", "data", " ", 
     RowBox[{"set", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"SeedRandom", "[", "900", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"ResourceData", "[", 
         RowBox[{"\"\<MNIST\>\"", ",", "\"\<TrainingData\>\""}], "]"}], ",", 
        "7"}], "]"}]}], ",", 
     RowBox[{"TableDirections", "\[Rule]", "Row"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Map", "[", 
    RowBox[{"ImageDimensions", ",", 
     RowBox[{"%", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "7"}], ",", "1"}], "]"}], "]"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{"Test", " ", 
     RowBox[{"set", " ", ":", " ", 
      RowBox[{"ResourceData", "[", 
       RowBox[{"\"\<MNIST\>\"", ",", "\"\<TestData\>\""}], "]"}]}]}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.80727867380752*^9, 3.8072787845744514`*^9}, {
   3.807805451679827*^9, 3.8078055063985224`*^9}, {3.8078055647065477`*^9, 
   3.8078055747288074`*^9}, {3.807805627681594*^9, 3.8078057139138184`*^9}, {
   3.807805994166569*^9, 3.8078060220420313`*^9}, {3.807807990674411*^9, 
   3.8078079938021584`*^9}, 3.8091091898471794`*^9, {3.809276980409998*^9, 
   3.809277028319981*^9}, {3.809370646954764*^9, 3.809370650509061*^9}, {
   3.809370811605056*^9, 3.8093708141314955`*^9}, {3.809616169383149*^9, 
   3.809616170355531*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f84b0999-05b6-447c-83a7-fd3df7146910"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4LqXzNL72KXO6zAyMvInfMYida+LkTGoS4SxGVPqRxhQF7e7PaPA
SQy5WUApRnFFIJHxB4scs8OmL85AyUNY5HyB1Ayg3CR0uTuMIp+AVBEjB38g
ulN/O7Ee/v+zjYOxupB3FoYfuK0azRkZne8XMnZiuHSzFCMjh939/4WM5hgu
/f9u87oHQGoHI98nDDkoOMLogksKKMdxF7cc42xy5MrwyBUyMm7BJRfOyPge
l5wsY9w/XHJEAgANS7aP
          "], {{0, 28.}, {28., 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28., 28.},
        PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "9"}], 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9wcP+IGmO48XxMidcz3ESYGJlEJOvRZT51MzIBQUDESQxNn9yYGFm1
ct9gseiiBxOT3W6sblgrwMhtg1XmywKgVclXv2ORehbMBHaGYQCmM94KQuQY
mfjzMOQmpKTkLJ9xtJiJSekSVkuBYD4jYzEuuV92TFy45I4yMbnhkotlYopF
E9oNdUAbN5PQURSZF5KMV8GMNQyMjF1ojuNQfPL//9flBtyMLBVv///6gyQ3
iY/JK8BfB+T3eiD32hNkM6XAQcLEobXgK4brjqXoMzFypRzH5Xr6AADQZ6cK

          "], {{0, 28.}, {28., 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28., 28.},
        PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "5"}], 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8w8LeTkVH6Pna5tYzcHIzWv7BJvdVj3zmfkXEyNrkNjAn/3+kwRmKT
a2Y8////XEYubDY2cz/9//86dkN3JYJIYcYc7C4FgmAy5drxyLUxZvzFKvH1
2hwJRkbXI38wZB6lyzBCQM9vVJlffbKMIvmmjIw23oyMO1Gkfmczqq989X8N
A+fdH3GMjigarzH6vwZSEYzh////8GPcgyw3hfEIkNzHxLQbSL2bfh5Z7pJS
ypf/N8wZLbG5P4tRTpqDUfIWNrl/vXyMPgu+Y/U3vQAAmd+6/Q==
          "], {{0, 28.}, {28., 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28., 28.},
        PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "2"}], 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+soJqRgaWzcwOG+NEIUVFWJhDgMF+HKrVDiAkBOKxR5IKZkIHQU2S5
NKgos0psMhOTwE1kuY8zggQEBLRmzP7/U5GJKROHY6czMYlfQBFZGMQOBLk3
/v8XZGJKR5GawwWxTjhdhpnJ4xyy1GxeJiZVd3d+sLzEdRTP8TJxtNz7/38R
WDIUxURXJqY6EH1JEiQnf/v/n8cwqT1cTKp3gPSfbIillU/T2GBy7kxMh0B0
ElCctY6DicmDqRsmxwiWOxnDzMTkuv3/BJBWFLnPS0CBLXQYGELyaHKTY8G+
A0dOP5ocGEScAHN3cjMJ3IXJJTCDIkB8zlcof4t9CcJ/U7q7uyf+pwsAACTK
R78=
          "], {{0, 28.}, {28., 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28., 28.},
        PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "2"}], 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6c9eKOk8wqX3AQmpjYcUpddmDS3Ype65sYouAiHtkwmxk04pLYKMBW9
wy71hYuJ6SgObXOYmCJxSP0XZ7L+hkNqIwuTPw6p+xKMbLhsO87E5I3LNqDc
HErk9ia/xpD73ASWO2jKZPsGQ/K7aFBrqxgHExPTCUxTtYDCDEzCzOYvMeVu
KTAxMTK597zA5pzXewoSmTr+4nLtgAIAS+LQMQ==
          "], {{0, 28.}, {28., 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28., 28.},
        PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "6"}], 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9QcD+UIQiH1NNAJkbxZ1ilrskzMTEy1WGVs2FyY5LmksQmlcEoP0vE
rZdrF6bUMg4+rj7JsxeY/DCkHkozzdock/v/AhMThpwhk8r/3V3/scm9EWLc
tRvM0mdElytnYoK6wcAUXY6RieUAVM4WUy4WwrjLL40mtYiR8SKEdYER3b5F
jDKvIKx5TBkYcjq/wIz78qKf0OSeMTJBzAxlqkd3yn8bRlD4A+PPE0Pq/z42
lpgLtY5MFqcx5f77swHjjin8HRap///nSDOadrzBKkUnAAAjf7bM
          "], {{0, 28.}, {28., 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28., 28.},
        PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "0"}], 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x82oJGJIbDkyhWsckuZmZiBwMHR6zGG3P21r443NmqKS/CW4zb8mASm
Rhh4ybwSt8bQHNxyYeTKqeGRY8bjFqaDOOWWMuOWO8I2FbehOtV45HRwy03R
xi03FY++qVJPyNJ3EI8+JAAAkinvOA==
          "], {{0, 28.}, {28., 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{28., 28.},
        PlotRange->{{0, 28.}, {0, 28.}}], "\[Rule]", "7"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Row],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableDirections -> Row]]]], "Output",
 CellChangeTimes->{
  3.807482318658584*^9, {3.807805475887018*^9, 3.8078055091669083`*^9}, 
   3.807805578639063*^9, {3.8078056536376643`*^9, 3.807805674500676*^9}, {
   3.807805704524685*^9, 3.8078057316829033`*^9}, {3.807805776536291*^9, 
   3.8078057817328486`*^9}, 3.8078058467278557`*^9, {3.807805987252479*^9, 
   3.8078059957541037`*^9}, {3.807806034340069*^9, 3.8078060454604516`*^9}, {
   3.8078060893600044`*^9, 3.8078061277281647`*^9}, 3.807806163608735*^9, {
   3.807806197395279*^9, 3.8078062080542097`*^9}, 3.807806263709328*^9, 
   3.807806295206134*^9, 3.8078067661738234`*^9, 3.807806805117938*^9, 
   3.807806865378398*^9, {3.8078069098417215`*^9, 3.8078070048964863`*^9}, {
   3.8078070485900927`*^9, 3.8078070705686073`*^9}, 3.8078071128731766`*^9, 
   3.8078072338601804`*^9, 3.807807303998563*^9, {3.807807918308625*^9, 
   3.8078079430787907`*^9}, 3.8078079950986023`*^9, 3.8087454071959047`*^9, {
   3.809109184275305*^9, 3.809109191166668*^9}, 3.8092771062990165`*^9, {
   3.8093705907221985`*^9, 3.809370673002943*^9}, 3.809370815611088*^9, 
   3.809370849113312*^9, {3.812462884942271*^9, 3.8124628973915734`*^9}},
 CellLabel->
  "Out[5]//TableForm=",ExpressionUUID->"d0857575-8951-4234-bcbf-22b75c3bd6f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"28", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "28"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.807482318658584*^9, {3.807805475887018*^9, 3.8078055091669083`*^9}, 
   3.807805578639063*^9, {3.8078056536376643`*^9, 3.807805674500676*^9}, {
   3.807805704524685*^9, 3.8078057316829033`*^9}, {3.807805776536291*^9, 
   3.8078057817328486`*^9}, 3.8078058467278557`*^9, {3.807805987252479*^9, 
   3.8078059957541037`*^9}, {3.807806034340069*^9, 3.8078060454604516`*^9}, {
   3.8078060893600044`*^9, 3.8078061277281647`*^9}, 3.807806163608735*^9, {
   3.807806197395279*^9, 3.8078062080542097`*^9}, 3.807806263709328*^9, 
   3.807806295206134*^9, 3.8078067661738234`*^9, 3.807806805117938*^9, 
   3.807806865378398*^9, {3.8078069098417215`*^9, 3.8078070048964863`*^9}, {
   3.8078070485900927`*^9, 3.8078070705686073`*^9}, 3.8078071128731766`*^9, 
   3.8078072338601804`*^9, 3.807807303998563*^9, {3.807807918308625*^9, 
   3.8078079430787907`*^9}, 3.8078079950986023`*^9, 3.8087454071959047`*^9, {
   3.809109184275305*^9, 3.809109191166668*^9}, 3.8092771062990165`*^9, {
   3.8093705907221985`*^9, 3.809370673002943*^9}, 3.809370815611088*^9, 
   3.809370849113312*^9, {3.812462884942271*^9, 3.8124628974233303`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"a5f75bd4-5275-41a3-9888-f85d61e7882a"]
}, Open  ]],

Cell[BoxData["9"], "Input",
 CellChangeTimes->{
  3.8096383519053364`*^9},ExpressionUUID->"a31bffdd-1a83-488b-aa20-\
9dd810e3d9ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"TrainData", ",", "TestData"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ResourceData", "[", 
      RowBox[{"\"\<MNIST\>\"", ",", "\"\<TrainingData\>\""}], "]"}], ",", " ", 
     RowBox[{"ResourceData", "[", 
      RowBox[{"\"\<MNIST\>\"", ",", "\"\<TestData\>\""}], "]"}]}], " ", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.80727867380752*^9, 3.8072787845744514`*^9}, {
  3.8078081593600445`*^9, 3.8078081943280907`*^9}, {3.8082393910933094`*^9, 
  3.808239396091339*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9a6fb67b-0e5a-4d63-8a43-45869ca3233f"],

Cell[BoxData["10"], "Input",
 CellChangeTimes->{{3.809638354529727*^9, 
  3.8096383546546555`*^9}},ExpressionUUID->"d9b91ea5-b3d0-43b2-95f3-\
482b4ad9553c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UninitLeNet", "=", 
  RowBox[{"NetModel", "[", 
   RowBox[{
   "\"\<LeNet Trained on MNIST Data\>\"", ",", 
    "\"\<UninitializedEvaluationNet\>\""}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "To", " ", "work", " ", "locally", " ", "with", " ", "the", " ", 
    "untrained", " ", 
    RowBox[{"model", ":", " ", 
     RowBox[{"NetModel", "[", "\"\<LeNet\>\"", "]"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.807277034738454*^9, 3.8072770410256844`*^9}, {
  3.8072771752269025`*^9, 3.8072771882184825`*^9}, {3.807278856187851*^9, 
  3.807278861693758*^9}, {3.8072839452686653`*^9, 3.8072839467486486`*^9}, {
  3.807808144661108*^9, 3.8078081448240747`*^9}, {3.8092771719517174`*^9, 
  3.809277209158984*^9}, {3.809277674847349*^9, 3.8092776764674077`*^9}, {
  3.8092777567302284`*^9, 3.809277774518736*^9}, {3.809454895796033*^9, 
  3.8094548984680834`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8572dc14-f73e-41cd-a998-9e6af6a6cd40"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                  ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                  PlotRangePadding -> 0], 
                 StyleBox[
                 "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                  FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                  RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0],
                   FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                  RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
                Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.014925373134328358`], {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.6], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                    FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                  ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                  PlotRangePadding -> 0], 
                 StyleBox[
                 "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                  FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                  RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0],
                   FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                  RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
                Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 1, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 20, 
                    "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{50, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 20, "ChannelGroups" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 50, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{500, 800}, NeuralNetworks`RealT], 
                    "Biases" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 500}, NeuralNetworks`RealT], 
                    "Biases" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, "$Version" -> 
                    "12.1.4", "VarianceImage" -> None, "Interleaving" -> 
                    False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{0, 1, 
                    Skeleton[7], 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}], 
                    "Dimensions" -> 10, "$Version" -> "12.1.4", "InputDepth" -> 
                    1, "$Rank" -> 0]]], NeuralNetworks`Private`NetChain`opart,
                    NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {252., {114., 120.}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.807277041488987*^9, 3.8072788626633806`*^9, 3.80728183780692*^9, 
   3.807283948899724*^9, 3.8074063036401267`*^9, 3.807456210500862*^9, 
   3.8078081485860443`*^9, 3.8078869067726727`*^9, 3.808162187139101*^9, 
   3.8082336355597105`*^9, 3.809109365584017*^9, 3.809277230889991*^9, {
   3.809277776977169*^9, 3.8092777996916256`*^9}, 3.80937087494904*^9, 
   3.8093714001350183`*^9, 3.8093758899392653`*^9, 3.8094401870664425`*^9, 
   3.809454030792368*^9, 3.8094548911318674`*^9, 3.8094651930739403`*^9, 
   3.809471674956953*^9, 3.80961642051479*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"27291433-b71c-4973-8881-f94244b4ae03"]
}, Open  ]],

Cell[BoxData["11"], "Input",
 CellChangeTimes->{{3.809638357076145*^9, 
  3.809638357279067*^9}},ExpressionUUID->"36ab4d8c-8d82-4cef-a8e1-\
1a3a598dff15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"UninitLeNet", ",", "\"\<MXNetNodeGraphPlot\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8082336465856686`*^9, 3.808233687396676*^9}, {
   3.8082347039547553`*^9, 3.8082347304334583`*^9}, 3.8092777820673127`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"04e5991f-ba50-44d1-8f31-e1c43da96a95"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     StyleBox[{{{
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{0, 5}, {-12.999999999999996`, 3.4833366137853197`*^-7}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 5}, {-12.9999999732051, 1.000000348333661}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 5}, {-12.999999946410203`, 2.0000003483336606`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 6}, {-11.9999999732051, 1.000000321538764}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 6}, {-10.9999999732051, 1.000000294743867}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          Offset[{0, 6}, {-9.9999999732051, 1.00000026794897}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 5}, {-9.999999946410203, 2.0000002679489697`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          Offset[{0, 5}, {-9.999999919615306, 3.0000002679489692`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          Offset[{0, 6}, {-8.999999946410203, 2.0000002411540727`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          Offset[{0, 6}, {-7.999999946410203, 2.0000002143591757`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          Offset[{0, 6}, {-6.999999946410203, 2.0000001875642783`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          Offset[{0, 6}, {-5.999999946410204, 2.0000001607693814`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          Offset[{0, 5}, {-5.999999919615307, 3.0000001607693814`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          Offset[{0, 5}, {-5.99999989282041, 4.000000160769381}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          Offset[{0, 6}, {-4.999999919615307, 3.0000001339744844`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          Offset[{0, 6}, {-3.9999999196153078`, 3.0000001071795874`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          Offset[{0, 5}, {-3.9999998928204104`, 4.000000107179587}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["17", TraditionalForm], 
          Offset[{0, 5}, {-3.9999998660255134`, 5.000000107179586}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["18", TraditionalForm], 
          Offset[{0, 6}, {-2.999999892820411, 4.00000008038469}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["19", TraditionalForm], 
          Offset[{0, 6}, {-1.9999998928204112`, 4.000000053589793}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["20", TraditionalForm], 
          Offset[{0, 6}, {-0.9999998928204116, 4.000000026794896}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, 5}, {1.0717958811647137`*^-7, 3.9999999999999987`}], 
          ImageScaled[{0.5, 0.415}], Automatic, {1, 0}]}, {
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12.999999999999996`, 3.4833366137853197`*^-7}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12.9999999732051, 1.000000348333661}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12.999999946410203`, 2.0000003483336606`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"C\"", TraditionalForm], 
          Offset[{0, -6}, {-11.9999999732051, 1.000000321538764}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-10.9999999732051, 1.000000294743867}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"P\"", TraditionalForm], 
          Offset[{0, -6}, {-9.9999999732051, 1.00000026794897}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9.999999946410203, 2.0000002679489697`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9.999999919615306, 3.0000002679489692`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"C\"", TraditionalForm], 
          Offset[{0, -6}, {-8.999999946410203, 2.0000002411540727`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-7.999999946410203, 2.0000002143591757`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"P\"", TraditionalForm], 
          Offset[{0, -6}, {-6.999999946410203, 2.0000001875642783`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"F\"", TraditionalForm], 
          Offset[{0, -6}, {-5.999999946410204, 2.0000001607693814`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-5.999999919615307, 3.0000001607693814`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-5.99999989282041, 4.000000160769381}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"FC\"", TraditionalForm], 
          Offset[{0, -6}, {-4.999999919615307, 3.0000001339744844`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-3.9999999196153078`, 3.0000001071795874`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-3.9999998928204104`, 4.000000107179587}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-3.9999998660255134`, 5.000000107179586}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"FC\"", TraditionalForm], 
          Offset[{0, -6}, {-2.999999892820411, 4.00000008038469}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"s\"", TraditionalForm], 
          Offset[{0, -6}, {-1.9999998928204112`, 4.000000053589793}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"c\"", TraditionalForm], 
          Offset[{0, -6}, {-0.9999998928204116, 4.000000026794896}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {1.0717958811647137`*^-7, 3.9999999999999987`}], 
          ImageScaled[{
            Rational[1, 2], 1.}], Automatic, {1, 0}]}}}, {FontSize -> 7}, 
      StripOnInput -> False], {
      GrayLevel[0.8], {
       TagBox[
        TooltipBox[
         LineBox[{{-12.999999999999996`, 
          3.4833366137853197`*^-7}, {-11.9999999732051, 1.000000321538764}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1", "28", "28"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 1, 28, 28}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-12.9999999732051, 1.000000348333661}, {-11.9999999732051, 
          1.000000321538764}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "20", "1", "5", "5"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{20, 1, 5, 5}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-12.999999946410203`, 
          2.0000003483336606`}, {-11.9999999732051, 1.000000321538764}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "20"}, "RowWithSeparators"],
          TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{20}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-11.9999999732051, 1.000000321538764}, {-10.9999999732051, 
          1.000000294743867}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "20", "24", "24"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 20, 24, 24}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-10.9999999732051, 1.000000294743867}, {-9.9999999732051, 
          1.00000026794897}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "20", "24", "24"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 20, 24, 24}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-9.9999999732051, 1.00000026794897}, {-8.999999946410203, 
          2.0000002411540727`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "20", "12", "12"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 20, 12, 12}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-9.999999946410203, 
          2.0000002679489697`}, {-8.999999946410203, 2.0000002411540727`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "50", "20", "5", "5"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{50, 20, 5, 5}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-9.999999919615306, 
          3.0000002679489692`}, {-8.999999946410203, 2.0000002411540727`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "50"}, "RowWithSeparators"],
          TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{50}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-8.999999946410203, 
          2.0000002411540727`}, {-7.999999946410203, 2.0000002143591757`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "50", "8", "8"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 50, 8, 8}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-7.999999946410203, 
          2.0000002143591757`}, {-6.999999946410203, 2.0000001875642783`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "50", "8", "8"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 50, 8, 8}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-6.999999946410203, 
          2.0000001875642783`}, {-5.999999946410204, 2.0000001607693814`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "50", "4", "4"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 50, 4, 4}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-5.999999946410204, 
          2.0000001607693814`}, {-4.999999919615307, 3.0000001339744844`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "800"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 800}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-5.999999919615307, 
          3.0000001607693814`}, {-4.999999919615307, 3.0000001339744844`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "500", "800"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{500, 800}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-5.99999989282041, 4.000000160769381}, {-4.999999919615307,
           3.0000001339744844`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "500"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{500}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-4.999999919615307, 
          3.0000001339744844`}, {-3.9999999196153078`, 3.0000001071795874`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "500"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 500}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-3.9999999196153078`, 
          3.0000001071795874`}, {-2.999999892820411, 4.00000008038469}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "500"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 500}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-3.9999998928204104`, 
          4.000000107179587}, {-2.999999892820411, 4.00000008038469}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "10", "500"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{10, 500}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-3.9999998660255134`, 
          5.000000107179586}, {-2.999999892820411, 4.00000008038469}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "10"}, "RowWithSeparators"],
          TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{10}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-2.999999892820411, 
          4.00000008038469}, {-1.9999998928204112`, 4.000000053589793}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "10"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 10}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-1.9999998928204112`, 
          4.000000053589793}, {-0.9999998928204116, 4.000000026794896}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "10"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 10}, "\[Times]"], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         LineBox[{{-0.9999998928204116, 4.000000026794896}, {
          1.0717958811647137`*^-7, 3.9999999999999987`}}], 
         TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "10"}, 
          "RowWithSeparators"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Row[{"b", 10}, "\[Times]"], "Tooltip"]& ]}}, {
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-12.449999985262803`, 
         0.5500003335964679}, {-0.25, 0}, 
         Offset[8], {1.000000026794897, 0.9999999732051027}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1", "28", "28"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 1, 28, 28}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-12.449999973205099`, 
         1.0000003335964678`}, {-0.25, 0}, 
         Offset[8], {1., -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "20", "1", "5", "5"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{20, 1, 5, 5}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-12.449999961147395`, 
         1.4500003335964675`}, {-0.25, 0}, 
         Offset[8], {0.999999973205103, -1.0000000267948965`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "20"}, "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{20}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-11.449999973205099`, 
         1.0000003068015708`}, {-0.25, 0}, 
         Offset[8], {1., -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "20", "24", "24"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 20, 24, 24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-10.449999973205099`, 
         1.0000002800066736`}, {-0.25, 0}, 
         Offset[8], {1., -2.679489718993011*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "20", "24", "24"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 20, 24, 24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-9.449999958467906, 
         1.5500002532117767`}, {-0.25, 0}, 
         Offset[8], {1.000000026794897, 0.9999999732051028}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "20", "12", "12"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 20, 12, 12}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-9.449999946410202, 
         2.0000002532117764`}, {-0.25, 0}, 
         Offset[8], {1., -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "50", "20", "5", "5"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{50, 20, 5, 5}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-9.4499999343525, 
         2.450000253211776}, {-0.25, 0}, 
         Offset[8], {0.999999973205103, -1.0000000267948965`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "50"}, "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{50}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-8.449999946410202, 
         2.0000002264168795`}, {-0.25, 0}, 
         Offset[8], {0.9999999999999991, -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "50", "8", "8"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 50, 8, 8}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-7.449999946410204, 
         2.000000199621982}, {-0.25, 0}, 
         Offset[8], {1., -2.6794897411974716`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "50", "8", "8"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 50, 8, 8}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-6.449999946410204, 
         2.000000172827085}, {-0.25, 0}, 
         Offset[8], {0.9999999999999991, -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "50", "4", "4"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 50, 4, 4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-5.449999931673011, 
         2.550000146032188}, {-0.25, 0}, 
         Offset[8], {1.000000026794897, 0.999999973205103}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "800"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 800}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-5.4499999196153075`, 
         3.000000146032188}, {-0.25, 0}, 
         Offset[8], {1., -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "500", "800"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{500, 800}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-5.449999907557604, 
         3.450000146032188}, {-0.25, 0}, 
         Offset[8], {0.999999973205103, -1.0000000267948965`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "500"}, "RowWithSeparators"],
         TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{500}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-4.4499999196153075`, 
         3.000000119237291}, {-0.25, 0}, 
         Offset[8], {0.9999999999999996, -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "500"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 500}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-3.4499999048781147`, 
         3.550000092442394}, {-0.25, 0}, 
         Offset[8], {1.000000026794897, 0.9999999732051026}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "500"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 500}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-3.4499998928204105`, 
         4.000000092442394}, {-0.25, 0}, 
         Offset[8], {0.9999999999999996, -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "10", "500"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{10, 500}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-3.449999880762707, 
         4.4500000924423935`}, {-0.25, 0}, 
         Offset[8], {0.9999999732051026, -1.000000026794896}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "10"}, "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{10}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-2.449999892820411, 
         4.000000065647496}, {-0.25, 0}, 
         Offset[8], {0.9999999999999996, -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "10"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 10}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-1.4499998928204114`, 
         4.000000038852599}, {-0.25, 0}, 
         Offset[8], {0.9999999999999997, -2.6794896967885506`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "10"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 10}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], {
            GrayLevel[0.7]}, StripOnInput -> False]], {-0.4499998928204117, 
         4.000000012057702}, {-0.25, 0}, 
         Offset[8], {0.9999999999999997, -2.6794897411974716`*^-8}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "10"}, 
         "RowWithSeparators"], 
        TooltipStyle -> {
         Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
          GrayLevel[0.85]}], Annotation[#, 
        Row[{"b", 10}, "\[Times]"], "Tooltip"]& ]}, {
      GrayLevel[0], {
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12.999999999999996`, 3.4833366137853197`*^-7}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "0"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Inputs.Input\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 0}, {
            Style["name", Bold], ".Inputs.Input"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12.9999999732051, 1.000000348333661}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "1"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.1.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 1}, {
            Style["name", Bold], ".Nodes.1.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12.999999946410203`, 2.0000003483336606`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "2"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.1.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 2}, {
            Style["name", Bold], ".Nodes.1.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.5, 0.5], 
          PointBox[{-11.9999999732051, 1.000000321538764}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "3"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.1\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"Convolution\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"dilate\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(5, 5)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"layout\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"None\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_filter\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"20\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_group\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 3}, {
            Style["name", Bold], ".Nodes.1"}, {
            Style["op", Bold], "Convolution"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["dilate", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(5, 5)", ShowStringCharacters -> True]}, {
               Style["layout", Bold], 
               Style["None", ShowStringCharacters -> True]}, {
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_filter", Bold], 
               Style["20", ShowStringCharacters -> True]}, {
               Style["num_group", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{0, 0, 0}, {1, 0, 0}, {2, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-10.9999999732051, 1.000000294743867}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "4"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.2$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"3", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 4}, {
            Style["name", Bold], ".Nodes.2$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{3, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.67, 0.6], 
          PointBox[{-9.9999999732051, 1.00000026794897}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.3\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"Pooling\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"count_include_pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"True\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"global_pool\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(2, 2)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pool_type\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"max\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"pooling_convention\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"valid\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(2, 2)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"4", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 5}, {
            Style["name", Bold], ".Nodes.3"}, {
            Style["op", Bold], "Pooling"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["count_include_pad", Bold], 
               Style["True", ShowStringCharacters -> True]}, {
               Style["global_pool", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(2, 2)", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["pool_type", Bold], 
               Style["max", ShowStringCharacters -> True]}, {
               Style["pooling_convention", Bold], 
               Style["valid", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(2, 2)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{4, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9.999999946410203, 2.0000002679489697`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "6"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.4.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 6}, {
            Style["name", Bold], ".Nodes.4.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9.999999919615306, 3.0000002679489692`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "7"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.4.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 7}, {
            Style["name", Bold], ".Nodes.4.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.5, 0.5], 
          PointBox[{-8.999999946410203, 2.0000002411540727`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "8"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.4\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"Convolution\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"dilate\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(5, 5)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"layout\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"None\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_filter\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"50\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_group\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"5", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"6", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"7", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 8}, {
            Style["name", Bold], ".Nodes.4"}, {
            Style["op", Bold], "Convolution"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["dilate", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(5, 5)", ShowStringCharacters -> True]}, {
               Style["layout", Bold], 
               Style["None", ShowStringCharacters -> True]}, {
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_filter", Bold], 
               Style["50", ShowStringCharacters -> True]}, {
               Style["num_group", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{5, 0, 0}, {6, 0, 0}, {7, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-7.999999946410203, 2.0000002143591757`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "9"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.5$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"8", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 9}, {
            Style["name", Bold], ".Nodes.5$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{8, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.67, 0.6], 
          PointBox[{-6.999999946410203, 2.0000001875642783`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "10"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.6\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"Pooling\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"count_include_pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"True\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"global_pool\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(2, 2)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pool_type\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"max\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"pooling_convention\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"valid\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(2, 2)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"9", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 10}, {
            Style["name", Bold], ".Nodes.6"}, {
            Style["op", Bold], "Pooling"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["count_include_pad", Bold], 
               Style["True", ShowStringCharacters -> True]}, {
               Style["global_pool", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(2, 2)", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["pool_type", Bold], 
               Style["max", ShowStringCharacters -> True]}, {
               Style["pooling_convention", Bold], 
               Style["valid", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(2, 2)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{9, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.7], 
          PointBox[{-5.999999946410204, 2.0000001607693814`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "11"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.7\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"Flatten\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"10", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 11}, {
            Style["name", Bold], ".Nodes.7"}, {
            Style["op", Bold], "Flatten"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{10, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-5.999999919615307, 3.0000001607693814`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "12"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.8.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 12}, {
            Style["name", Bold], ".Nodes.8.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-5.99999989282041, 4.000000160769381}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "13"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.8.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 13}, {
            Style["name", Bold], ".Nodes.8.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          GrayLevel[0], 
          PointBox[{-4.999999919615307, 3.0000001339744844`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "14"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.8\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"FullyConnected\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"500\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"11", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"12", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"13", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 14}, {
            Style["name", Bold], ".Nodes.8"}, {
            Style["op", Bold], "FullyConnected"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_hidden", Bold], 
               Style["500", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{11, 0, 0}, {12, 0, 0}, {13, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-3.9999999196153078`, 3.0000001071795874`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "15"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.9$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"14", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 15}, {
            Style["name", Bold], ".Nodes.9$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{14, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-3.9999998928204104`, 4.000000107179587}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "16"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.10.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 16}, {
            Style["name", Bold], ".Nodes.10.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-3.9999998660255134`, 5.000000107179586}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "17"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.10.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 17}, {
            Style["name", Bold], ".Nodes.10.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          GrayLevel[0], 
          PointBox[{-2.999999892820411, 4.00000008038469}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "18"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.10\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"FullyConnected\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"10\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"15", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"16", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"17", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 18}, {
            Style["name", Bold], ".Nodes.10"}, {
            Style["op", Bold], "FullyConnected"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_hidden", Bold], 
               Style["10", ShowStringCharacters -> True]}}, Alignment -> Left,
              Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{15, 0, 0}, {16, 0, 0}, {17, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.06, 1, 0.69], 
          PointBox[{-1.9999998928204112`, 4.000000053589793}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "19"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.11$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"softmax\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"18", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 19}, {
            Style["name", Bold], ".Nodes.11$0"}, {
            Style["op", Bold], "softmax"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}}, Alignment -> Left, 
             Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{18, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-0.9999998928204116, 4.000000026794896}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Outputs.Output\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"_copy\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"19", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"], 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, 
         Grid[{{
            Style["id", Bold], 20}, {
            Style["name", Bold], ".Outputs.Output"}, {
            Style["op", Bold], "_copy"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{19, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{1.0717958811647137`*^-7, 3.9999999999999987`}]}, "Null", 
         TooltipStyle -> {
          Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
           GrayLevel[0.85]}], Annotation[#, Null, "Tooltip"]& ]}}}, 
    ImageSize -> {485.0000037512855, 200.8499915596074}, AspectRatio -> Full, 
    PlotRangePadding -> 0, 
    ImagePadding -> {{23.99999999999998, 6}, {14.999999999999996`, 
      10.850000000000017`}}, ImageMargins -> 0, 
    BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Tensor\"", "\"Convolution\"", "\"relu\"", "\"Pooling\"", 
       "\"Flatten\"", "\"FullyConnected\"", "\"softmax\"", "\"_copy\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.92], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.92], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #3}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.7], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.7], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #5}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.06, 1, 0.69], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.06, 1, 0.69], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #7}, "RowDefault"], ""}, {
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.5, 0.5], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.5, 0.5], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #2}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.67, 0.6], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.67, 0.6], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #4}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #6}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #8}, "RowDefault"], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 8, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"AbsolutePointSize", "[", "4", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.5, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.5, 0.5, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.5`", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.5, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.5, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 1, 0.92], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.07999999999999999, 1., 0.6133333333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "1", ",", "0.92`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 1, 0.92]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 1, 0.92], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.5, 0.67, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.5, 0.67, 0.4], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.5`", ",", "0.67`", ",", "0.6`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.5, 0.67, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.5, 0.67, 0.6], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 1, 0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.07999999999999999, 1., 0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "1", ",", "0.7`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 1, 0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 1, 0.7], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.06, 1, 0.69], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.060000000000000005`, 1., 0.45999999999999996`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.06`", ",", "1", ",", "0.69`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.06, 1, 0.69]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.06, 1, 0.69], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "8"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
           
           RowBox[{"LegendLayout", "\[Rule]", 
             "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8082336808793244`*^9, 3.808233692130282*^9}, {
   3.808234713932282*^9, 3.8082347313773685`*^9}, 3.809616688205562*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"6b181eab-1b84-4a44-90d7-97a1f7f40120"]
}, Open  ]],

Cell[BoxData["12"], "Input",
 CellChangeTimes->{{3.8096384138438516`*^9, 
  3.809638413937722*^9}},ExpressionUUID->"14ce6ee8-1203-4365-bc98-\
c80e69e4767b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetGraph", "[", "UninitLeNet", "]"}]], "Input",
 CellChangeTimes->{{3.808237486942359*^9, 3.8082375028230095`*^9}, {
   3.8091094488720417`*^9, 3.809109457296796*^9}, {3.809277294130378*^9, 
   3.809277325639366*^9}, 3.8092777188384905`*^9, {3.8092778080674644`*^9, 
   3.8092778099678817`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b9f42791-a60c-480e-a53b-b96b2229e6b1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    GrayLevel[0.9]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    GrayLevel[0.9]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    GrayLevel[0.9]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    GrayLevel[0.9]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                  ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                  PlotRangePadding -> 0], 
                 StyleBox[
                 "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                  FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                  RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0],
                   FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                  RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
                Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    GrayLevel[0.9]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    GrayLevel[0.9]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    GrayLevel[0.9]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    GrayLevel[0.9]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                  ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                  PlotRangePadding -> 0], 
                 StyleBox[
                 "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                  FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                  RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0],
                   FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                  RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
                Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"1\"", 
                    
                    Offset[{0, -13}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"2\"", 
                    
                    Offset[{0, -13}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"10\"", 
                    
                    Offset[{0, -13}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"11\"", 
                    
                    Offset[{0, -13}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {0., 0.}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"3\"", 
                    
                    Offset[{0, -13}, {-8.999999999999996, 
                    2.411540732620606*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{0, -13}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"5\"", 
                    
                    Offset[{0, -13}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"6\"", 
                    
                    Offset[{0, -13}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"7\"", 
                    
                    Offset[{0, -13}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"8\"", 
                    
                    Offset[{0, -13}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"9\"", 
                    
                    Offset[{0, -13}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, StripOnInput -> 
                    False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.473719336601483*^-7, 
                    5.499999999999997}, {-11.449999999999996`, 
                    3.0680157098339927`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117876`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-10.449999999999996`, 
                    2.8000667395428143`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-9.449999999999996, 
                    2.532117769251636*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"12\"", "\"12\""},
                     "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-8.449999999999996, 
                    2.2641687989604576`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117852`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-7.4499999999999975`, 
                    1.9962198286692792`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-6.4499999999999975`, 
                    1.728270858378101*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117852`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"4\"", "\"4\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999997}, {-5.4499999999999975`, 
                    1.4603218880869225`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.679489702911785*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-4.449999999999998, 
                    1.192372917795744*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999999}, {-3.449999999999999, 
                    9.244239475045655*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"1", "28", "28"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-9.999999999999996, 
                    2.679489702911784*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"20", "24", "24"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"10"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"10"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.999999999999996, 
                    2.679489702911784*^-7}, {-8.999999999999996, 
                    2.411540732620606*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"20", "24", "24"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999999999996, 
                    2.411540732620606*^-7}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"20", "12", "12"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.999999999999997, 
                    2.1435917623294274`*^-7}, {-6.999999999999997, 
                    1.875642792038249*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"50", "8", "8"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"50", "8", "8"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"50", "4", "4"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"800"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-11.449999999999996`,
                     3.0680157098339927`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489702911789*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"1", "28", "28"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-10.449999999999996`,
                     2.8000667395428143`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"20", "24", "24"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999999999993`,
                     3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"10"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"10"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-9.449999999999996, 
                    2.532117769251636*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"20", "24", "24"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-8.449999999999996, 
                    2.2641687989604576`*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"20", "12", "12"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4499999999999975`,
                     1.9962198286692792`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"50", "8", "8"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4499999999999975`,
                     1.728270858378101*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"50", "8", "8"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-5.4499999999999975`,
                     1.4603218880869225`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117862`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"50", "4", "4"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.449999999999998, 
                    1.192372917795744*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"800"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.449999999999999, 
                    9.244239475045655*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999999999993`,
                     6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"500"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.999999999999996`, 3.2153876434941414`*^-7}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}], 
                    
                    Offset[{10, 10}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"*\"", StripOnInput -> False, FontSize -> 
                    20], {-10.999999999999996`, 2.9474386732029625`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ConvolutionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    ConvolutionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{10, 10}, {-9.999999999999996, 
                    2.679489702911784*^-7}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztljFPwkAUgBt1cOQn6MpkYHF1gZgwEIiuCLm2cUEDROPu7u7iSJn4Kf4E
fwKLu96rQrCWvrvS3l3v3pc8GphevvS473R01wsOPM+bHvOP3vDxYjIZPvVr
/MvVeHobjn12OZ75oT85Hx3yHxt8unyOPKPp6F4gDcYWZ4EfrXTvIYBx/sJw
fuKz6IP7+9K9iwBG+RsMljXu7R3ckT85YndssVy7I39yJN2RP3F8f/GSdAfn
WPdeAmj3F7DoPs0dnGfduwmg1V+aO7h74Q7WuZcE2vwFQdSFxkv4W0H76dop
B1r8rfs46Q6c6thnD5T72+7j7WFsfqN6lwJQ6i/Zx5vh/4Mq9ygQZf7S+ji+
L3i7qNqhBJT4s9QdoMTfrj6uSONlUbq/ivcxRqn+LOhjjNL8WdLHGKX4s6iP
MQr3Z1kfYxTqz8I+xijMn8WNl0Uh/hx1BxTiz+I+xtjbn+V9jLGXPwf6GCO3
P+gRB/oYI5c/h/oYQ9ofnE1yt0HKn4N9jCHsz+HGy0LIH7nbiZC/1D7mPh1p
vCxQf473MUamP+pjlJ3+qI+FSPVHfSzMP3/kToo//qiPpdn4o8bLReyP3OUm
9sddvVEf56JDfZyfZvP6tQp9/NsDxk2rNfusQh+nnA8jpt1+qETjwZ4mTqPR
j5/wHtbr7Wfv5z4xaWJ0v2fo+2d4H8NdZvLo9kOUyzd03Gl5
                    "], {{0, 25.}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", ImageSize -> 20, 
                    ImageSizeRaw -> {40., 25.}, 
                    PlotRange -> {{0, 40.}, {0, 25.}}], 
                    TraditionalForm], {-9.999999999999996, 
                    2.679489702911784*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10, 10}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    RGBColor[0.33, 0.33, 0.33], 
                    AbsolutePointSize[3.5], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-1.9999999999999993`, 5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"10\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["10", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{10, 10}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}, 
                    InsetBox["\"S\"", 
                    
                    Offset[{0, -1}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"11\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "SoftmaxLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["11", Bold], 
                    Style[
                    SoftmaxLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-8.999999999999996, 
                    2.411540732620606*^-7}], 
                    
                    Offset[{10, 10}, {-8.999999999999996, 
                    2.411540732620606*^-7}]]}, 
                    InsetBox["\"P\"", 
                    
                    Offset[{0, -1}, {-8.999999999999996, 
                    2.411540732620606*^-7}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "PoolingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    PoolingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{10, 10}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"*\"", StripOnInput -> False, FontSize -> 
                    20], {-7.999999999999997, 2.1435917623294274`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ConvolutionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    ConvolutionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    Offset[{10, 10}, {-6.999999999999997, 
                    1.875642792038249*^-7}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztljFPwkAUgBt1cOQn6MpkYHF1gZgwEIiuCLm2cUEDROPu7u7iSJn4Kf4E
fwKLu96rQrCWvrvS3l3v3pc8GphevvS473R01wsOPM+bHvOP3vDxYjIZPvVr
/MvVeHobjn12OZ75oT85Hx3yHxt8unyOPKPp6F4gDcYWZ4EfrXTvIYBx/sJw
fuKz6IP7+9K9iwBG+RsMljXu7R3ckT85YndssVy7I39yJN2RP3F8f/GSdAfn
WPdeAmj3F7DoPs0dnGfduwmg1V+aO7h74Q7WuZcE2vwFQdSFxkv4W0H76dop
B1r8rfs46Q6c6thnD5T72+7j7WFsfqN6lwJQ6i/Zx5vh/4Mq9ygQZf7S+ji+
L3i7qNqhBJT4s9QdoMTfrj6uSONlUbq/ivcxRqn+LOhjjNL8WdLHGKX4s6iP
MQr3Z1kfYxTqz8I+xijMn8WNl0Uh/hx1BxTiz+I+xtjbn+V9jLGXPwf6GCO3
P+gRB/oYI5c/h/oYQ9ofnE1yt0HKn4N9jCHsz+HGy0LIH7nbiZC/1D7mPh1p
vCxQf473MUamP+pjlJ3+qI+FSPVHfSzMP3/kToo//qiPpdn4o8bLReyP3OUm
9sddvVEf56JDfZyfZvP6tQp9/NsDxk2rNfusQh+nnA8jpt1+qETjwZ4mTqPR
j5/wHtbr7Wfv5z4xaWJ0v2fo+2d4H8NdZvLo9kOUyzd03Gl5
                    "], {{0, 25.}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", ImageSize -> 20, 
                    ImageSizeRaw -> {40., 25.}, 
                    PlotRange -> {{0, 40.}, {0, 25.}}], 
                    TraditionalForm], {-6.999999999999997, 
                    1.875642792038249*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{10, 10}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]}, 
                    InsetBox["\"P\"", 
                    
                    Offset[{0, -1}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "PoolingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["6", Bold], 
                    Style[
                    PoolingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-4.999999999999998, 
                    1.339744851455892*^-7}], 
                    
                    Offset[{10, 10}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]}, 
                    InsetBox["\"F\"", 
                    
                    Offset[{0, -1}, {-4.999999999999998, 
                    1.339744851455892*^-7}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"7\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FlattenLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["7", Bold], 
                    Style[
                    FlattenLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    
                    Offset[{10, 10}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    RGBColor[0.33, 0.33, 0.33], 
                    AbsolutePointSize[3.5], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-3.9999999999999987`, 1.0717958811647137`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"8\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["8", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{10, 10}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]}, 
                    InsetBox[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztljFPwkAUgBt1cOQn6MpkYHF1gZgwEIiuCLm2cUEDROPu7u7iSJn4Kf4E
fwKLu96rQrCWvrvS3l3v3pc8GphevvS473R01wsOPM+bHvOP3vDxYjIZPvVr
/MvVeHobjn12OZ75oT85Hx3yHxt8unyOPKPp6F4gDcYWZ4EfrXTvIYBx/sJw
fuKz6IP7+9K9iwBG+RsMljXu7R3ckT85YndssVy7I39yJN2RP3F8f/GSdAfn
WPdeAmj3F7DoPs0dnGfduwmg1V+aO7h74Q7WuZcE2vwFQdSFxkv4W0H76dop
B1r8rfs46Q6c6thnD5T72+7j7WFsfqN6lwJQ6i/Zx5vh/4Mq9ygQZf7S+ji+
L3i7qNqhBJT4s9QdoMTfrj6uSONlUbq/ivcxRqn+LOhjjNL8WdLHGKX4s6iP
MQr3Z1kfYxTqz8I+xijMn8WNl0Uh/hx1BxTiz+I+xtjbn+V9jLGXPwf6GCO3
P+gRB/oYI5c/h/oYQ9ofnE1yt0HKn4N9jCHsz+HGy0LIH7nbiZC/1D7mPh1p
vCxQf473MUamP+pjlJ3+qI+FSPVHfSzMP3/kToo//qiPpdn4o8bLReyP3OUm
9sddvVEf56JDfZyfZvP6tQp9/NsDxk2rNfusQh+nnA8jpt1+qETjwZ4mTqPR
j5/wHtbr7Wfv5z4xaWJ0v2fo+2d4H8NdZvLo9kOUyzd03Gl5
                    "], {{0, 25.}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", ImageSize -> 20, 
                    ImageSizeRaw -> {40., 25.}, 
                    PlotRange -> {{0, 40.}, {0, 25.}}], 
                    TraditionalForm], {-2.999999999999999, 
                    8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"9\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["9", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-9.999999999999996, 
                    2.679489702911784*^-7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}, {-8.999999999999996, 
                    2.411540732620606*^-7}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}, {-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999999999998, 
                    1.339744851455892*^-7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999999999999, 
                    8.038469108735353*^-8}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 20, 20, 8, 20, 20, 20, 20, 20, 20, 20}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{24., 26.5}, {26.999998526280663`, 14.}},
                     ImageSize -> {710.4999999999998, 41.000016210912705`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    Part[
                    Association[
                    "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`TensorT[{20, 1, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 20, 
                    "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`TensorT[{50, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 20, "ChannelGroups" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 50, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`TensorT[{500, 800}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`TensorT[{10, 500}, 
                    NeuralNetworks`RealT], "Biases" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, "$Version" -> 
                    "12.1.4", "VarianceImage" -> None, "Interleaving" -> 
                    False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{0, 1, 
                    Skeleton[7], 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}], 
                    "Dimensions" -> 10, "$Version" -> "12.1.4", "InputDepth" -> 
                    1, "$Rank" -> 0]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}], 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "10"], 
                    NeuralNetworks`NetPath["Nodes", "11"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Nodes", "6"], 
                    NeuralNetworks`NetPath["Nodes", "7"], 
                    NeuralNetworks`NetPath["Nodes", "8"], 
                    NeuralNetworks`NetPath["Nodes", "9"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "10"], 
                    NeuralNetworks`NetPath["Nodes", "11"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Nodes", "6"], 
                    NeuralNetworks`NetPath["Nodes", "7"], 
                    NeuralNetworks`NetPath["Nodes", "8"], 
                    NeuralNetworks`NetPath["Nodes", "9"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[], {}], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {186., {14.25, 20.25}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8082372828644147`*^9, {3.8082374932693844`*^9, 3.808237505007864*^9}, {
   3.809109450406066*^9, 3.809109460692417*^9}, {3.8092772955687275`*^9, 
   3.809277326627584*^9}, 3.809277812476859*^9, 3.809616756199418*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"c95ecf5c-7ddb-4756-9a7e-40becaba5e7e"]
}, Open  ]],

Cell[BoxData["13"], "Input",
 CellChangeTimes->{{3.809638418827195*^9, 
  3.809638418889515*^9}},ExpressionUUID->"2e5c26ac-52b8-4ab4-93f2-\
66892a4bda46"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Enc", "=", 
      RowBox[{"NetExtract", "[", 
       RowBox[{"UninitLeNet", ",", "\"\<Input\>\""}], "]"}]}], ",", 
     RowBox[{"Dec", "=", 
      RowBox[{"NetExtract", "[", 
       RowBox[{"UninitLeNet", ",", "\"\<Output\>\""}], "]"}]}]}], "}"}], "//",
    "Row"}], ";"}]], "Input",
 CellChangeTimes->{{3.807887254297847*^9, 3.807887271402466*^9}, {
  3.8078874495962296`*^9, 3.807887452487158*^9}, {3.8082377620027895`*^9, 
  3.808237763703493*^9}, {3.8092772601299963`*^9, 3.809277261508749*^9}, {
  3.8092777290799727`*^9, 3.809277731226039*^9}, {3.8092778372270274`*^9, 
  3.8092778481577387`*^9}, {3.8094581862649975`*^9, 3.809458193018396*^9}, {
  3.80961679018026*^9, 3.8096167917755775`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"09ba5934-7124-408e-997d-9e0b958fee2e"],

Cell["14", "Text",
 CellChangeTimes->{{3.808239131986015*^9, 3.8082391403175583`*^9}, {
  3.8082392480594454`*^9, 3.808239256562952*^9}, {3.8082393129366236`*^9, 
  3.808239337692445*^9}, {3.808239532672268*^9, 3.808239579955064*^9}, {
  3.808745311926323*^9, 3.8087453125668755`*^9}, {3.8091096272430544`*^9, 
  3.809109629512642*^9}, {3.809392553417017*^9, 3.809392577563143*^9}, {
  3.8096384495854216`*^9, 
  3.8096384496636586`*^9}},ExpressionUUID->"23bed33e-ce0f-439a-98fa-\
875083a2355e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TestNet", "=", 
   RowBox[{"NetInitialize", "[", 
    RowBox[{"UninitLeNet", ",", 
     RowBox[{"RandomSeeding", "\[Rule]", "8888"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TestNet", "@", 
  RowBox[{"TrainData", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"TrainData", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "belongs", " ", "to", " ", 
    "a", " ", "zero"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.80823955570385*^9, 3.808239557376911*^9}, {
  3.8082395897408133`*^9, 3.8082396312113504`*^9}, {3.809109639166377*^9, 
  3.809109660471061*^9}, {3.8091097017147512`*^9, 3.8091097342149897`*^9}, {
  3.8091098353318553`*^9, 3.809109836031646*^9}, {3.80927785311154*^9, 
  3.8092778543345375`*^9}, {3.8096169341230764`*^9, 3.809616975655483*^9}, {
  3.809617077298643*^9, 
  3.8096171018982773`*^9}},ExpressionUUID->"49aa06a8-2596-47a8-a436-\
24e08b2a8746"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{{3.8096169760882325`*^9, 3.809616981486375*^9}, 
   3.809617078890446*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"84f026a6-f51b-4902-a99f-46ffbf4477d9"]
}, Open  ]],

Cell["15", "Text",
 CellChangeTimes->{{3.8082400345131826`*^9, 3.8082401913217773`*^9}, {
   3.8087452775589204`*^9, 3.8087452784020166`*^9}, {3.808745319057647*^9, 
   3.8087453192924137`*^9}, {3.809109844744179*^9, 3.8091098753326707`*^9}, 
   3.8093926168816676`*^9, {3.8096384741889863`*^9, 
   3.809638474345157*^9}},ExpressionUUID->"e413d930-d426-47f2-a50f-\
49663ccdcfcc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net1", ",", "net2", ",", "net3", ",", "net4"}], "}"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NetInitialize", "[", 
      RowBox[{"UninitLeNet", ",", "All", ",", 
       RowBox[{"Method", "\[Rule]", "i"}], ",", 
       RowBox[{"RandomSeeding", "\[Rule]", "8888"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Kaiming\>\"", ",", "\"\<Xavier\>\"", ",", "\"\<Orthogonal\>\"", 
         ",", "\"\<Identity\>\""}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"net1", "[", 
    RowBox[{"TrainData", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"net2", "[", 
    RowBox[{"TrainData", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"net3", "[", 
    RowBox[{"TrainData", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"net4", "[", 
    RowBox[{"TrainData", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.808239680190895*^9, 3.80823968389522*^9}, {
   3.8082397167464547`*^9, 3.808239822010206*^9}, {3.8082398689232197`*^9, 
   3.808239898057911*^9}, 3.808240120088182*^9, {3.8082402051734514`*^9, 
   3.808240244709309*^9}, {3.809109889143494*^9, 3.8091098901223674`*^9}, {
   3.8092778590768166`*^9, 3.809277860470702*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ecc25564-566d-43b4-ade1-a5af44a5e6df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "9", ",", "5", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.80824024643954*^9, 3.809109893962325*^9, 
  3.8092773927455053`*^9, 3.8092778616651897`*^9, 3.8093708934845467`*^9, 
  3.809617000531331*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"53ede326-9fc1-4fab-8657-63e33006ff85"]
}, Open  ]],

Cell["16", "Text",
 CellChangeTimes->{{3.8082402490395355`*^9, 3.8082403334390507`*^9}, {
   3.808240433567233*^9, 3.8082406335060396`*^9}, {3.808240747111763*^9, 
   3.8082407726992044`*^9}, {3.8082408755747323`*^9, 3.8082408870448694`*^9}, 
   3.808334381112271*^9, {3.8086705365708065`*^9, 3.8086705458949904`*^9}, 
   3.8092780715994015`*^9, {3.8093926668269815`*^9, 3.809392672137476*^9}, {
   3.8096384775162725`*^9, 
   3.809638477610019*^9}},ExpressionUUID->"5300aacc-b431-41f7-a4b3-\
16a038579811"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LeNet", "=", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{
    RowBox[{"NetGraph", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<LeNet NN\>\"", "\[Rule]", "UninitLeNet"}], ",", 
        RowBox[{"\"\<LeNet Loss\>\"", "\[Rule]", 
         RowBox[{"CrossEntropyLossLayer", "@", "\"\<Index\>\""}]}]}], "|>"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "@", "\"\<Input\>\""}], "\[Rule]", 
         "\"\<LeNet NN\>\""}], ",", 
        RowBox[{"\"\<LeNet NN\>\"", "\[Rule]", 
         RowBox[{"NetPort", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<LeNet Loss\>\"", ",", "\"\<Input\>\""}], "}"}]}]}], 
        ",", 
        RowBox[{
         RowBox[{"NetPort", "@", "\"\<Target\>\""}], "\[Rule]", 
         RowBox[{"NetPort", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<LeNet Loss\>\"", ",", "\"\<Target\>\""}], "}"}]}]}]}],
        "}"}]}], "]"}], ",", 
    RowBox[{"RandomSeeding", "\[Rule]", "8888"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8091099215843067`*^9, 3.809109923389447*^9}, 
   3.80910999631995*^9, {3.809277562458372*^9, 3.809277570704072*^9}, {
   3.8092776047189226`*^9, 3.8092776552124*^9}, {3.809277865298528*^9, 
   3.809277871350297*^9}, {3.809277992714961*^9, 3.809278017770441*^9}, {
   3.809375922041087*^9, 3.8093759357096963`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"c56a1aa2-e9a8-405f-aa0f-4445db022d6d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"LeNet NN\"", 
                    
                    Offset[{0, -15}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Target\"", 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"LeNet Loss\"", 
                    
                    Offset[{0, -13}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}], 
                    InsetBox["\"Loss\"", 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    ImageScaled[{
                    Rational[1, 2], 1.}], Automatic, {1, 0}]}, StripOnInput -> 
                    False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    SubscriptBox["\"\[DoubleStruckCapitalN]\"", "10"], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}]}, StripOnInput -> False, FontSize -> 
                    8, FontWeight -> "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"1", "28", "28"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"index\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "10"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"index", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "range", ":", " ", 
                    Row[{1, "..", 10}], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"10"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999999999993`,
                     6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"array", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"1", "28", "28"}, "\[Times]"], "\[VeryThinSpace]", 
                    ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999732051023`,
                     1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"index\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "10"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"index", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "range", ":", " ", 
                    Row[{1, "..", 10}], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", " ", 
                    Style[
                    Row[{"(", "\[VeryThinSpace]", "size", ":", " ", 
                    Row[{"10"}, "\[Times]"], "\[VeryThinSpace]", ")"}], 
                    GrayLevel[0.5]]}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    
                    Offset[{-12, -12}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12, 12}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"LeNet NN\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["LeNet NN", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    Hue[0, 0.7, 0.9]], 
                    FaceForm[
                    RGBColor[
                    0.9333333333333333, 0.5133333333333334, 
                    0.5133333333333334]], 
                    RectangleBox[
                    
                    Offset[{-10, -10}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{10, 10}, {-0.9999999732051026, 
                    1.0000000267948967`}]]}, 
                    InsetBox["\"CE\"", 
                    
                    Offset[{0, -1}, {-0.9999999732051026, 
                    1.0000000267948967`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"LeNet Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CrossEntropyLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["LeNet Loss", Bold], 
                    Style[
                    CrossEntropyLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 8, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageSize -> {221.0000014737193, 101.99999999999997`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    Part[
                    Association[
                    "Nodes" -> 
                    Association[
                    "LeNet NN" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 20, 
                    "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{50}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 20, "ChannelGroups" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 50, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{500, 800}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{500}]], "Parameters" -> 
                    Association["OutputDimensions" -> {500}, "$OutputSize" -> 
                    500, "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "LeNet Loss" -> 
                    Association[
                    "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "TargetForm" -> "Index", "$InputDimensions" -> {}, 
                    "$Classes" -> 10, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[10]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[10]]], "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, "$Version" -> 
                    "12.1.4", "VarianceImage" -> None, "Interleaving" -> 
                    False], "Target" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[10]]], "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "LeNet NN", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "LeNet Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "LeNet NN", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "LeNet Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "LeNet Loss", "Outputs", "Loss"]}], 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "LeNet NN"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "LeNet Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "LeNet NN"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "LeNet Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[], {}], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"index\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"range\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"1", "\"..\"", "10"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {250., {22.75, 28.75}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.80927792998971*^9, {3.809278005219515*^9, 3.8092780189494133`*^9}, 
   3.8093709038488483`*^9, 3.809371405772992*^9, {3.809375916745412*^9, 
   3.809375936662608*^9}, 3.809440198138687*^9, 3.809454037331302*^9, 
   3.8094549044560976`*^9, 3.809465203986987*^9, 3.8094716833924575`*^9, 
   3.8096171479765015`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"b6297fa5-d9f6-4b07-b745-c0ab6043e814"]
}, Open  ]],

Cell[BoxData["17"], "Input",
 CellChangeTimes->{{3.8096384976053085`*^9, 
  3.809638498027067*^9}},ExpressionUUID->"5f70ded5-86d2-4f01-bd70-\
9977caf146f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TrainDts", "=", 
   RowBox[{"Dataset", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AssociationThread", "[", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", "#"}], "]"}], "&"}], " ", "/@", 
       RowBox[{"Keys", "[", "TrainData", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"AssociationThread", "[", 
          RowBox[{"\"\<Target\>\"", "\[Rule]", " ", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Values", "[", "TrainData", "]"}]}], "+", "1"}], ",", "2"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestDts", "=", 
   RowBox[{"Dataset", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"AssociationThread", "[", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", "#"}], "]"}], "&"}], " ", "/@", 
       RowBox[{"Keys", "[", "TestData", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"AssociationThread", "[", 
          RowBox[{"\"\<Target\>\"", "\[Rule]", " ", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Values", "[", "TestData", "]"}]}], "+", "1"}], ",", "2"}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8092806354185925`*^9, 3.8092806490300474`*^9}, {
  3.8093709515271826`*^9, 3.8093709872401915`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"578cb665-7ec8-4dfc-8bdf-16b6649a5c40"],

Cell[BoxData["18"], "Input",
 CellChangeTimes->{{3.8096385061501703`*^9, 
  3.8096385073531704`*^9}},ExpressionUUID->"ccb663f9-3ca6-4cfa-bc90-\
cd3065ab1cdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BlockRandom", "[", 
  RowBox[{
   RowBox[{"SeedRandom", "[", "999", "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"TrainDts", "[", 
        RowBox[{"[", "All", "]"}], "]"}], ",", "4"}], "]"}], ",", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"TestDts", "[", 
        RowBox[{"[", "All", "]"}], "]"}], ",", "4"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.80937115468432*^9, 3.8093711649596367`*^9}, {
  3.809371194970308*^9, 3.8093712375007877`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0d7ba27d-939c-4a46-91d9-b86d3c943530"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Association["InitialData" -> {
         Association["Input" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4MuKeEbtzdjlyhiYmJj2Y5WazcEes2vXT2xST+WYnHDZtpPJ/Asu
uSrGUlxS36yYunDJXWByxeoMEFjGtBeX1P9Ypou4pP6EMOKUe86k9w6X3GQm
d5zWlTAtxSO3C7ccIx45fPrwyC1TdsLph/8TcYcLSQAAycTtLg==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None], 
          "Target" -> 2], 
         Association["Input" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4N9BF4a4r1il3gUxSsbyRWGVshAs/PK/0AGL1BN1ga1ACpvcnwz+
bSDaH4vcIZYCEHVfyANTm7cGiDoiw7EbQ+4VY9H//z8XczLaYBr5ijHx5kZL
RkbGbky5L3qMjByWk3j1fmLxwtOm3jv/pzP2YJECg9vsOr9wyV1lNMEl9X8Z
Yx0uqZcyMs9xSH3LYizHpW0do+YfHFJvRHn24NI2kTEWl9T/cJ6lOOVIAgDM
L9kz
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None], 
          "Target" -> 10], 
         Association["Input" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4EW3BYPeeaxSzw2YmBiZlHZhkfoOlBLMcOXmm/IBQ24lE5Pak///
13ExWb1Hl7NlUrgIooOZGA+gyzEwLwTT59gYMOQYlcDUcXUs+iw4FgHJHRpM
TMJn0OXOMHEsft3MxcTEtBPDnT9LmNh4GJmY9Ldg8eBfXUZGBuaqr1iknvgC
jWPk2oFFKl+AiYlvShaT+U8MqeMsjFyZ9/5/9mWahSG3n4mtHkT3M8VjyjGm
gqhrmowTMORuczb9//l5rSgTFjP/e7AYasgD468S0y3/vzoBvcAk2YZF6v//
L3Va+ll3sMlQEwAAH3SmMQ==
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None], 
          "Target" -> 9], 
         Association["Input" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4FeezicMwXutz0FUDSPjCwy5SsYoEOXLKPoWQy6Y0fEbWC4B06LN
jIyPwHJ23zHkTkLk6rHZ98eRcem///8PMzKu/ochuZ2RceP/91WMjIy/MOQO
yzDqxysDpRjXY7rmiQFQnG+6LGMzptz/Z0eOHLn0v4VRA4scBLwXYVqKU1Kc
cQoeOUWccrEMcjjlFjFKvsMpqcLYgVOuhpHrOC65t92MBa9wSb5PZDyF01Si
AABDHc3t
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None], 
          "Target" -> 5]}, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[
         Association[{All, "Input"} -> 1, {All, "Target"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Input" -> TypeSystem`PackageScope`AtomShape[48], "Target" -> 
              TypeSystem`PackageScope`AtomShape[34]]], 
            DirectedInfinity[1], 2, {All}]], 4, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{"Input", "Target"}, {
           TypeSystem`Atom[Image], 
           TypeSystem`Atom[Integer]}], 4], "Meta" -> 
       Association["ID" -> 122333765390986], "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
         Association[{All, "Input"} -> 1, {All, "Target"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Input" -> TypeSystem`PackageScope`AtomShape[48], "Target" -> 
              TypeSystem`PackageScope`AtomShape[34]]], 
            DirectedInfinity[1], 2, {All}]], 4, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{"Input", "Target"}, {
           TypeSystem`Atom[Image], 
           TypeSystem`Atom[Integer]}], 4], "Path" -> {}, "BaseIndices" -> {}, 
       "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
       4, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Input", 
                    Style[
                    "Input", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Input"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{All, "Input"}, 
                  "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Target", 
                    Style[
                    "Target", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Target"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{All, "Target"}, 
                  "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+a4MuKeEbtzdjlyhiYmJj2Y5WazcEes2vXT2xST+WYnHDZtpPJ/Asu
uSrGUlxS36yYunDJXWByxeoMEFjGtBeX1P9Ypou4pP6EMOKUe86k9w6X3GQm
d5zWlTAtxSO3C7ccIx45fPrwyC1TdsLph/8TcYcLSQAAycTtLg==
                    "], {{0, 28.}, {28., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {28., 28.}, 
                    PlotRange -> {{0, 28.}, {0, 28.}}]}, "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{1, 
                   Key["Input"]}, "Item", False], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{1, 
                   Key["Target"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+S4N9BF4a4r1il3gUxSsbyRWGVshAs/PK/0AGL1BN1ga1ACpvcnwz+
bSDaH4vcIZYCEHVfyANTm7cGiDoiw7EbQ+4VY9H//z8XczLaYBr5ijHx5kZL
RkbGbky5L3qMjByWk3j1fmLxwtOm3jv/pzP2YJECg9vsOr9wyV1lNMEl9X8Z
Yx0uqZcyMs9xSH3LYizHpW0do+YfHFJvRHn24NI2kTEWl9T/cJ6lOOVIAgDM
L9kz
                    "], {{0, 28.}, {28., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {28., 28.}, 
                    PlotRange -> {{0, 28.}, {0, 28.}}]}, "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{2, 
                   Key["Input"]}, "Item", False], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["10"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{2, 
                   Key["Target"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+k4EW3BYPeeaxSzw2YmBiZlHZhkfoOlBLMcOXmm/IBQ24lE5Pak///
13ExWb1Hl7NlUrgIooOZGA+gyzEwLwTT59gYMOQYlcDUcXUs+iw4FgHJHRpM
TMJn0OXOMHEsft3MxcTEtBPDnT9LmNh4GJmY9Ldg8eBfXUZGBuaqr1iknvgC
jWPk2oFFKl+AiYlvShaT+U8MqeMsjFyZ9/5/9mWahSG3n4mtHkT3M8VjyjGm
gqhrmowTMORuczb9//l5rSgTFjP/e7AYasgD468S0y3/vzoBvcAk2YZF6v//
L3Va+ll3sMlQEwAAH3SmMQ==
                    "], {{0, 28.}, {28., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {28., 28.}, 
                    PlotRange -> {{0, 28.}, {0, 28.}}]}, "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{3, 
                   Key["Input"]}, "Item", False], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{3, 
                   Key["Target"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+K4FeezicMwXutz0FUDSPjCwy5SsYoEOXLKPoWQy6Y0fEbWC4B06LN
jIyPwHJ23zHkTkLk6rHZ98eRcem///8PMzKu/ochuZ2RceP/91WMjIy/MOQO
yzDqxysDpRjXY7rmiQFQnG+6LGMzptz/Z0eOHLn0v4VRA4scBLwXYVqKU1Kc
cQoeOUWccrEMcjjlFjFKvsMpqcLYgVOuhpHrOC65t92MBa9wSb5PZDyF01Si
AABDHc3t
                    "], {{0, 28.}, {28., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {28., 28.}, 
                    PlotRange -> {{0, 28.}, {0, 28.}}]}, "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{4, 
                   Key["Input"]}, "Item", False], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "0d94b8e2-10a6-4efb-be01-fe4e59902cb6"][{4, 
                   Key["Target"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
              "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
            Left, Dividers -> All, FrameStyle -> 
            GrayLevel[0.7490196078431373], 
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
           LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
           ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           If[GeneralUtilities`$DebugMode, 
            Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
              TypeSystem`NestedGrid`PackagePrivate`formatState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
             Blank[]] -> "", 
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{126., {101., 107.}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{126., {101., 107.}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>
       Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Association["InitialData" -> {
         Association["Input" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4NS2bV/ub9vmrx8TswpdrlCDSZCHSdBnso8Q2y50yS+3geApkOHF
cxiX4d+1J+K0uJvpKS6p56LTcGoLVv+FS+ow+x6c2tQlHuCSWsW+EJfUEwbG
2+hir61FRIRFRER4GZkEpfLy8lA8/xYUKOfsmBIagMCGKw3DxEd8nGD6/RVM
26r4L+JyyAlGD1xS/xNVfuOS2swaglObqdR1XFJ7GSNxaqMmAADfxdm5
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None], 
          "Target" -> 8], 
         Association["Input" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8gcKXFjImJMXD+fQyZl/VMzMzW4UBCKBdN6m8zM1/6ox//X70K5WJO
/Ykit1h41h0ocw0v0zJkqdsKTgjOBiaTb0hyq5jykHhCTA1IvGPha5F4u5jj
cPrmt43YD5ySjsyrcctxn0MXehDIJLTrJZDhII4utV+LmZmJWWnO//tC1hgu
YHZ7taZRTOnhfOZGNLkrzNqPgdQsZjVV5uNocrUQ1b9LmZnKfqPrY8oHy5Uw
MRxAd8oXI46Ysx/abIAOwpD7X8vCzC3EzGLUyBT5F0NyU6qTo9PK//+ZmC9g
yMGAHvNanHK0BQC9RrLA
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None], 
          "Target" -> 3], 
         Association["Input" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9wUMOo8BOH1G5mRsZFOOSyGJlyX2CX+mPLKIIheOP8XxB1gJExB13q
IhfjNxA9gZH1ELpcECNY7pM6YwC6VB0To+dvIL2QkbEPTeokH6PMFxCjkJHr
IZpcICPjVBD9TJjR9/+VBb+RpICOUzkIYjQwMlquFmLQ/oqQq2ZkZGSWBQJu
Rgi4hZC7LMOIAhReIhl6J8fX3dzXFSissgoI/qA55+/P/48YGcXvo/sOCjYy
MpbgkPqvxsh4HIfUZmZG28845KYyMi7AZeRtfsZnuOToAgBR4qpB
            "], "Byte", ColorSpace -> Automatic, Interleaving -> None], 
          "Target" -> 5], 
         Association["Input" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+y4J2m8jMcUn87GTtxabvFyLgDU/TH9vp3///XMKq8xZTby8jY8/+/
NONETKnjvIwZP/6fZ5b+iiHVz82Y+vv//25GOQy79vIyKv9+/u6/OKbcEkZG
RlN/Rtl4TsZMNKmbIowgwACEjFPQ5D6Fyfj5RR45cqSGkQsjUD4/gdAljJaY
PoCAO+KMzbjkNjIyduCR+4VbzvsvbrnjuKSAci/Ik9P9hFOOeAAAoArNPg==

            "], "Byte", ColorSpace -> Automatic, Interleaving -> None], 
          "Target" -> 5]}, "InitialShape" -> 
       TypeSystem`PackageScope`HeaderShape[
         Association[{All, "Input"} -> 1, {All, "Target"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Input" -> TypeSystem`PackageScope`AtomShape[48], "Target" -> 
              TypeSystem`PackageScope`AtomShape[34]]], 
            DirectedInfinity[1], 2, {All}]], 4, 
          DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
         TypeSystem`Struct[{"Input", "Target"}, {
           TypeSystem`Atom[Image], 
           TypeSystem`Atom[Integer]}], 4], "Meta" -> 
       Association["ID" -> 267782832870026], "RowTarget" -> 20, 
       "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
         Association[{All, "Input"} -> 1, {All, "Target"} -> 1], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Input" -> TypeSystem`PackageScope`AtomShape[48], "Target" -> 
              TypeSystem`PackageScope`AtomShape[34]]], 
            DirectedInfinity[1], 2, {All}]], 4, 
          DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
         TypeSystem`Struct[{"Input", "Target"}, {
           TypeSystem`Atom[Image], 
           TypeSystem`Atom[Integer]}], 4], "Path" -> {}, "BaseIndices" -> {}, 
       "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
       4, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
       "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Input", 
                    Style[
                    "Input", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Input"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{All, "Input"}, 
                  "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Target", 
                    Style[
                    "Target", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Target"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{All, "Target"}, 
                  "ColumnHeader", True], "Mouse"], 
                ImageSize -> {{1, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+E4NS2bV/ub9vmrx8TswpdrlCDSZCHSdBnso8Q2y50yS+3geApkOHF
cxiX4d+1J+K0uJvpKS6p56LTcGoLVv+FS+ow+x6c2tQlHuCSWsW+EJfUEwbG
2+hir61FRIRFRER4GZkEpfLy8lA8/xYUKOfsmBIagMCGKw3DxEd8nGD6/RVM
26r4L+JyyAlGD1xS/xNVfuOS2swaglObqdR1XFJ7GSNxaqMmAADfxdm5
                    "], {{0, 28.}, {28., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {28., 28.}, 
                    PlotRange -> {{0, 28.}, {0, 28.}}]}, "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{1, 
                   Key["Input"]}, "Item", False], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{1, 
                   Key["Target"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8gcKXFjImJMXD+fQyZl/VMzMzW4UBCKBdN6m8zM1/6ox//X70K5WJO
/Ykit1h41h0ocw0v0zJkqdsKTgjOBiaTb0hyq5jykHhCTA1IvGPha5F4u5jj
cPrmt43YD5ySjsyrcctxn0MXehDIJLTrJZDhII4utV+LmZmJWWnO//tC1hgu
YHZ7taZRTOnhfOZGNLkrzNqPgdQsZjVV5uNocrUQ1b9LmZnKfqPrY8oHy5Uw
MRxAd8oXI46Ysx/abIAOwpD7X8vCzC3EzGLUyBT5F0NyU6qTo9PK//+ZmC9g
yMGAHvNanHK0BQC9RrLA
                    "], {{0, 28.}, {28., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {28., 28.}, 
                    PlotRange -> {{0, 28.}, {0, 28.}}]}, "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{2, 
                   Key["Input"]}, "Item", False], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{2, 
                   Key["Target"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9wUMOo8BOH1G5mRsZFOOSyGJlyX2CX+mPLKIIheOP8XxB1gJExB13q
IhfjNxA9gZH1ELpcECNY7pM6YwC6VB0To+dvIL2QkbEPTeokH6PMFxCjkJHr
IZpcICPjVBD9TJjR9/+VBb+RpICOUzkIYjQwMlquFmLQ/oqQq2ZkZGSWBQJu
Rgi4hZC7LMOIAhReIhl6J8fX3dzXFSissgoI/qA55+/P/48YGcXvo/sOCjYy
MpbgkPqvxsh4HIfUZmZG28845KYyMi7AZeRtfsZnuOToAgBR4qpB
                    "], {{0, 28.}, {28., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {28., 28.}, 
                    PlotRange -> {{0, 28.}, {0, 28.}}]}, "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{3, 
                   Key["Input"]}, "Item", False], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{3, 
                   Key["Target"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes[
                  TemplateBox[{"\"  \"", 
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+y4J2m8jMcUn87GTtxabvFyLgDU/TH9vp3///XMKq8xZTby8jY8/+/
NONETKnjvIwZP/6fZ5b+iiHVz82Y+vv//25GOQy79vIyKv9+/u6/OKbcEkZG
RlN/Rtl4TsZMNKmbIowgwACEjFPQ5D6Fyfj5RR45cqSGkQsjUD4/gdAljJaY
PoCAO+KMzbjkNjIyduCR+4VbzvsvbrnjuKSAci/Ik9P9hFOOeAAAoArNPg==

                    "], {{0, 28.}, {28., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> None], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {28., 28.}, 
                    PlotRange -> {{0, 28.}, {0, 28.}}]}, "RowDefault"]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{4, 
                   Key["Input"]}, "Item", False], "Mouse"], 
                ImageSize -> {{48, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 "760010fd-a28a-4998-bc5d-078e1f17dd55"][{4, 
                   Key["Target"]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
              "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
            Left, Dividers -> All, FrameStyle -> 
            GrayLevel[0.7490196078431373], 
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
           LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
           ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           If[GeneralUtilities`$DebugMode, 
            Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
              TypeSystem`NestedGrid`PackagePrivate`formatState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
             Blank[]] -> "", 
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{126., {101., 107.}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{126., {101., 107.}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>
       Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8093711652808056`*^9, 3.809371238491605*^9, {3.809371414538923*^9, 
   3.8093714427332363`*^9}, 3.8093759089191327`*^9, 3.8094402187759886`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"4278f0a0-0a55-46d9-a56d-7fa689d6c18b"]
}, Open  ]],

Cell[BoxData["19"], "Input",
 CellChangeTimes->{{3.8096385443912945`*^9, 
  3.809638544516076*^9}},ExpressionUUID->"1c9c0e0b-61f6-4e5e-b1d9-\
a0160afcec11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetResults", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"LeNet", ",", "TrainDts", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "TestDts"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "15"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", "2096"}], ",", 
    RowBox[{"LearningRate", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<ADAM\>\""}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<TrainingMemory\>\""}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "\"\<Real32\>\""}], ",", 
    RowBox[{"RandomSeeding", "\[Rule]", "99999"}], ",", 
    RowBox[{"TrainingProgressMeasurements", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Measurement\>\"", "\[Rule]", "\"\<Accuracy\>\""}], ",", 
         RowBox[{"\"\<ClassAveraging\>\"", "\[Rule]", "\"\<Macro\>\""}]}], 
        "|>"}], ",", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Measurement\>\"", "\[Rule]", "\"\<Precision\>\""}], ",", 
         RowBox[{"\"\<ClassAveraging\>\"", "\[Rule]", "\"\<Macro\>\""}]}], 
        "|>"}], "\[IndentingNewLine]", ",", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Measurement\>\"", "\[Rule]", "\"\<F1Score\>\""}], ",", 
         RowBox[{"\"\<ClassAveraging\>\"", "\[Rule]", "\"\<Macro\>\""}]}], 
        "|>"}], "\[IndentingNewLine]", ",", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Measurement\>\"", "\[Rule]", "\"\<Recall\>\""}], ",", 
         RowBox[{"\"\<ClassAveraging\>\"", "\[Rule]", "\"\<Macro\>\""}]}], 
        "|>"}], "\[IndentingNewLine]", ",", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Measurement\>\"", "\[Rule]", "\"\<ROCCurvePlot\>\""}], 
         ",", 
         RowBox[{"\"\<ClassAveraging\>\"", "\[Rule]", "\"\<Macro\>\""}]}], 
        "|>"}], "\[IndentingNewLine]", ",", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{
         "\"\<Measurement\>\"", "\[Rule]", "\"\<ConfusionMatrixPlot\>\""}], 
         ",", 
         RowBox[{"\"\<ClassAveraging\>\"", "\[Rule]", "\"\<Macro\>\""}]}], 
        "|>"}]}], "\[IndentingNewLine]", "}"}]}], ",", 
    RowBox[{"TrainingStoppingCriterion", "\[Rule]", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Criterion\>\"", "\[Rule]", "\"\<Loss\>\""}], ",", 
       RowBox[{"\"\<AbsoluteChange\>\"", "\[Rule]", "0.001"}]}], "|>"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8092780858819466`*^9, 3.809278106611817*^9}, {
   3.809371344408494*^9, 3.809371356691892*^9}, {3.809371470852533*^9, 
   3.8093715403027964`*^9}, {3.809373166007825*^9, 3.8093731676951833`*^9}, 
   3.8093758728339033`*^9, 3.8093759618910017`*^9, 3.8093800746573505`*^9, {
   3.8093805813915663`*^9, 3.8093805822816906`*^9}, {3.8093831604339046`*^9, 
   3.809383161464669*^9}, {3.809440573716155*^9, 3.8094405870740056`*^9}, {
   3.809440636815619*^9, 3.8094406426794376`*^9}, {3.809440673342301*^9, 
   3.809440674261859*^9}, 3.809441978174962*^9, {3.80944223733792*^9, 
   3.8094422430581436`*^9}, {3.8094427995793743`*^9, 
   3.8094428016750526`*^9}, {3.809444397010525*^9, 3.8094443979290094`*^9}, {
   3.809445752739457*^9, 3.809445753630057*^9}, {3.8094458841928434`*^9, 
   3.809445908655808*^9}, {3.8094459529423885`*^9, 3.809445953895285*^9}, {
   3.8094463139665103`*^9, 3.8094463154348817`*^9}, {3.809446460978475*^9, 
   3.8094464625406055`*^9}, {3.8094540609116325`*^9, 
   3.8094540626063905`*^9}, {3.809454364500708*^9, 3.8094544210948267`*^9}, {
   3.8094552240377846`*^9, 3.809455224751645*^9}, {3.8094576639952593`*^9, 
   3.809457697915721*^9}, 3.8094651657329407`*^9, {3.809466596392659*^9, 
   3.8094666015876617`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"7e534d01-1986-4408-bf38-9678c4cbfa8b"],

Cell[BoxData[
 FrameBox[GridBox[{
    {
     ItemBox[
      FrameBox[
       StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
        StripOnInput->False,
        FontSize->12],
       FrameMargins->{{10, 5}, {-4, 2}},
       FrameStyle->None,
       StripOnInput->False],
      Alignment->{Left, Bottom},
      Background->RGBColor[0.96, 0.96, 0.96],
      Frame->{{False, False}, {True, False}},
      FrameStyle->Opacity[0.1],
      ItemSize->{Automatic, 1},
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"summary\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "348"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "12"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"time:\"", "\"14min\""},
                "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"examples/s:\"", "850"},
                "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"data\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"training examples:\"", "60000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"validation examples:\"", "10000"}, 
               "RowWithSeparators"], 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"processed examples:\"", "729408"}, 
               "RowWithSeparators"], 
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"method\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
               "RowWithSeparators"], 
              
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "2096"},
                "RowWithSeparators"], "\"CPU\""},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"round\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"3.08\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], 0.03079126304032593, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"acc.:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Accuracy\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Class averaging: \"", "\"Macro\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "Accuracy"}], 
                    Row[{"Class averaging: ", "Macro"}]}], "Tooltip"]& ], 
                "\"99.102%\""}, "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"prec.:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Precision\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Class averaging: \"", "\"Macro\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "Precision"}], 
                    Row[{"Class averaging: ", "Macro"}]}], "Tooltip"]& ], 
                "\"99.095%\""}, "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"F1:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"F1Score\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Class averaging: \"", "\"Macro\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "F1Score"}], 
                    Row[{"Class averaging: ", "Macro"}]}], "Tooltip"]& ], 
                "\"99.094%\""}, "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"recall:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Recall\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Class averaging: \"", "\"Macro\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "Recall"}], 
                    Row[{"Class averaging: ", "Macro"}]}], "Tooltip"]& ], 
                "\"99.093%\""}, "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{
              TemplateBox[{5}, "Spacer1"], 
              StyleBox["\"validation\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",", "\",\"", 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"3.85\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], 0.03850385804063196, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"acc.:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Accuracy\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Class averaging: \"", "\"Macro\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "Accuracy"}], 
                    Row[{"Class averaging: ", "Macro"}]}], "Tooltip"]& ], 
                "\"98.79%\""}, "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"prec.:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Precision\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Class averaging: \"", "\"Macro\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "Precision"}], 
                    Row[{"Class averaging: ", "Macro"}]}], "Tooltip"]& ], 
                "\"98.79%\""}, "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"F1:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"F1Score\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Class averaging: \"", "\"Macro\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "F1Score"}], 
                    Row[{"Class averaging: ", "Macro"}]}], "Tooltip"]& ], 
                "\"98.78%\""}, "RowWithSeparators"], 
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"recall:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"Recall\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Class averaging: \"", "\"Macro\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "Recall"}], 
                    Row[{"Class averaging: ", "Macro"}]}], "Tooltip"]& ], 
                "\"98.78%\""}, "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            ItemBox[
             
             DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
              NeuralNetworks`Private`NetTrain`plotList$$ = {
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
/wFzX48t
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9632107023411371, -0.5332231429469991}, {
                    1.9665551839464883`, -0.7865490911986799}, {
                    2.9698996655518397`, -0.9679664465550011}, {
                    3.9732441471571907`, -1.077904473402618}, {
                    4.976588628762542, -1.1611060543086218`}, {
                    5.979933110367893, -1.2556606110746322`}, {
                    6.983277591973244, -1.2931224623006992`}, {
                    7.986622073578595, -1.3184202366467341`}, {
                    8.989966555183948, -1.3559282031342157`}, {
                    9.993311036789297, -1.4063597042532168`}, {
                    10.996655518394649`, -1.4346074054121822`}, {
                    12., -1.4144957525223623`}}]}, {
                    AbsolutePointSize[3.734042553191489], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9632107023411371, -0.5332231429469991}, {
                    1.9665551839464883`, -0.7865490911986799}, {
                    2.9698996655518397`, -0.9679664465550011}, {
                    3.9732441471571907`, -1.077904473402618}, {
                    4.976588628762542, -1.1611060543086218`}, {
                    5.979933110367893, -1.2556606110746322`}, {
                    6.983277591973244, -1.2931224623006992`}, {
                    7.986622073578595, -1.3184202366467341`}, {
                    8.989966555183948, -1.3559282031342157`}, {
                    9.993311036789297, -1.4063597042532168`}, {
                    10.996655518394649`, -1.4346074054121822`}, {
                    12., -1.4144957525223623`}}]}}}, Prolog -> {{
                    Text[5, 
                    Offset[{-2, -2}, {5., 0.6240000000000001}], {1., 1.}], 
                    Text[10, 
                    Offset[{-2, -2}, {10., 0.6240000000000001}], {1., 1.}], 
                    Text[15, 
                    Offset[{-2, -2}, {15., 0.6240000000000001}], {1., 1.}]}, {
                    Text[
                    Superscript[10, "-1"], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
                 PlotRange -> {{0, 12.017241379310345`}, {-1.824, 
                   0.6240000000000001}}, ImageSize -> {302, 182.}, 
                 GridLines -> {{5., 10., 15.}, {{-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {-1.6989700043360185`, 
                    GrayLevel[0.8501]}, {-1.3979400086720375`, 
                    GrayLevel[0.8501]}, {-1.2218487496163564`, 
                    GrayLevel[0.8501]}, {-1.0969100130080565`, 
                    GrayLevel[0.8501]}, {-0.6989700043360187, 
                    GrayLevel[0.8501]}, {-0.39794000867203755`, 
                    GrayLevel[0.8501]}, {-0.22184874961635626`, 
                    GrayLevel[0.8501]}, {-0.09691001300805638, 
                    GrayLevel[0.8501]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "loss", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9632107023411371, 0.9138999999999999}, {
                    1.9665551839464883`, 0.9514}, {2.9698996655518397`, 
                    0.9674}, {3.9732441471571907`, 0.974}, {4.976588628762542,
                     0.9796}, {5.979933110367893, 0.9823}, {6.983277591973244,
                     0.9831}, {7.986622073578595, 0.9833}, {8.989966555183948,
                     0.9858}, {9.993311036789297, 0.9867}, {
                    10.996655518394649`, 0.9883}, {12., 0.9879}}]}, {
                    AbsolutePointSize[3.734042553191489], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9632107023411371, 0.9138999999999999}, {
                    1.9665551839464883`, 0.9514}, {2.9698996655518397`, 
                    0.9674}, {3.9732441471571907`, 0.974}, {4.976588628762542,
                     0.9796}, {5.979933110367893, 0.9823}, {6.983277591973244,
                     0.9831}, {7.986622073578595, 0.9833}, {8.989966555183948,
                     0.9858}, {9.993311036789297, 0.9867}, {
                    10.996655518394649`, 0.9883}, {12., 0.9879}}]}}}, 
                 Prolog -> {{
                    Text[5, 
                    Offset[{-2, 1}, {5., 0.03797500000000001}], {1., -1.}], 
                    Text[10, 
                    Offset[{-2, 1}, {10., 0.03797500000000001}], {1., -1.}], 
                    Text[15, 
                    Offset[{-2, 1}, {15., 0.03797500000000001}], {1., -1.}]}, {
                    Text[
                    PercentForm[0.25], 
                    Offset[{3, 0}, {0, 0.25}], {-1, -1.}], 
                    Text[
                    PercentForm[0.5], 
                    Offset[{3, 0}, {0, 0.5}], {-1, -1.}], 
                    Text[
                    PercentForm[0.75], 
                    Offset[{3, 0}, {0, 0.75}], {-1, -1.}]}}, 
                 PlotRange -> {{0, 12.017241379310345`}, {0.03797500000000001,
                    1.009525}}, ImageSize -> {302, 182.}, 
                 GridLines -> {{5., 10., 15.}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.85, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.95, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.25, 
                    GrayLevel[0.3001]}, {0.5, 
                    GrayLevel[0.3001]}, {0.75, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "accuracy", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    
                    Line[{{0.9632107023411371, 0.7250066289638767}, {
                    1.9665551839464883`, 0.9294377790721124}, {
                    2.9698996655518397`, 0.9565904489443267}, {
                    3.9732441471571907`, 0.9693381124078929}, {
                    4.976588628762542, 0.9769829914816706}, {
                    5.979933110367893, 0.9796965948449949}, {
                    6.983277591973244, 0.9832755727607193}, {
                    7.986622073578595, 0.9854616051061743}, {
                    8.989966555183948, 0.9869926100427724}, {
                    9.993311036789297, 0.9880149600564566}, {
                    10.996655518394649`, 0.9899339858724894}, {12., 
                    0.9909455108611874}}]}, {
                    AbsolutePointSize[3.734042553191489], 
                    Hue[0.083, 1., 0.76], 
                    
                    Point[{{0.9632107023411371, 0.7250066289638767}, {
                    1.9665551839464883`, 0.9294377790721124}, {
                    2.9698996655518397`, 0.9565904489443267}, {
                    3.9732441471571907`, 0.9693381124078929}, {
                    4.976588628762542, 0.9769829914816706}, {
                    5.979933110367893, 0.9796965948449949}, {
                    6.983277591973244, 0.9832755727607193}, {
                    7.986622073578595, 0.9854616051061743}, {
                    8.989966555183948, 0.9869926100427724}, {
                    9.993311036789297, 0.9880149600564566}, {
                    10.996655518394649`, 0.9899339858724894}, {12., 
                    0.9909455108611874}}]}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9632107023411371, 0.914830442881488}, {
                    1.9665551839464883`, 0.9517930915142891}, {
                    2.9698996655518397`, 0.9674925077918702}, {
                    3.9732441471571907`, 0.9741847805289183}, {
                    4.976588628762542, 0.9798433473941055}, {
                    5.979933110367893, 0.982446558381415}, {6.983277591973244,
                     0.9831259214709762}, {7.986622073578595, 
                    0.983246676332523}, {8.989966555183948, 
                    0.9858452790467481}, {9.993311036789297, 
                    0.9867482051404124}, {10.996655518394649`, 
                    0.9883199804075025}, {12., 0.9879178857036639}}]}, {
                    AbsolutePointSize[3.734042553191489], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9632107023411371, 0.914830442881488}, {
                    1.9665551839464883`, 0.9517930915142891}, {
                    2.9698996655518397`, 0.9674925077918702}, {
                    3.9732441471571907`, 0.9741847805289183}, {
                    4.976588628762542, 0.9798433473941055}, {
                    5.979933110367893, 0.982446558381415}, {6.983277591973244,
                     0.9831259214709762}, {7.986622073578595, 
                    0.983246676332523}, {8.989966555183948, 
                    0.9858452790467481}, {9.993311036789297, 
                    0.9867482051404124}, {10.996655518394649`, 
                    0.9883199804075025}, {12., 0.9879178857036639}}]}}}, 
                 Prolog -> {{
                    Text[5, 
                    Offset[{-2, 1}, {5., 0.7222500000000001}], {1., -1.}], 
                    Text[10, 
                    Offset[{-2, 1}, {10., 0.7222500000000001}], {1., -1.}], 
                    Text[15, 
                    Offset[{-2, 1}, {15., 0.7222500000000001}], {1., -1.}]}, {
                    Text[
                    PercentForm[0.8], 
                    Offset[{3, 0}, {0, 0.8}], {-1, -1.}], 
                    Text[
                    PercentForm[0.9], 
                    Offset[{3, 0}, {0, 0.9}], {-1, -1.}]}}, 
                 PlotRange -> {{0, 12.017241379310345`}, {0.7222500000000001, 
                   1.00275}}, ImageSize -> {302, 182.}, 
                 GridLines -> {{5., 10., 15.}, {{0.7, 
                    GrayLevel[0.8501]}, {0.72, 
                    GrayLevel[0.8501]}, {0.74, 
                    GrayLevel[0.8501]}, {0.76, 
                    GrayLevel[0.8501]}, {0.78, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.82, 
                    GrayLevel[0.8501]}, {0.84, 
                    GrayLevel[0.8501]}, {0.86, 
                    GrayLevel[0.8501]}, {0.88, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.92, 
                    GrayLevel[0.8501]}, {0.94, 
                    GrayLevel[0.8501]}, {0.96, 
                    GrayLevel[0.8501]}, {0.98, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.3001]}, {0.8, 
                    GrayLevel[0.3001]}, {0.9, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "precision", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    
                    Line[{{0.9632107023411371, 0.7126852269752081}, {
                    1.9665551839464883`, 0.9294338276909269}, {
                    2.9698996655518397`, 0.9566120548873357}, {
                    3.9732441471571907`, 0.96930854648847}, {
                    4.976588628762542, 0.9769664300704598}, {
                    5.979933110367893, 0.9796951325730514}, {
                    6.983277591973244, 0.9832708854456275}, {
                    7.986622073578595, 0.9854497438533916}, {
                    8.989966555183948, 0.9869902495903504}, {
                    9.993311036789297, 0.9880080605809347}, {
                    10.996655518394649`, 0.9899259063229211}, {12., 
                    0.9909354230871464}}]}, {
                    AbsolutePointSize[3.734042553191489], 
                    Hue[0.083, 1., 0.76], 
                    
                    Point[{{0.9632107023411371, 0.7126852269752081}, {
                    1.9665551839464883`, 0.9294338276909269}, {
                    2.9698996655518397`, 0.9566120548873357}, {
                    3.9732441471571907`, 0.96930854648847}, {
                    4.976588628762542, 0.9769664300704598}, {
                    5.979933110367893, 0.9796951325730514}, {
                    6.983277591973244, 0.9832708854456275}, {
                    7.986622073578595, 0.9854497438533916}, {
                    8.989966555183948, 0.9869902495903504}, {
                    9.993311036789297, 0.9880080605809347}, {
                    10.996655518394649`, 0.9899259063229211}, {12., 
                    0.9909354230871464}}]}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9632107023411371, 0.9129595858930761}, {
                    1.9665551839464883`, 0.951044275350075}, {
                    2.9698996655518397`, 0.9672512722465303}, {
                    3.9732441471571907`, 0.9738992055799137}, {
                    4.976588628762542, 0.9794823377631893}, {
                    5.979933110367893, 0.9822131567498872}, {
                    6.983277591973244, 0.9830339280681437}, {
                    7.986622073578595, 0.9832022983886824}, {
                    8.989966555183948, 0.9857157740433893}, {
                    9.993311036789297, 0.9866268224406779}, {
                    10.996655518394649`, 0.9882347582844222}, {12., 
                    0.9878023409351708}}]}, {
                    AbsolutePointSize[3.734042553191489], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9632107023411371, 0.9129595858930761}, {
                    1.9665551839464883`, 0.951044275350075}, {
                    2.9698996655518397`, 0.9672512722465303}, {
                    3.9732441471571907`, 0.9738992055799137}, {
                    4.976588628762542, 0.9794823377631893}, {
                    5.979933110367893, 0.9822131567498872}, {
                    6.983277591973244, 0.9830339280681437}, {
                    7.986622073578595, 0.9832022983886824}, {
                    8.989966555183948, 0.9857157740433893}, {
                    9.993311036789297, 0.9866268224406779}, {
                    10.996655518394649`, 0.9882347582844222}, {12., 
                    0.9878023409351708}}]}}}, Prolog -> {{
                    Text[5, 
                    Offset[{-2, 1}, {5., 0.7020500000000002}], {1., -1.}], 
                    Text[10, 
                    Offset[{-2, 1}, {10., 0.7020500000000002}], {1., -1.}], 
                    Text[15, 
                    Offset[{-2, 1}, {15., 0.7020500000000002}], {1., -1.}]}, {
                    Text[
                    PercentForm[0.8], 
                    Offset[{3, 0}, {0, 0.8}], {-1, -1.}], 
                    Text[
                    PercentForm[0.9], 
                    Offset[{3, 0}, {0, 0.9}], {-1, -1.}]}}, 
                 PlotRange -> {{0, 12.017241379310345`}, {0.7020500000000002, 
                   1.00295}}, ImageSize -> {302, 182.}, 
                 GridLines -> {{5., 10., 15.}, {{0.7, 
                    GrayLevel[0.8501]}, {0.72, 
                    GrayLevel[0.8501]}, {0.74, 
                    GrayLevel[0.8501]}, {0.76, 
                    GrayLevel[0.8501]}, {0.78, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.82, 
                    GrayLevel[0.8501]}, {0.84, 
                    GrayLevel[0.8501]}, {0.86, 
                    GrayLevel[0.8501]}, {0.88, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.92, 
                    GrayLevel[0.8501]}, {0.94, 
                    GrayLevel[0.8501]}, {0.96, 
                    GrayLevel[0.8501]}, {0.98, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.3001]}, {0.8, 
                    GrayLevel[0.3001]}, {0.9, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "F1 score", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    
                    Line[{{0.9632107023411371, 0.710079615350069}, {
                    1.9665551839464883`, 0.9294694036438763}, {
                    2.9698996655518397`, 0.9566470511398071}, {
                    3.9732441471571907`, 0.9692949595284892}, {
                    4.976588628762542, 0.9769579379079005}, {
                    5.979933110367893, 0.9796979341954302}, {
                    6.983277591973244, 0.9832701236344287}, {
                    7.986622073578595, 0.9854417978044102}, {
                    8.989966555183948, 0.9869913617805471}, {
                    9.993311036789297, 0.9880050032929037}, {
                    10.996655518394649`, 0.9899206279345183}, {12., 
                    0.9909271090482756}}]}, {
                    AbsolutePointSize[3.734042553191489], 
                    Hue[0.083, 1., 0.76], 
                    
                    Point[{{0.9632107023411371, 0.710079615350069}, {
                    1.9665551839464883`, 0.9294694036438763}, {
                    2.9698996655518397`, 0.9566470511398071}, {
                    3.9732441471571907`, 0.9692949595284892}, {
                    4.976588628762542, 0.9769579379079005}, {
                    5.979933110367893, 0.9796979341954302}, {
                    6.983277591973244, 0.9832701236344287}, {
                    7.986622073578595, 0.9854417978044102}, {
                    8.989966555183948, 0.9869913617805471}, {
                    9.993311036789297, 0.9880050032929037}, {
                    10.996655518394649`, 0.9899206279345183}, {12., 
                    0.9909271090482756}}]}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9632107023411371, 0.9130415074905516}, {
                    1.9665551839464883`, 0.950980074310307}, {
                    2.9698996655518397`, 0.9672358627633807}, {
                    3.9732441471571907`, 0.9737682786861311}, {
                    4.976588628762542, 0.9792812610088374}, {
                    5.979933110367893, 0.9820209972191616}, {
                    6.983277591973244, 0.9830401867340349}, {
                    7.986622073578595, 0.9832317239227455}, {
                    8.989966555183948, 0.9856980637905952}, {
                    9.993311036789297, 0.986528500291889}, {
                    10.996655518394649`, 0.9881859128322692}, {12., 
                    0.987774172558949}}]}, {
                    AbsolutePointSize[3.734042553191489], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9632107023411371, 0.9130415074905516}, {
                    1.9665551839464883`, 0.950980074310307}, {
                    2.9698996655518397`, 0.9672358627633807}, {
                    3.9732441471571907`, 0.9737682786861311}, {
                    4.976588628762542, 0.9792812610088374}, {
                    5.979933110367893, 0.9820209972191616}, {
                    6.983277591973244, 0.9830401867340349}, {
                    7.986622073578595, 0.9832317239227455}, {
                    8.989966555183948, 0.9856980637905952}, {
                    9.993311036789297, 0.986528500291889}, {
                    10.996655518394649`, 0.9881859128322692}, {12., 
                    0.987774172558949}}]}}}, Prolog -> {{
                    Text[5, 
                    Offset[{-2, 1}, {5., 0.7020500000000002}], {1., -1.}], 
                    Text[10, 
                    Offset[{-2, 1}, {10., 0.7020500000000002}], {1., -1.}], 
                    Text[15, 
                    Offset[{-2, 1}, {15., 0.7020500000000002}], {1., -1.}]}, {
                    Text[
                    PercentForm[0.8], 
                    Offset[{3, 0}, {0, 0.8}], {-1, -1.}], 
                    Text[
                    PercentForm[0.9], 
                    Offset[{3, 0}, {0, 0.9}], {-1, -1.}]}}, 
                 PlotRange -> {{0, 12.017241379310345`}, {0.7020500000000002, 
                   1.00295}}, ImageSize -> {302, 182.}, 
                 GridLines -> {{5., 10., 15.}, {{0.7, 
                    GrayLevel[0.8501]}, {0.72, 
                    GrayLevel[0.8501]}, {0.74, 
                    GrayLevel[0.8501]}, {0.76, 
                    GrayLevel[0.8501]}, {0.78, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0.82, 
                    GrayLevel[0.8501]}, {0.84, 
                    GrayLevel[0.8501]}, {0.86, 
                    GrayLevel[0.8501]}, {0.88, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.9, 
                    GrayLevel[0.8501]}, {0.92, 
                    GrayLevel[0.8501]}, {0.94, 
                    GrayLevel[0.8501]}, {0.96, 
                    GrayLevel[0.8501]}, {0.98, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.3001]}, {0.8, 
                    GrayLevel[0.3001]}, {0.9, 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "recall", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], 
                    Line[CompressedData["
1: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
gXgxvH65dnI35f/+Yjjc+C/4O2ns
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.7]], 
                    Line[{{0., 0.}, {1., 1.}}]}}, {{
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]]}, {
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.7]]}}, {{
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]]}, {
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.7]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]]}, {
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.7]]}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], 
                    Line[CompressedData["
1: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
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.7]], 
                    Line[{{0., 0.}, {1., 1.}}]}}, {{
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]]}, {
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.7]]}}, {{
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]]}, {
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.7]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]]}, {
                    Directive[
                    PointSize[0.009166666666666668], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.7]]}, {}, {}, {}}}, {{}, {}}}}, {
                 DisplayFunction -> Identity, DisplayFunction -> Identity, 
                  AspectRatio -> 1, Axes -> {True, True}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                  GrayLevel[1], DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, 
                  FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, 
                  GridLines -> {Automatic, Automatic}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.5], 
                    AbsoluteThickness[1], 
                    AbsoluteDashing[{1, 2}]], ImageSize -> {300, 300}, 
                  Method -> {
                   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
                    True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                  PlotRangeClipping -> True, 
                  PlotRangePadding -> {{0.003, 0.003}, {0.003, 0.003}}, 
                  Ticks -> {Automatic, Automatic}}], {
                "false positive rate", "recall", None}], 
               MouseAppearance[
                EventHandler[
                 PaneSelector[{False -> GeneralUtilities`TightLabeled[
                    Graphics[
                    Raster[CompressedData["
1:eJxTTMoPSmVmYGDggmIQGwI+2CsE6y1dl/rW3iv5d8WaC6/sYeLFIff5Kr++
s9+h/u+k4Nu3cHHZq9ud4/a+t3/XWV/kUv0eLm61Kr99T9V7+zvC/590fHsH
F5eSXVd48+Qr+3On9oWHzHtqT8heXOZ0lm3n3eH/2p6vyaaWYeUzuLiNxrMX
PMpv7S3eVr3+4I0wh9dJ6WCX6SP7D7/Lg+7IHIKLP1uxT/bTq7f2ef5/Jivf
ek3Qv/2a04Oub3pnv2RjrU1YxluC5uAS31Bz9HurxBv7DyKVW5ksX8DF1/zz
m2Za8M5+kvXfdbMevyEYDnkf3nFZSj223+Ass5fF+iRcfPJy3i3q0W/smbp/
Ou3bizA/vF79tJTFe/tTc+vCzxa+IxhuuNyJKxxwiZNKrwoJfO18+oG9w9ac
yGMRqwm6H5d/cYU/rvDEZT4umrmuLDFgxVv7mJvVbBmhrwm6x6jLaCZr7SP7
A+bCN7LDjhA0n9TwxKUel39x5V9c8Y4rX2w+E2vv8+SxvUPG60m6refh4su8
8wPFeF/b/+He895F5RlB94gsrXj7ZdJre5vDlqIf9Z4TDGdc8XXyMtutybrv
7BuO1ijej3tDdvyKmbLp373yyD5DOeRUtNBxqoc/LvUWn1K3mre/st8TYndq
huRTgu7HFY+Rf+fqZD94Y69W/ivW9PhLuLjQr6qlGeYP7Qsu3+E+lb6FoL/O
BNZaP7n62v7OvB/q7lueE1SPK/xxlTOkxi+ucrJy/pL43sUP7R18mF8bKO8m
u1wllS67FFpwcu4bexHGqguVTi8J2ktqPK6RiUqxvn8fyocB3OFJqr9Ircdx
lW+4ygdc/p3wt4tn9buH9go35791vLCfoDup5S9c+Q5XOiTVHHRxAK8WcLg=

                    "], {{0, 0}, {10, 10}}, {0, 1}], Background -> 
                    GrayLevel[1], BaseStyle -> 
                    Directive[
                    FontSize -> 7, FontFamily -> "Verdana", FontWeight -> 
                    "Thin", FontTracking -> "Condensed"], Epilog -> {{
                    Text[5975, {0.5, 9.5}, {0, 0}], 
                    Text[2, {2.5, 9.5}, {0, 0}], 
                    Text[1, {4.5, 9.5}, {0, 0}], 
                    Text[5, {5.5, 9.5}, {0, 0}], 
                    Text[9, {6.5, 9.5}, {0, 0}], 
                    Text[1, {7.5, 9.5}, {0, 0}], 
                    Text[5, {8.5, 9.5}, {0, 0}], 
                    Text[5, {9.5, 9.5}, {0, 0}]}, {
                    Text[1, {0.5, 8.5}, {0, 0}], 
                    Text[6786, {1.5, 8.5}, {0, 0}], 
                    Text[11, {2.5, 8.5}, {0, 0}], 
                    Text[2, {3.5, 8.5}, {0, 0}], 
                    Text[1, {5.5, 8.5}, {0, 0}], 
                    Text[2, {6.5, 8.5}, {0, 0}], 
                    Text[14, {7.5, 8.5}, {0, 0}], 
                    Text[4, {8.5, 8.5}, {0, 0}], 
                    Text[3, {9.5, 8.5}, {0, 0}]}, {
                    Text[3, {0.5, 7.5}, {0, 0}], 
                    Text[6, {1.5, 7.5}, {0, 0}], 
                    Text[6004, {2.5, 7.5}, {0, 0}], 
                    Text[6, {3.5, 7.5}, {0, 0}], 
                    Text[2, {4.5, 7.5}, {0, 0}], 
                    Text[13, {7.5, 7.5}, {0, 0}], 
                    Text[6, {8.5, 7.5}, {0, 0}], 
                    Text[3, {9.5, 7.5}, {0, 0}]}, {
                    Text[3, {0.5, 6.5}, {0, 0}], 
                    Text[1, {1.5, 6.5}, {0, 0}], 
                    Text[12, {2.5, 6.5}, {0, 0}], 
                    Text[6142, {3.5, 6.5}, {0, 0}], 
                    Text[16, {5.5, 6.5}, {0, 0}], 
                    Text[7, {7.5, 6.5}, {0, 0}], 
                    Text[11, {8.5, 6.5}, {0, 0}], 
                    Text[9, {9.5, 6.5}, {0, 0}]}, {
                    Text[3, {0.5, 5.5}, {0, 0}], 
                    Text[7, {1.5, 5.5}, {0, 0}], 
                    Text[3, {2.5, 5.5}, {0, 0}], 
                    Text[5872, {4.5, 5.5}, {0, 0}], 
                    Text[5, {6.5, 5.5}, {0, 0}], 
                    Text[2, {7.5, 5.5}, {0, 0}], 
                    Text[5, {8.5, 5.5}, {0, 0}], 
                    Text[26, {9.5, 5.5}, {0, 0}]}, {
                    Text[5, {0.5, 4.5}, {0, 0}], 
                    Text[2, {1.5, 4.5}, {0, 0}], 
                    Text[1, {2.5, 4.5}, {0, 0}], 
                    Text[15, {3.5, 4.5}, {0, 0}], 
                    Text[4, {4.5, 4.5}, {0, 0}], 
                    Text[5414, {5.5, 4.5}, {0, 0}], 
                    Text[22, {6.5, 4.5}, {0, 0}], 
                    Text[2, {7.5, 4.5}, {0, 0}], 
                    Text[18, {8.5, 4.5}, {0, 0}], 
                    Text[9, {9.5, 4.5}, {0, 0}]}, {
                    Text[8, {0.5, 3.5}, {0, 0}], 
                    Text[2, {1.5, 3.5}, {0, 0}], 
                    Text[3, {2.5, 3.5}, {0, 0}], 
                    Text[9, {4.5, 3.5}, {0, 0}], 
                    Text[14, {5.5, 3.5}, {0, 0}], 
                    Text[5943, {6.5, 3.5}, {0, 0}], 
                    Text[5, {8.5, 3.5}, {0, 0}]}, {
                    Text[3, {0.5, 2.5}, {0, 0}], 
                    Text[11, {1.5, 2.5}, {0, 0}], 
                    Text[15, {2.5, 2.5}, {0, 0}], 
                    Text[5, {3.5, 2.5}, {0, 0}], 
                    Text[5, {4.5, 2.5}, {0, 0}], 
                    Text[6280, {7.5, 2.5}, {0, 0}], 
                    Text[3, {8.5, 2.5}, {0, 0}], 
                    Text[14, {9.5, 2.5}, {0, 0}]}, {
                    Text[8, {0.5, 1.5}, {0, 0}], 
                    Text[4, {1.5, 1.5}, {0, 0}], 
                    Text[5, {2.5, 1.5}, {0, 0}], 
                    Text[8, {3.5, 1.5}, {0, 0}], 
                    Text[8, {4.5, 1.5}, {0, 0}], 
                    Text[15, {5.5, 1.5}, {0, 0}], 
                    Text[6, {6.5, 1.5}, {0, 0}], 
                    Text[2, {7.5, 1.5}, {0, 0}], 
                    Text[5862, {8.5, 1.5}, {0, 0}], 
                    Text[14, {9.5, 1.5}, {0, 0}]}, {
                    Text[10, {0.5, 0.5}, {0, 0}], 
                    Text[4, {1.5, 0.5}, {0, 0}], 
                    Text[1, {2.5, 0.5}, {0, 0}], 
                    Text[2, {3.5, 0.5}, {0, 0}], 
                    Text[25, {4.5, 0.5}, {0, 0}], 
                    Text[10, {5.5, 0.5}, {0, 0}], 
                    Text[2, {6.5, 0.5}, {0, 0}], 
                    Text[21, {7.5, 0.5}, {0, 0}], 
                    Text[11, {8.5, 0.5}, {0, 0}], 
                    Text[5960, {9.5, 0.5}, {0, 0}]}}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameTicks -> {{{{9.5, 
                    Rotate[1, 0.]}, {8.5, 
                    Rotate[2, 0.]}, {7.5, 
                    Rotate[3, 0.]}, {6.5, 
                    Rotate[4, 0.]}, {5.5, 
                    Rotate[5, 0.]}, {4.5, 
                    Rotate[6, 0.]}, {3.5, 
                    Rotate[7, 0.]}, {2.5, 
                    Rotate[8, 0.]}, {1.5, 
                    Rotate[9, 0.]}, {0.5, 
                    Rotate[10, 0.]}}, {{9.5, 6003}, {8.5, 6824}, {
                    7.5, 6043}, {6.5, 6201}, {5.5, 5923}, {4.5, 5492}, {
                    3.5, 5984}, {2.5, 6336}, {1.5, 5932}, {0.5, 6046}}}, {{{
                    0.5, 
                    Rotate[6019, Rational[1, 2] Pi]}, {1.5, 
                    Rotate[6823, Rational[1, 2] Pi]}, {2.5, 
                    Rotate[6057, Rational[1, 2] Pi]}, {3.5, 
                    Rotate[6180, Rational[1, 2] Pi]}, {4.5, 
                    Rotate[5926, Rational[1, 2] Pi]}, {5.5, 
                    Rotate[5475, Rational[1, 2] Pi]}, {6.5, 
                    Rotate[5989, Rational[1, 2] Pi]}, {7.5, 
                    Rotate[6342, Rational[1, 2] Pi]}, {8.5, 
                    Rotate[5930, Rational[1, 2] Pi]}, {9.5, 
                    Rotate[6043, Rational[1, 2] Pi]}}, {{0.5, 
                    Rotate[1, Rational[1, 2] Pi]}, {1.5, 
                    Rotate[2, Rational[1, 2] Pi]}, {2.5, 
                    Rotate[3, Rational[1, 2] Pi]}, {3.5, 
                    Rotate[4, Rational[1, 2] Pi]}, {4.5, 
                    Rotate[5, Rational[1, 2] Pi]}, {5.5, 
                    Rotate[6, Rational[1, 2] Pi]}, {6.5, 
                    Rotate[7, Rational[1, 2] Pi]}, {7.5, 
                    Rotate[8, Rational[1, 2] Pi]}, {8.5, 
                    Rotate[9, Rational[1, 2] Pi]}, {9.5, 
                    Rotate[10, Rational[1, 2] Pi]}}}}, GridLinesStyle -> 
                    Directive[
                    GrayLevel[0.5, 0.4]], 
                    ImagePadding -> {{All, 36.}, {36., All}}, ImageSize -> 
                    300, Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]}], {
                    "predicted class", "actual class", None}], True -> 
                   GeneralUtilities`TightLabeled[
                    Graphics[
                    Raster[CompressedData["
1:eJxTTMoPSmVmYGDggmIQO9pg0t6/gm/sn9+1+FPp/db+0JYElerd7+znbAvn
Tl3y1n6vnFJKTcI7+5KcBY88bd/bM4DBBwwal/oXk8PX6ZW/svf8vSxsncEb
+5bMgx7fzN7Z13wuSTG8/cY+qE7X4PfVt/ZzJjQ0J/15Z3/fRjbyjNl7+6nx
3GfqSt/bq6s8WCCx/719nYDxtT+ur+372Hk4ufe/sRf4q5C2phK3ejEBGeOv
fDfsZRaJOsx2eGTPsmHl1jN9L+1x+ReXv/ZWWm2akfvOXmO/2Iy/r97Z+3kc
cDSse4/Tv7jU43InLvfgCp9vk84YFjnetd+sesKrl+uJvYXGsf8pqa9w2ovL
X6Tai8v9uMwnlT7mv/t9OssV++R92hatdx7Ydx8CCjx/QbI5uMKB1PDBReMK
B1zmb+Fhf8K1/ra9R+tlMZ6Gx/bxPssW1Kq8olq4UctfpOb3qsDQBUtUH9iz
Py7qchd7av+018bl1qNXOM0hNf1QK72Rag6ucoPUcMNlL7XESfXvJTXWc4Lf
rto3f74td6H9of15895sEwvc/qJWOUmq+0ktb9c8Fpo3LfqSvatbGLuv1wN7
3/IN97MWv6BaeJLqTlLNwUWfOwMG9k4JTy8o3b4LFcftL2rZi4umlr0unJeb
Jq65aZ+4rurT93OP7PudgQIXcadDWtO40jm10jMAn0BO7w==
                    "], {{0, 0}, {10, 10}}, {0, 1}], Background -> 
                    GrayLevel[1], BaseStyle -> 
                    Directive[
                    FontSize -> 7, FontFamily -> "Verdana", FontWeight -> 
                    "Thin", FontTracking -> "Condensed"], Epilog -> {{
                    Text[972, {0.5, 9.5}, {0, 0}], 
                    Text[5, {6.5, 9.5}, {0, 0}], 
                    Text[2, {7.5, 9.5}, {0, 0}], 
                    Text[1, {8.5, 9.5}, {0, 0}]}, {
                    Text[1133, {1.5, 8.5}, {0, 0}], 
                    Text[1, {2.5, 8.5}, {0, 0}], 
                    Text[1, {7.5, 8.5}, {0, 0}]}, {
                    Text[2, {0.5, 7.5}, {0, 0}], 
                    Text[3, {1.5, 7.5}, {0, 0}], 
                    Text[1023, {2.5, 7.5}, {0, 0}], 
                    Text[1, {3.5, 7.5}, {0, 0}], 
                    Text[1, {4.5, 7.5}, {0, 0}], 
                    Text[2, {7.5, 7.5}, {0, 0}]}, {
                    Text[1, {0.5, 6.5}, {0, 0}], 
                    Text[1, {2.5, 6.5}, {0, 0}], 
                    Text[1000, {3.5, 6.5}, {0, 0}], 
                    Text[5, {5.5, 6.5}, {0, 0}], 
                    Text[2, {7.5, 6.5}, {0, 0}], 
                    Text[1, {8.5, 6.5}, {0, 0}]}, {
                    Text[1, {2.5, 5.5}, {0, 0}], 
                    Text[975, {4.5, 5.5}, {0, 0}], 
                    Text[3, {6.5, 5.5}, {0, 0}], 
                    Text[1, {7.5, 5.5}, {0, 0}], 
                    Text[1, {8.5, 5.5}, {0, 0}], 
                    Text[1, {9.5, 5.5}, {0, 0}]}, {
                    Text[2, {0.5, 4.5}, {0, 0}], 
                    Text[3, {3.5, 4.5}, {0, 0}], 
                    Text[882, {5.5, 4.5}, {0, 0}], 
                    Text[3, {6.5, 4.5}, {0, 0}], 
                    Text[1, {7.5, 4.5}, {0, 0}], 
                    Text[1, {9.5, 4.5}, {0, 0}]}, {
                    Text[2, {0.5, 3.5}, {0, 0}], 
                    Text[2, {1.5, 3.5}, {0, 0}], 
                    Text[1, {4.5, 3.5}, {0, 0}], 
                    Text[2, {5.5, 3.5}, {0, 0}], 
                    Text[951, {6.5, 3.5}, {0, 0}]}, {
                    Text[5, {1.5, 2.5}, {0, 0}], 
                    Text[4, {2.5, 2.5}, {0, 0}], 
                    Text[1, {3.5, 2.5}, {0, 0}], 
                    Text[1018, {7.5, 2.5}, {0, 0}]}, {
                    Text[5, {0.5, 1.5}, {0, 0}], 
                    Text[2, {2.5, 1.5}, {0, 0}], 
                    Text[3, {3.5, 1.5}, {0, 0}], 
                    Text[2, {4.5, 1.5}, {0, 0}], 
                    Text[1, {5.5, 1.5}, {0, 0}], 
                    Text[5, {6.5, 1.5}, {0, 0}], 
                    Text[4, {7.5, 1.5}, {0, 0}], 
                    Text[950, {8.5, 1.5}, {0, 0}], 
                    Text[2, {9.5, 1.5}, {0, 0}]}, {
                    Text[5, {0.5, 0.5}, {0, 0}], 
                    Text[3, {1.5, 0.5}, {0, 0}], 
                    Text[3, {3.5, 0.5}, {0, 0}], 
                    Text[10, {4.5, 0.5}, {0, 0}], 
                    Text[4, {5.5, 0.5}, {0, 0}], 
                    Text[1, {6.5, 0.5}, {0, 0}], 
                    Text[7, {7.5, 0.5}, {0, 0}], 
                    Text[1, {8.5, 0.5}, {0, 0}], 
                    Text[975, {9.5, 0.5}, {0, 0}]}}, Frame -> True, 
                    FrameLabel -> {None, None}, FrameTicks -> {{{{9.5, 
                    Rotate[1, 0.]}, {8.5, 
                    Rotate[2, 0.]}, {7.5, 
                    Rotate[3, 0.]}, {6.5, 
                    Rotate[4, 0.]}, {5.5, 
                    Rotate[5, 0.]}, {4.5, 
                    Rotate[6, 0.]}, {3.5, 
                    Rotate[7, 0.]}, {2.5, 
                    Rotate[8, 0.]}, {1.5, 
                    Rotate[9, 0.]}, {0.5, 
                    Rotate[10, 0.]}}, {{9.5, 980}, {8.5, 1135}, {7.5, 1032}, {
                    6.5, 1010}, {5.5, 982}, {4.5, 892}, {3.5, 958}, {
                    2.5, 1028}, {1.5, 974}, {0.5, 1009}}}, {{{0.5, 
                    Rotate[989, Rational[1, 2] Pi]}, {1.5, 
                    Rotate[1146, Rational[1, 2] Pi]}, {2.5, 
                    Rotate[1032, Rational[1, 2] Pi]}, {3.5, 
                    Rotate[1011, Rational[1, 2] Pi]}, {4.5, 
                    Rotate[989, Rational[1, 2] Pi]}, {5.5, 
                    Rotate[894, Rational[1, 2] Pi]}, {6.5, 
                    Rotate[968, Rational[1, 2] Pi]}, {7.5, 
                    Rotate[1038, Rational[1, 2] Pi]}, {8.5, 
                    Rotate[954, Rational[1, 2] Pi]}, {9.5, 
                    Rotate[979, Rational[1, 2] Pi]}}, {{0.5, 
                    Rotate[1, Rational[1, 2] Pi]}, {1.5, 
                    Rotate[2, Rational[1, 2] Pi]}, {2.5, 
                    Rotate[3, Rational[1, 2] Pi]}, {3.5, 
                    Rotate[4, Rational[1, 2] Pi]}, {4.5, 
                    Rotate[5, Rational[1, 2] Pi]}, {5.5, 
                    Rotate[6, Rational[1, 2] Pi]}, {6.5, 
                    Rotate[7, Rational[1, 2] Pi]}, {7.5, 
                    Rotate[8, Rational[1, 2] Pi]}, {8.5, 
                    Rotate[9, Rational[1, 2] Pi]}, {9.5, 
                    Rotate[10, Rational[1, 2] Pi]}}}}, GridLinesStyle -> 
                    Directive[
                    GrayLevel[0.5, 0.4]], 
                    ImagePadding -> {{All, 30.}, {30., All}}, ImageSize -> 
                    300, Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]}], {
                    "predicted class", "actual class", None}]}, 
                  Dynamic[NeuralNetworks`Private`NetTrain`$flipState]], 
                 "MouseClicked" :> (
                  NeuralNetworks`Private`NetTrain`$flipState = 
                  Not[NeuralNetworks`Private`NetTrain`$flipState])], 
                "LinkHand"]}}, 
              TagBox[GridBox[{
                 {
                  DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 7, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["accuracy", 
                    Column[{
                    Row[{"Measurement: ", "Accuracy"}], 
                    Row[{"Class averaging: ", "Macro"}]}]], 
                    Tooltip["precision", 
                    Column[{
                    Row[{"Measurement: ", "Precision"}], 
                    Row[{"Class averaging: ", "Macro"}]}]], 
                    Tooltip["F1 score", 
                    Column[{
                    Row[{"Measurement: ", "F1Score"}], 
                    Row[{"Class averaging: ", "Macro"}]}]], 
                    Tooltip["recall", 
                    Column[{
                    Row[{"Measurement: ", "Recall"}], 
                    Row[{"Class averaging: ", "Macro"}]}]], 
                    Tooltip["R.O.C. curve plot", 
                    Column[{
                    Row[{"Measurement: ", "ROCCurvePlot"}], 
                    Row[{"Class averaging: ", "Macro"}]}]], 
                    Tooltip["confusion matrix plot", 
                    Column[{
                    Row[{"Measurement: ", "ConfusionMatrixPlot"}], 
                    Row[{"Class averaging: ", "Macro"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 7, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}], 
                    StandardForm],
                   ImageSizeCache->{250., {7., 13.}},
                   TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]},
                 {
                  DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                   ImageSizeCache->{314., {94., 99.}},
                   TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Center}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              DynamicModuleValues:>{}],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"},
           {
            ItemBox[
             StyleBox[
              RowBox[{
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.083, 1., 1.],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.59, 0.7, 0.75],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
              FontFamily->"Verdana",
              FontSize->8,
              FontColor->GrayLevel[0.4]],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          ColumnsEqual->False,
          
          GridBoxAlignment->{
           "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {False, {
               Opacity[0.15]}, False}},
          GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], 
              Offset[1.1199999999999999`], {
               Offset[1.75]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.8]}, 
              Offset[0.2]}}],
         "Grid"],
        FrameMargins->{{10, 10}, {10, 5}},
        FrameStyle->None,
        StripOnInput->False],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Alignment->Center,
      BaseStyle->{
       FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
        NumberMarks -> False, Deployed -> False},
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.5599999999999999]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], 
       Offset[0.8], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Background->GrayLevel[1],
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.85],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.8093731560755873`*^9, 3.8093736707241898`*^9, 
  3.809375953221176*^9, 3.8093773442693624`*^9, 3.809380197444209*^9, 
  3.8093805720642014`*^9, 3.8093824992800827`*^9, 3.809440633106661*^9, 
  3.8094406660736074`*^9, 3.8094419706750946`*^9, 3.80944222826397*^9, 
  3.8094422610291386`*^9, 3.8094427939667244`*^9, 3.809444233358382*^9, 
  3.809445742741815*^9, 3.80944603507904*^9, 3.8094464585884075`*^9, 
  3.8094478684732504`*^9, 3.809454400543824*^9, 3.8094544528292475`*^9, 
  3.8094550112108307`*^9, 3.809455221233723*^9, 3.809455840124748*^9, 
  3.8094665005250254`*^9, 3.8094678988264265`*^9, 3.809471662381769*^9, 
  3.8094725570803146`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"1cda08d7-5e4a-435d-8577-1f71d4e803bb"]
}, Open  ]],

Cell[BoxData["20"], "Input",
 CellChangeTimes->{{3.8096385480777583`*^9, 
  3.809638548233982*^9}},ExpressionUUID->"8655ffa2-1938-421a-959b-\
eb71bcfc9fb0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NetExtract", "[", 
   RowBox[{
    RowBox[{"NetResults", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    "\"\<LeNet NN\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainedLeNet", "=", 
   RowBox[{"NetReplacePart", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "\[Rule]", "Enc"}], ",", 
       RowBox[{"\"\<Output\>\"", "\[Rule]", "Dec"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8094582185609865`*^9, 3.8094582245905204`*^9}, {
   3.809458313003186*^9, 3.8094583177650633`*^9}, {3.809458761923768*^9, 
   3.8094588069867525`*^9}, {3.8094681735106063`*^9, 3.809468183294447*^9}, 
   3.8096178252176356`*^9},ExpressionUUID->"5cdfdb77-b7bd-42dc-b8a5-\
356aa5beda73"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 20, 
                    "$InputSize" -> {24, 24}, "$OutputSize" -> {12, 12}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{50}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 20, "ChannelGroups" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 50, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False, "$IgnorePadding" -> 
                    False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{500, 800}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{500}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{10, 500}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{10}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, "$Version" -> 
                    "12.1.4", "VarianceImage" -> None, "Interleaving" -> 
                    False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> 
                    Tooltip[{0, 1, 
                    Skeleton[7], 9}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}], 
                    "Dimensions" -> 10, "$Version" -> "12.1.4", "InputDepth" -> 
                    1, "$Rank" -> 0]]], NeuralNetworks`Private`NetChain`opart,
                    NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[NeuralNetworks`Private`NetChain`part = 
                    MouseAnnotation[]], 
                    If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    Association[], {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.809458225422*^9, 3.8094583144168224`*^9, 3.809458674765081*^9, {
   3.8094587715151715`*^9, 3.809458774343461*^9}, 3.8094588083088617`*^9, 
   3.809468201740636*^9, 3.809469282022025*^9, 3.8094766769677844`*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"61080672-f157-4790-bd30-208a3543e753"]
}, Open  ]],

Cell[BoxData["21"], "Input",
 CellChangeTimes->{{3.8096385504209595`*^9, 
  3.80963855059278*^9}},ExpressionUUID->"2a3104c0-74f3-480f-9cee-\
0a7d2f0b07d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NetResults", "[", "\"\<RoundMeasurements\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "5"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{"NetResults", "[", "\"\<RoundMeasurements\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"6", ";;", "7"}], "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<RoundMeasurements\>\"", ",", "#1", ",", "#2"}], "]"}], 
         ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"%", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "#1", ",", "#2"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"%", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "#1", ",", "#2"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Dataset", "[", "%%", "]"}], ",", 
         RowBox[{"%", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"%", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"Dividers", "\[Rule]", "Center"}]}], "]"}], "&"}], "[", 
  RowBox[{"Bold", ",", 
   RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8094735527888527`*^9, 3.8094736306390285`*^9}, {
  3.8094736622407684`*^9, 3.809473781572132*^9}, {3.8094738222655478`*^9, 
  3.8094738289984484`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"d94ddbbf-6fed-433c-ab77-e8ba7813d53c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"RoundMeasurements\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontWeight->Bold], 
     StyleBox["\<\"ROCCurvePlot\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontWeight->Bold], 
     StyleBox["\<\"ConfusionMatrixPlot\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontWeight->Bold]},
    {
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Association[
        "InitialData" -> 
         Association[
          "Loss" -> 0.03079126304032593, "Accuracy" -> 0.9910173729928928, 
           "Precision" -> 0.9909455108611874, "F1Score" -> 0.9909354230871464,
            "Recall" -> 0.9909271090482756], "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[81.], 
             TypeSystem`PackageScope`AtomShape[60]]], 5, 
           DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "Accuracy", "F1Score", "Loss", "Precision", "Recall"]], 
           TypeSystem`Atom[Real], 5], "Meta" -> 
         Association["ID" -> 255486341535190], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[81.], 
             TypeSystem`PackageScope`AtomShape[60]]], 5, 
           DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "Accuracy", "F1Score", "Loss", "Precision", "Recall"]], 
           TypeSystem`Atom[Real], 5], "Path" -> {}, "BaseIndices" -> {}, 
         "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 1, 
         "DataRowCount" -> 5, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1],
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loss", 
                    Style[
                    "Loss", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Loss"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["Loss"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0307913"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["Loss"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Accuracy", 
                    Style[
                    "Accuracy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Accuracy"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["Accuracy"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.991017"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["Accuracy"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Precision", 
                    Style[
                    "Precision", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Precision"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["Precision"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.990946"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["Precision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["F1Score", 
                    Style[
                    "F1Score", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F1Score"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["F1Score"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.990935"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["F1Score"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Recall", 
                    Style[
                    "Recall", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Recall"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["Recall"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.990927"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "20a6da5d-bad0-4c65-ad6c-3b4205f6f789"][{
                    Key["Recall"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{186., {73., 79.}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{186., {73., 79.}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>
         Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
          Needs["Dataset`"]; 
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], GridBox[{
       {
        RotationBox[
         ItemBox["\<\"recall\"\>",
          DefaultBaseStyle->"LabeledLabel"],
         BoxRotation->1.5708], 
        GraphicsBox[{{}, {{{}, {}, 
            {Hue[0.083, 1., 1.], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd1nk01VsbB3BJxuhEhupGKEWETGU437gJqcyXRFwpF52LJHKbkKtMIYUM
KXFU5gxlKDehyG2SBqFEODj7JF2U4f7e9a73WOvda+31rM8/ez37efaz1pb3
8LM9wMvDwxNP7f/E/1935t7eL6m9R9+XyWPacLkf//Or9cX8XT/mXUCbeGDo
8Hnez48zhcs+g8aeLDGK/puu2Jt77IjgANfftxlc+PHrvBf1nF2ZWjTvjlqf
zi/T885/p1J11nKQa42rmWe2ps57zELePPfTIMJ6Wjs2jnbQ5Y0k9Ns2DGH8
dtLq/Und9Cd+taQ7aAgefDJTeoqf6DoeWh/Sq+c9t/vA6/iZIUwfd92izD9A
H48Z8GJtZnF9x6B90bIjLLRExXk2FLPpMn6qK+6VsNAXrtNVr/WVPujZn8A/
zIJn8v1SQ/EJumNAZb2f/DDXPQM71mc6DCOhwSJKrHma3jf91a4rYt4ztVXb
794ehoRb3353XV4UMF42SXUPwymxNG63LB8WVyirfBYdgUjyCZkKQX7M6Nt8
YeuOQG75a7W0MQH0ZSSt8d43AqOvPmqZ74WwTChAvzRy3iuGPYdlSkfAsZRr
MHsoAub47ERb+7wva79Pd/g+Atv7nSnBdxfjIuGn+fw0iuPO/atScsSg4v1m
qmfrKA5b7TsebkbDtjSLOqb7KKYPfYuV0xTHw6PGqRanRtG3xazw4i1x+Ol6
POPJmndtmWJAad28c7cfU2/vHMVfP7ZKstdKYNykVNjtO3W+zpW5yGwJMLSS
9m6RYmPa+pXyvThJcMQDBUZU2fhVqDwxJVwKNJctL/1N2NCwEWWq+cnASU1K
ZtCFjQPmuRbmnssx1m5jHXyEDc/6km+Sj1fiOqt9WDeKDSPhlnKbjbJ4wSf/
sTuFjRArvvgMkdVQmCa0cSYbS4ckrKy/yeNmHqc3ppqNDD6ftiZPRdTdW2Mc
2MoG7TqT51jsWpi7ekf+3MVG3XXnHHEBJVyTcqjcP8xGkEIYI/nGeridzP58
dJINlSsMfbdnKqhj3WV+4CfgnNlp61yshsJLoQZiUgSreOsWr01Th8Bk3KMs
RQKtI8uKc0I1kULTX8HUIHgfoBDw9YAWpuPiKrUNCdx+iYvJSNHG5mqDbkkz
goOFju0aLTrQiTAbUrIjOLtf/GBduR5cJD3o6a4Ees2a1W8368NLWUjzvhcB
8Zb+Ofm7IXiWNF79HEAw08AwWAugbCrtuUUowZITy5uX3DDG5ONsm2NhBI+M
f8ucY5lA1X9vXvs5gl196bbrmNswnqrkr5xA4BnRbS8+aYqKdaXHdVMIVE26
91v9aQZW7mH/+CyCdTZKTPXlO7Ctn8dOLI/AzDf8dPrCnTD6OFW07xbBecWx
gaHuXWhMKs/PLyWQ+CNTYeCENZgB7mK6VQRB9erjg8a2mKhM66yoIfhy6qmE
+yM7XPG6H3yynkDT6a5IF8MBgzza+QWNBIW2PFZGxo5o9k0/mP2YIPl35irG
UydU92ZZTzwh+IlfuUCBfy/WxIr4TT6l6rv07FSYgCvM23y1lr4kkLNYs6dG
1w1tph60Vx1Uf7p3eSp9dEeK3wPN528JAs0aUw7be0D0HfFp6iTwafVqfnl1
P0QtV8Kii6pX7WIPFf4DoIlU6kv2ENzkXbDTZ9tBjL1QHK/+QEAXkIoI7fXC
5fVKgY69BDXW0wxagDfuRJpWe/cRJO1dkBux1xfrWoQZjp8JRs4U6WnZMKAT
6FH4eIBA/XVRU+ppP3R9dZRLHKTymbWLEOzwxxMblUO1QwSuCmcVQroDUFjv
XfSYRdA6otYeKxMIN3j/9tcwQYJrU4yr0xFk+Ou1rxyl8pFdftMkIwhvflc3
3MQmYD16GFLGE4yR6LlvAoSgoGUwuudSCEbdaiKaOQS9w/0iHJVQGLlvMqkc
I3jmEdRvXfUHTJ23VuZ9JSh5Hdhz9OAJaKTaN/F9I9D31Yk0+eMUeKNkexIo
X+k7qRlccxoTPava3P8hmM7OLul9GAZpuSX9eZQ3HbbLzeKEg+OBAqkJgqhg
Po/uDWdQJtocy6TcFp+dwrGNRPStcqkvlOFyoYqR8SfXnAYXPtZcFKTLLFJ1
Jqn3X3zlgonlOZxnsUc+UX4if3JJSHM014L79sgnuceCMeXYZjlFUOGUaHGZ
Fg+5JLHoMsqRSuPrWuvOoyffZaHcd+o+J2ecBysS0PtO/rYxZRFOWrjmzUQ4
Gm3+IvGDms+4M1ptV5PwXVZ7wx7K0jsOFmvduoBrtedzmigv2rTjgl5pMvJX
r1i4eJrA3+KJ4K7Wi3iott1XnfKCNwm+dbOX0OwmstKWMmeow4amnwpr7c6R
QMoZS67VWqekwT5Gavldyqpmzsr1s5fRIhoe+J6ynuqhRiNGBqy0RdUVZqj+
kPKymNFMNFeGnDOl3B69gD827ArX0iJT2bI52WhTmRaOpjzs7WwmEngVakIV
oWOUFV8cOF1hfw3q7pw8vVmCW+mCNRtscrju3KidpWJ+HYtmuzTCKA86TZbS
zXK5fvR2vd1LpzxwPHV2XKP81L4uujOICf89PxwaKfNG+nkJJ+bDbUxaTmiO
ml/fmSJ21Q2ul0Uty6n95ybXJRJ5TzssC7iWbOU34L1eCM81XX9voNxiZbjn
gXgxvH65dnI35f/+Yjjc+C/4O2ns
              "]]}, 
            {GrayLevel[0.7], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], LineBox[{{0., 0.}, {1., 1.}}]}}, {
            {Hue[0.083, 1., 1.], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, 
            {GrayLevel[0.7], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}}, {
            {Hue[0.083, 1., 1.], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, 
            {GrayLevel[0.7], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, {}, {}, {}}, {
            {Hue[0.083, 1., 1.], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, 
            {GrayLevel[0.7], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, {}, {}, {}}}, {{}, {}}},
         AspectRatio->1,
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         Background->GrayLevel[1],
         DisplayFunction->Identity,
         Frame->{{True, True}, {True, True}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{Automatic, Automatic},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]],
         ImageSize->{300, 300},
         Method->{
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotRange->{{0., 1.}, {0., 1.}},
         PlotRangeClipping->True,
         PlotRangePadding->{{0.003, 0.003}, {0.003, 0.003}},
         Ticks->{Automatic, Automatic}]},
       {"", 
        ItemBox["\<\"false positive rate\"\>",
         DefaultBaseStyle->"LabeledLabel"]}
      },
      BaseStyle->{
       FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {{0.5}}}], GridBox[{
       {
        RotationBox[
         ItemBox["\<\"actual class\"\>",
          DefaultBaseStyle->"LabeledLabel"],
         BoxRotation->1.5708], 
        GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQGwI+2CsE6y1dl/rW3iv5d8WaC6/sYeLFIff5Kr++
s9+h/u+k4Nu3cHHZq9ud4/a+t3/XWV/kUv0eLm61Kr99T9V7+zvC/590fHsH
F5eSXVd48+Qr+3On9oWHzHtqT8heXOZ0lm3n3eH/2p6vyaaWYeUzuLiNxrMX
PMpv7S3eVr3+4I0wh9dJ6WCX6SP7D7/Lg+7IHIKLP1uxT/bTq7f2ef5/Jivf
ek3Qv/2a04Oub3pnv2RjrU1YxluC5uAS31Bz9HurxBv7DyKVW5ksX8DF1/zz
m2Za8M5+kvXfdbMevyEYDnkf3nFZSj223+Ass5fF+iRcfPJy3i3q0W/smbp/
Ou3bizA/vF79tJTFe/tTc+vCzxa+IxhuuNyJKxxwiZNKrwoJfO18+oG9w9ac
yGMRqwm6H5d/cYU/rvDEZT4umrmuLDFgxVv7mJvVbBmhrwm6x6jLaCZr7SP7
A+bCN7LDjhA0n9TwxKUel39x5V9c8Y4rX2w+E2vv8+SxvUPG60m6refh4su8
8wPFeF/b/+He895F5RlB94gsrXj7ZdJre5vDlqIf9Z4TDGdc8XXyMtutybrv
7BuO1ijej3tDdvyKmbLp373yyD5DOeRUtNBxqoc/LvUWn1K3mre/st8TYndq
huRTgu7HFY+Rf+fqZD94Y69W/ivW9PhLuLjQr6qlGeYP7Qsu3+E+lb6FoL/O
BNZaP7n62v7OvB/q7lueE1SPK/xxlTOkxi+ucrJy/pL43sUP7R18mF8bKO8m
u1wllS67FFpwcu4bexHGqguVTi8J2ktqPK6RiUqxvn8fyocB3OFJqr9Ircdx
lW+4ygdc/p3wt4tn9buH9go35791vLCfoDup5S9c+Q5XOiTVHHRxAK8WcLg=

          "], {{0, 0}, {10, 10}}, {0, 1}],
         Background->GrayLevel[1],
         BaseStyle->Directive[
          FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
           FontTracking -> "Condensed"],
         Epilog->{{
            InsetBox[
             FormBox["5975", TraditionalForm], {0.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {2.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {4.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {5.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["9", TraditionalForm], {6.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {7.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {8.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {9.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["1", TraditionalForm], {0.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["6786", TraditionalForm], {1.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["11", TraditionalForm], {2.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {3.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {5.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {6.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["14", TraditionalForm], {7.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["4", TraditionalForm], {8.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {9.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["3", TraditionalForm], {0.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["6", TraditionalForm], {1.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["6004", TraditionalForm], {2.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["6", TraditionalForm], {3.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {4.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["13", TraditionalForm], {7.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["6", TraditionalForm], {8.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {9.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["3", TraditionalForm], {0.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {1.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["12", TraditionalForm], {2.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["6142", TraditionalForm], {3.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["16", TraditionalForm], {5.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["7", TraditionalForm], {7.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["11", TraditionalForm], {8.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["9", TraditionalForm], {9.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["3", TraditionalForm], {0.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["7", TraditionalForm], {1.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {2.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5872", TraditionalForm], {4.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {6.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {7.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {8.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["26", TraditionalForm], {9.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["5", TraditionalForm], {0.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {1.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {2.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["15", TraditionalForm], {3.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["4", TraditionalForm], {4.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5414", TraditionalForm], {5.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["22", TraditionalForm], {6.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {7.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["18", TraditionalForm], {8.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["9", TraditionalForm], {9.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["8", TraditionalForm], {0.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {1.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {2.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["9", TraditionalForm], {4.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["14", TraditionalForm], {5.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5943", TraditionalForm], {6.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {8.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["3", TraditionalForm], {0.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["11", TraditionalForm], {1.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["15", TraditionalForm], {2.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {3.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {4.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["6280", TraditionalForm], {7.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {8.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["14", TraditionalForm], {9.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["8", TraditionalForm], {0.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["4", TraditionalForm], {1.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {2.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["8", TraditionalForm], {3.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["8", TraditionalForm], {4.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["15", TraditionalForm], {5.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["6", TraditionalForm], {6.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {7.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5862", TraditionalForm], {8.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["14", TraditionalForm], {9.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["10", TraditionalForm], {0.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["4", TraditionalForm], {1.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {2.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {3.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["25", TraditionalForm], {4.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["10", TraditionalForm], {5.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {6.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["21", TraditionalForm], {7.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["11", TraditionalForm], {8.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5960", TraditionalForm], {9.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}},
         Frame->True,
         FrameLabel->{None, None},
         FrameTicks->{{{{9.5, 
              FormBox[
               RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
              FormBox[
               RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
              FormBox[
               RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
              FormBox[
               RotationBox["4", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
              FormBox[
               RotationBox["5", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
              FormBox[
               RotationBox["6", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
              FormBox[
               RotationBox["7", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
              FormBox[
               RotationBox["8", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
              FormBox[
               RotationBox["9", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
              FormBox[
               RotationBox["10", BoxRotation -> 0.], TraditionalForm]}}, {{
             9.5, 
              FormBox["6003", TraditionalForm]}, {8.5, 
              FormBox["6824", TraditionalForm]}, {7.5, 
              FormBox["6043", TraditionalForm]}, {6.5, 
              FormBox["6201", TraditionalForm]}, {5.5, 
              FormBox["5923", TraditionalForm]}, {4.5, 
              FormBox["5492", TraditionalForm]}, {3.5, 
              FormBox["5984", TraditionalForm]}, {2.5, 
              FormBox["6336", TraditionalForm]}, {1.5, 
              FormBox["5932", TraditionalForm]}, {0.5, 
              FormBox["6046", TraditionalForm]}}}, {{{0.5, 
              FormBox[
               RotationBox["6019", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {1.5, 
              FormBox[
               RotationBox["6823", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {2.5, 
              FormBox[
               RotationBox["6057", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {3.5, 
              FormBox[
               RotationBox["6180", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {4.5, 
              FormBox[
               RotationBox["5926", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {5.5, 
              FormBox[
               RotationBox["5475", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {6.5, 
              FormBox[
               RotationBox["5989", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {7.5, 
              FormBox[
               RotationBox["6342", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {8.5, 
              FormBox[
               RotationBox["5930", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {9.5, 
              FormBox[
               RotationBox["6043", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}}, {{0.5, 
              FormBox[
               RotationBox["1", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {1.5, 
              FormBox[
               RotationBox["2", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {2.5, 
              FormBox[
               RotationBox["3", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {3.5, 
              FormBox[
               RotationBox["4", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {4.5, 
              FormBox[
               RotationBox["5", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {5.5, 
              FormBox[
               RotationBox["6", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {6.5, 
              FormBox[
               RotationBox["7", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {7.5, 
              FormBox[
               RotationBox["8", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {8.5, 
              FormBox[
               RotationBox["9", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {9.5, 
              FormBox[
               RotationBox["10", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}}}},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{All, 36.}, {36., All}},
         ImageSize->300,
         Method->{
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}]},
       {"", 
        ItemBox["\<\"predicted class\"\>",
         DefaultBaseStyle->"LabeledLabel"]}
      },
      BaseStyle->{
       FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {{0.5}}}]}
   },
   AutoDelete->False,
   GridBoxDividers->{
    "Columns" -> {False, {True}, False}, "Rows" -> {False, {True}, False}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8094735780575323`*^9, {3.8094736450417147`*^9, 3.80947378243115*^9}, 
   3.809473829701235*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"2e631a2f-0d56-46a5-adb0-52692b09ac72"]
}, Open  ]],

Cell["22", "Text",
 CellChangeTimes->{{3.8094738749562006`*^9, 3.809473956358987*^9}, {
  3.809638558231777*^9, 
  3.809638558403471*^9}},ExpressionUUID->"3b607493-784f-48c9-8c28-\
d72b5f5e4da3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NetResults", "[", "\"\<ValidationMeasurements\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "5"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{"NetResults", "[", "\"\<ValidationMeasurements\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"6", ";;", "7"}], "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<ValidationMeasurements\>\"", ",", "#1", ",", "#2"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"%", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "#1", ",", "#2"}], 
          "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"%", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "#1", ",", "#2"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Dataset", "[", "%%", "]"}], ",", 
         RowBox[{"%", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"%", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"Dividers", "\[Rule]", "Center"}]}], "]"}], "&"}], "[", 
  RowBox[{"Bold", ",", 
   RowBox[{"FontFamily", "\[Rule]", "\"\<Alegreya SC\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.809473965216271*^9, 3.80947397124603*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"e2282b51-d1a3-498f-9bc2-da029ef9604f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"ValidationMeasurements\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontWeight->Bold], 
     StyleBox["\<\"ROCCurvePlot\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontWeight->Bold], 
     StyleBox["\<\"ConfusionMatrixPlot\"\>",
      StripOnInput->False,
      FontFamily->"Alegreya SC",
      FontWeight->Bold]},
    {
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Association[
        "InitialData" -> 
         Association[
          "Loss" -> 0.03850385804063196, "Accuracy" -> 0.9879, "Precision" -> 
           0.9879178857036639, "F1Score" -> 0.9878023409351708, "Recall" -> 
           0.987774172558949], "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[81.], 
             TypeSystem`PackageScope`AtomShape[60]]], 5, 
           DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "Accuracy", "F1Score", "Loss", "Precision", "Recall"]], 
           TypeSystem`Atom[Real], 5], "Meta" -> 
         Association["ID" -> 255490636502628], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[81.], 
             TypeSystem`PackageScope`AtomShape[60]]], 5, 
           DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "Accuracy", "F1Score", "Loss", "Precision", "Recall"]], 
           TypeSystem`Atom[Real], 5], "Path" -> {}, "BaseIndices" -> {}, 
         "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 1, 
         "DataRowCount" -> 5, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1],
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Loss", 
                    Style[
                    "Loss", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Loss"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["Loss"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.0385039"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["Loss"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Accuracy", 
                    Style[
                    "Accuracy", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Accuracy"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["Accuracy"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.9879"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["Accuracy"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Precision", 
                    Style[
                    "Precision", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Precision"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["Precision"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.987918"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["Precision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["F1Score", 
                    Style[
                    "F1Score", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["F1Score"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["F1Score"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.987802"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["F1Score"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Recall", 
                    Style[
                    "Recall", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Recall"]}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["Recall"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{81., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.987774"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "59d4837b-9648-448e-9aa4-3071cf0d0b5e"][{
                    Key["Recall"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{186., {73., 79.}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{186., {73., 79.}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>
         Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
          Needs["Dataset`"]; 
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], GridBox[{
       {
        RotationBox[
         ItemBox["\<\"recall\"\>",
          DefaultBaseStyle->"LabeledLabel"],
         BoxRotation->1.5708], 
        GraphicsBox[{{}, {{{}, {}, 
            {Hue[0.59, 0.7, 0.75], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
              "]]}, 
            {GrayLevel[0.7], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6], LineBox[{{0., 0.}, {1., 1.}}]}}, {
            {Hue[0.59, 0.7, 0.75], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, 
            {GrayLevel[0.7], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}}, {
            {Hue[0.59, 0.7, 0.75], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, 
            {GrayLevel[0.7], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, {}, {}, {}}, {
            {Hue[0.59, 0.7, 0.75], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, 
            {GrayLevel[0.7], PointSize[0.009166666666666668], 
             AbsoluteThickness[1.6]}, {}, {}, {}}}, {{}, {}}},
         AspectRatio->1,
         Axes->{True, True},
         AxesLabel->{None, None},
         AxesOrigin->{0, 0},
         Background->GrayLevel[1],
         DisplayFunction->Identity,
         Frame->{{True, True}, {True, True}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{Automatic, Automatic},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]],
         ImageSize->{300, 300},
         Method->{
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}},
         PlotRange->{{0., 1.}, {0., 1.}},
         PlotRangeClipping->True,
         PlotRangePadding->{{0.003, 0.003}, {0.003, 0.003}},
         Ticks->{Automatic, Automatic}]},
       {"", 
        ItemBox["\<\"false positive rate\"\>",
         DefaultBaseStyle->"LabeledLabel"]}
      },
      BaseStyle->{
       FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {{0.5}}}], GridBox[{
       {
        RotationBox[
         ItemBox["\<\"actual class\"\>",
          DefaultBaseStyle->"LabeledLabel"],
         BoxRotation->1.5708], 
        GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQO9pg0t6/gm/sn9+1+FPp/db+0JYElerd7+znbAvn
Tl3y1n6vnFJKTcI7+5KcBY88bd/bM4DBBwwal/oXk8PX6ZW/svf8vSxsncEb
+5bMgx7fzN7Z13wuSTG8/cY+qE7X4PfVt/ZzJjQ0J/15Z3/fRjbyjNl7+6nx
3GfqSt/bq6s8WCCx/719nYDxtT+ur+372Hk4ufe/sRf4q5C2phK3ejEBGeOv
fDfsZRaJOsx2eGTPsmHl1jN9L+1x+ReXv/ZWWm2akfvOXmO/2Iy/r97Z+3kc
cDSse4/Tv7jU43InLvfgCp9vk84YFjnetd+sesKrl+uJvYXGsf8pqa9w2ovL
X6Tai8v9uMwnlT7mv/t9OssV++R92hatdx7Ydx8CCjx/QbI5uMKB1PDBReMK
B1zmb+Fhf8K1/ra9R+tlMZ6Gx/bxPssW1Kq8olq4UctfpOb3qsDQBUtUH9iz
Py7qchd7av+018bl1qNXOM0hNf1QK72Rag6ucoPUcMNlL7XESfXvJTXWc4Lf
rto3f74td6H9of15895sEwvc/qJWOUmq+0ktb9c8Fpo3LfqSvatbGLuv1wN7
3/IN97MWv6BaeJLqTlLNwUWfOwMG9k4JTy8o3b4LFcftL2rZi4umlr0unJeb
Jq65aZ+4rurT93OP7PudgQIXcadDWtO40jm10jMAn0BO7w==
          "], {{0, 0}, {10, 10}}, {0, 1}],
         Background->GrayLevel[1],
         BaseStyle->Directive[
          FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
           FontTracking -> "Condensed"],
         Epilog->{{
            InsetBox[
             FormBox["972", TraditionalForm], {0.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {6.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {7.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {8.5, 9.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["1133", TraditionalForm], {1.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {2.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {7.5, 8.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["2", TraditionalForm], {0.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {1.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1023", TraditionalForm], {2.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {3.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {4.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {7.5, 7.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["1", TraditionalForm], {0.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {2.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1000", TraditionalForm], {3.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {5.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {7.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {8.5, 6.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["1", TraditionalForm], {2.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["975", TraditionalForm], {4.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {6.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {7.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {8.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {9.5, 5.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["2", TraditionalForm], {0.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {3.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["882", TraditionalForm], {5.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {6.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {7.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {9.5, 4.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["2", TraditionalForm], {0.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {1.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {4.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {5.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["951", TraditionalForm], {6.5, 3.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["5", TraditionalForm], {1.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["4", TraditionalForm], {2.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {3.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1018", TraditionalForm], {7.5, 2.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["5", TraditionalForm], {0.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {2.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {3.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {4.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {5.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["5", TraditionalForm], {6.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["4", TraditionalForm], {7.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["950", TraditionalForm], {8.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["2", TraditionalForm], {9.5, 1.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}, {
            InsetBox[
             FormBox["5", TraditionalForm], {0.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {1.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["3", TraditionalForm], {3.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["10", TraditionalForm], {4.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["4", TraditionalForm], {5.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {6.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["7", TraditionalForm], {7.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["1", TraditionalForm], {8.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]], 
            InsetBox[
             FormBox["975", TraditionalForm], {9.5, 0.5}, 
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}]]}},
         Frame->True,
         FrameLabel->{None, None},
         FrameTicks->{{{{9.5, 
              FormBox[
               RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
              FormBox[
               RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
              FormBox[
               RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
              FormBox[
               RotationBox["4", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
              FormBox[
               RotationBox["5", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
              FormBox[
               RotationBox["6", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
              FormBox[
               RotationBox["7", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
              FormBox[
               RotationBox["8", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
              FormBox[
               RotationBox["9", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
              FormBox[
               RotationBox["10", BoxRotation -> 0.], TraditionalForm]}}, {{
             9.5, 
              FormBox["980", TraditionalForm]}, {8.5, 
              FormBox["1135", TraditionalForm]}, {7.5, 
              FormBox["1032", TraditionalForm]}, {6.5, 
              FormBox["1010", TraditionalForm]}, {5.5, 
              FormBox["982", TraditionalForm]}, {4.5, 
              FormBox["892", TraditionalForm]}, {3.5, 
              FormBox["958", TraditionalForm]}, {2.5, 
              FormBox["1028", TraditionalForm]}, {1.5, 
              FormBox["974", TraditionalForm]}, {0.5, 
              FormBox["1009", TraditionalForm]}}}, {{{0.5, 
              FormBox[
               RotationBox["989", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {1.5, 
              FormBox[
               RotationBox["1146", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {2.5, 
              FormBox[
               RotationBox["1032", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {3.5, 
              FormBox[
               RotationBox["1011", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {4.5, 
              FormBox[
               RotationBox["989", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {5.5, 
              FormBox[
               RotationBox["894", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {6.5, 
              FormBox[
               RotationBox["968", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {7.5, 
              FormBox[
               RotationBox["1038", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {8.5, 
              FormBox[
               RotationBox["954", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {9.5, 
              FormBox[
               RotationBox["979", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}}, {{0.5, 
              FormBox[
               RotationBox["1", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {1.5, 
              FormBox[
               RotationBox["2", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {2.5, 
              FormBox[
               RotationBox["3", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {3.5, 
              FormBox[
               RotationBox["4", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {4.5, 
              FormBox[
               RotationBox["5", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {5.5, 
              FormBox[
               RotationBox["6", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {6.5, 
              FormBox[
               RotationBox["7", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {7.5, 
              FormBox[
               RotationBox["8", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {8.5, 
              FormBox[
               RotationBox["9", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}, {9.5, 
              FormBox[
               RotationBox["10", BoxRotation -> 1.5707963267948966`], 
               TraditionalForm]}}}},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImagePadding->{{All, 30.}, {30., All}},
         ImageSize->300,
         Method->{
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
           "RangePadding" -> Scaled[0.05]}]},
       {"", 
        ItemBox["\<\"predicted class\"\>",
         DefaultBaseStyle->"LabeledLabel"]}
      },
      BaseStyle->{
       FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
      GridBoxSpacings->{"Columns" -> {{0.5}}}]}
   },
   AutoDelete->False,
   GridBoxDividers->{
    "Columns" -> {False, {True}, False}, "Rows" -> {False, {True}, False}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8094739723238096`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"d495d79d-b0c7-463b-8fd7-08d4d0815e76"]
}, Open  ]],

Cell["23", "Text",
 CellChangeTimes->{{3.809458737532875*^9, 3.809458751070954*^9}, {
  3.8094587835359774`*^9, 3.8094587867565365`*^9}, {3.8094755279387207`*^9, 
  3.809475554287777*^9}, {3.8094768826565557`*^9, 3.80947691628594*^9}, {
  3.8096347003677955`*^9, 3.8096347044451265`*^9}, {3.809638562636985*^9, 
  3.809638562746147*^9}},ExpressionUUID->"706125e4-0e30-4a41-9f2b-\
753946400633"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expls", "=", 
  RowBox[{"Keys", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TestData", "[", 
      RowBox[{"[", "2150", "]"}], "]"}], ",", 
     RowBox[{"TestData", "[", 
      RowBox[{"[", "3910", "]"}], "]"}], ",", 
     RowBox[{"TestData", "[", 
      RowBox[{"[", "6115", "]"}], "]"}], ",", 
     RowBox[{"TestData", "[", 
      RowBox[{"[", "6011", "]"}], "]"}], ",", 
     RowBox[{"TestData", "[", 
      RowBox[{"[", "7834", "]"}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8094759436077614`*^9, 3.8094759659236984`*^9}, {
   3.8094760370272245`*^9, 3.8094760409556513`*^9}, {3.8094761215710716`*^9, 
   3.8094761612203913`*^9}, {3.8094762521688986`*^9, 3.809476252411368*^9}, {
   3.80947629481187*^9, 3.809476325708148*^9}, 3.809476398781727*^9, {
   3.8094764841612062`*^9, 3.8094765692875*^9}, {3.8094766208874235`*^9, 
   3.809476627859638*^9}, {3.809476698350342*^9, 3.8094767215769486`*^9}, {
   3.8096347917837286`*^9, 3.8096348075926523`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"78bacb3d-9768-4c9d-971e-de40145b0bcb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8Q8KM505uBkYGRUajnD7pcChMQ2MerAUnnJ6hSOezFh75+/f3/59cn
9iwaj1DkYqRewtlGTNooOi/u+QlnP1djcvuNy13LOZn24nS0D5METrkmJtZD
GIK/fv78+ff//5tMTItQJT7MTBYEes8nee1LITS5gyB/Q4CBENcbZKmPIrwx
kyZduvByUisvExMPirZYJi8YcxMXmpwLQu4EL1MiDrmvxkxi5mhyLpDIea/M
JHLqC4rcAnamehB9XJSJaSa6v12YWDJ3bkkRZGJegBHS572gvluCLgPy4YIA
oEzlRYw0QT8AAIGOoCk=
      "], {{0, 28.}, {28., 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28., 28.},
    PlotRange->{{0, 28.}, {0, 28.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9Y8GeqBGMsDrl6Jiam4LdYpdYwA+WYlHZgkWrhYAIDM0ypDhkmJj7L
dKAkhlQjIxNT+Lr/Z5mYIjHklBhZJ//7v4KXiXUZhtwKm23/f3eJMzFNwu4H
V5BTZmOTmaIE9gP3IwyZjQaMjIxildKMjPfQZD5ncwPdWfPkfwaT2HM0uUtM
TIzuB/7+38rKVI1u4ksTiSO/////lcHEtBcuuCNyFkLFrxwmJvMXcC4jk/hK
GPuOBROT4UuEUhtWJmbxvNYZnz9vyeADSr1CtimXExL6TAxMTKzlL/+jgBMh
/kIgOUax6sMYvv7//+nKgon37qH7i84AAFmhkSM=
      "], {{0, 28.}, {28., 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28., 28.},
    PlotRange->{{0, 28.}, {0, 28.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9g8EiVoQOH1GMtJvlb2KWe6DAxH8JhoBpT0gbsUge0mTJ/47BLkcn8
5/9f2KR+qDEx2SclWSYlrX6ILlfDBAeSK1Cl1rIwMXHVXX61qK4umUUTxeTH
kkySTEo3IBwdpi3IcnVMXA9OPoZydKTfI0n9MWaqgbObWdqRtT1gMv8GY59i
krqOLJfCVAtj3pRhOoAs9U2O7SjUwNkyLCF/keU2M+lCGM+DmKRbUD0HlfvR
IMskdQFV6v9fRaaqe7N92ZiYIq7/RwexkMDSn4slqP/N9GbLO3jrI6YMHQEA
8fWyhA==
      "], {{0, 28.}, {28., 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28., 28.},
    PlotRange->{{0, 28.}, {0, 28.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cP+Hqkvf/IE6xSP2qYGJmYxP2wSG21YGIKCJyycSOm1AURJrNr2O26
mczV+AuHM0IYAnE5MYIp8RV2mR8b+Jl24zBwIRMTk4ho5FMsciFAKZDXDF9g
6JrHwMho0f7/oiFjB5rUxxomNufdf4BqgphyUGTeNEsxMUWBma+ZmI6iyGUB
bdL4DmY2Mpmhej6ZKUefqRfEWsPNhBZkyYwbrzOKPweFCx+6D12Z6l94SWxc
rsUkexbdA9d0mOo9gF5jcjuM6e/ZsiBvyzXfxZT6///thJSUnLfYZAYHAADV
z7E5
      "], {{0, 28.}, {28., 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28., 28.},
    PlotRange->{{0, 28.}, {0, 28.}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x8moIIJDOwnTZp04QOq1H0ZZjBgAmIxRbXKbV8Rcg8MEXJgnPUFSXIy
AmSD5FP/4bB9DVDvZFxOq8cjN4k8uQMMTEIHYZyrqHL5TMwacE4TitQFJSbm
fuwmXlViZqp/gF0OGLb6r7HrUuVg1sUq9aUYaJfsYqy6UoBhqYvVrgMhwDjU
n45NapsQEzOfD1a7tokzMynPxGrVfzVmZocP2KWwAgBgTKsn
      "], {{0, 28.}, {28., 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28., 28.},
    PlotRange->{{0, 28.}, {0, 28.}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.809476161767357*^9, 3.809476254199368*^9, {3.809476299170944*^9, 
   3.809476326324586*^9}, 3.809476399616711*^9, {3.8094764849456587`*^9, 
   3.8094766283388863`*^9}, {3.809476706808025*^9, 3.809476722433566*^9}, {
   3.8096348003910284`*^9, 3.8096348080767126`*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"30cbebec-4dd8-4f5b-9154-7f31d15eb992"]
}, Open  ]],

Cell["24", "Text",
 CellChangeTimes->{{3.8094769179211655`*^9, 3.809476921048464*^9}, {
  3.809638566339048*^9, 
  3.8096385676668587`*^9}},ExpressionUUID->"d72dab84-7f92-43c1-9550-\
455b9e6d009e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrainedLeNet", "[", 
  RowBox[{"Expls", ",", "\"\<TopProbabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.809458853555581*^9, 3.8094588642937284`*^9}, {
  3.8094767129164357`*^9, 3.809476725442119*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"a3b0b8ab-3a6b-438c-9c91-dcf478621745"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", "\[Rule]", "0.9981710910797119`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[Rule]", "0.9999216794967651`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"6", "\[Rule]", "0.5875424742698669`"}], ",", 
     RowBox[{"0", "\[Rule]", "0.40458783507347107`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", "\[Rule]", "0.9711028933525085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", "\[Rule]", "0.9993696212768555`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.809458857107047*^9, 3.809458865119117*^9}, 
   3.8094767264719424`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"633cea10-f2fc-43c5-8c8a-1bb6551d5f47"]
}, Open  ]],

Cell[BoxData["25"], "Input",
 CellChangeTimes->{{3.8096385851002407`*^9, 
  3.8096385852720804`*^9}},ExpressionUUID->"81446501-2709-4376-ba91-\
23157ede8798"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"TrainedLeNet", "[", " ", 
       RowBox[{"Expls", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<TopDecisions\>\"", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"TrainedLeNet", "[", " ", 
       RowBox[{"Expls", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"ToString", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "6", ",", "5", ",", "7"}], "}"}], ",", 
        "1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Top Decisions\>\"", ",", "\"\<Top Probabilities \>\""}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"TableAlignments", "\[Rule]", "Center"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8094769597860394`*^9, 3.8094770129425354`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"063afffe-5949-41e1-9ced-ec4dce7d291e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"Top Decisions\"\>",
       HoldForm], 
      TagBox["\<\"Top Probabilities \"\>",
       HoldForm]},
     {
      TagBox["\<\"2\"\>",
       HoldForm], 
      TagBox[GridBox[{
         {"3"},
         {"2"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {
          RowBox[{"3", "\[Rule]", "0.0016594785265624523`"}]},
         {
          RowBox[{"2", "\[Rule]", "0.9981710910797119`"}]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]},
     {
      TagBox["\<\"3\"\>",
       HoldForm], 
      TagBox[GridBox[{
         {"9"},
         {"3"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {
          RowBox[{"9", "\[Rule]", "0.00005347444675862789`"}]},
         {
          RowBox[{"3", "\[Rule]", "0.9999216794967651`"}]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]},
     {
      TagBox["\<\"6\"\>",
       HoldForm], 
      TagBox[GridBox[{
         {"0"},
         {"6"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {
          RowBox[{"0", "\[Rule]", "0.40458783507347107`"}]},
         {
          RowBox[{"6", "\[Rule]", "0.5875424742698669`"}]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]},
     {
      TagBox["\<\"5\"\>",
       HoldForm], 
      TagBox[GridBox[{
         {"0"},
         {"6"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {
          RowBox[{"0", "\[Rule]", "0.014046828262507915`"}]},
         {
          RowBox[{"6", "\[Rule]", "0.9711028933525085`"}]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]},
     {
      TagBox["\<\"7\"\>",
       HoldForm], 
      TagBox[GridBox[{
         {"3"},
         {"7"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column], 
      TagBox[GridBox[{
         {
          RowBox[{"3", "\[Rule]", "0.0005267361993901432`"}]},
         {
          RowBox[{"7", "\[Rule]", "0.9993696212768555`"}]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {{
             Offset[0.2]}}}],
       Column]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"2", "3", "6", "5", "7"}, {
      "Top Decisions", "Top Probabilities "}}, TableAlignments -> 
    Center]]]], "Output",
 CellChangeTimes->{{3.8094769991388116`*^9, 3.809477014039811*^9}},
 CellLabel->
  "Out[202]//TableForm=",ExpressionUUID->"39b8d33d-d42b-4ab5-817b-\
25299df50a21"]
}, Open  ]],

Cell[BoxData["26"], "Input",
 CellChangeTimes->{{3.8096385926611443`*^9, 
  3.8096385928798423`*^9}},ExpressionUUID->"5078a98f-e584-42a6-84f4-\
36926ce907ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMeasurements", "[", 
  RowBox[{
  "TrainedLeNet", ",", "TestData", ",", "\"\<ConfusionMatrixPlot\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8094777329723463`*^9, 3.809477740120872*^9}, {
  3.8094778364728174`*^9, 3.809477864784359*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"e1cc136c-cc84-4541-b6a4-480f325a7639"],

Cell[BoxData[GridBox[{
   {
    RotationBox[
     ItemBox["\<\"actual class\"\>",
      DefaultBaseStyle->"LabeledLabel"],
     BoxRotation->1.5708], 
    GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggmIQ21l505LVM9/Zy2hJLwzhfG//RPrcq4ye9/YLBSMv
XfV5b883tTdgVct7+0+86aUmx97bM4DBBwwalzm4xJ+YcJc3Pntrr7V/xcd/
ve/sr2maJswNwm0+LvfgMn9ZPXeWzK1r9nvUvFb6XntoL6WqHfwn5iXN/YXL
fGrZu2ne/pvLtt62X9eUWRzU9Njebp15W5/qK5zqcZmPK/x5ek9MWpf2yr5w
RU5LkOob+wn5FqsXG76zb3NL8Qw3fmtvGWLmtFLonf0J8zlXL0rgNp9UegvL
OeWYj5ftVy7MY/h+9YF9ww+JgLtPXuB0Z1Z1/oEbkq/tk4XvG69Y8MZ+XuJF
0/xsoLsyxd4xnX1tH1oX+Piv9Fv7NcFZB6yWviM5/HGpx+UeXOKLopYr7267
a9+x67V1mtIT+xObP56eWPCKZHtJTSekhj+ucMOl/lWh/N5ArQf2PNJS8+ol
n9ofd+3Li3nyiuT0T2r+ItVfpIZnRg/H/3ilW/ZcM+f7tnx/ZG/kMU+i+clL
qtmLK52oR+yV1m14Y+/+8vCk4Olv7Xe5Mnuz3ccd/qTaq8TBed4v9qp9wZ/V
+6yDH9rz/RS8PkEet79IDX9S/Utq+YnLnLL8y5rPVC/ZL4vc7nbJ/IF9GeN+
tkOzXlCtHCY1fKiVbs+dAQN7p4SnF5Ru34WKvyA53Ei1l1rhgEu9W9ID5vMb
bthn+01vCKh4ZK9i6Tr1+QrS8xe1aFLTCantFgCTS3LU
      "], {{0, 0}, {10, 10}}, {0, 1}],
     Background->GrayLevel[1],
     BaseStyle->Directive[
      FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
       FontTracking -> "Condensed"],
     Epilog->{{
        InsetBox[
         FormBox["975", TraditionalForm], {0.5, 9.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {6.5, 9.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {7.5, 9.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["3", TraditionalForm], {8.5, 9.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}, {
        InsetBox[
         FormBox["1130", TraditionalForm], {1.5, 8.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {2.5, 8.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {3.5, 8.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {8.5, 8.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}, {
        InsetBox[
         FormBox["1", TraditionalForm], {0.5, 7.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["3", TraditionalForm], {1.5, 7.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1022", TraditionalForm], {2.5, 7.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {3.5, 7.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {4.5, 7.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {7.5, 7.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {8.5, 7.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}, {
        InsetBox[
         FormBox["1", TraditionalForm], {2.5, 6.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1001", TraditionalForm], {3.5, 6.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {5.5, 6.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {7.5, 6.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["3", TraditionalForm], {8.5, 6.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {9.5, 6.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}, {
        InsetBox[
         FormBox["1", TraditionalForm], {2.5, 5.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["972", TraditionalForm], {4.5, 5.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {7.5, 5.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["3", TraditionalForm], {8.5, 5.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["5", TraditionalForm], {9.5, 5.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}, {
        InsetBox[
         FormBox["2", TraditionalForm], {0.5, 4.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["6", TraditionalForm], {3.5, 4.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["878", TraditionalForm], {5.5, 4.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {6.5, 4.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {7.5, 4.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {8.5, 4.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {9.5, 4.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}, {
        InsetBox[
         FormBox["6", TraditionalForm], {0.5, 3.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {1.5, 3.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {3.5, 3.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["3", TraditionalForm], {4.5, 3.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["3", TraditionalForm], {5.5, 3.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["943", TraditionalForm], {6.5, 3.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {8.5, 3.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}, {
        InsetBox[
         FormBox["3", TraditionalForm], {1.5, 2.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["8", TraditionalForm], {2.5, 2.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["4", TraditionalForm], {3.5, 2.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1003", TraditionalForm], {7.5, 2.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["3", TraditionalForm], {8.5, 2.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["7", TraditionalForm], {9.5, 2.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}, {
        InsetBox[
         FormBox["1", TraditionalForm], {0.5, 1.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {2.5, 1.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {3.5, 1.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {4.5, 1.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {5.5, 1.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {7.5, 1.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["963", TraditionalForm], {8.5, 1.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {9.5, 1.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}, {
        InsetBox[
         FormBox["2", TraditionalForm], {0.5, 0.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {1.5, 0.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {3.5, 0.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {4.5, 0.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["3", TraditionalForm], {5.5, 0.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["1", TraditionalForm], {7.5, 0.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["2", TraditionalForm], {8.5, 0.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]], 
        InsetBox[
         FormBox["996", TraditionalForm], {9.5, 0.5}, 
         ImageScaled[{
           Rational[1, 2], 
           Rational[1, 2]}]]}},
     Frame->True,
     FrameLabel->{None, None},
     FrameTicks->{{{{9.5, 
          FormBox[
           RotationBox["0", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
          FormBox[
           RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
          FormBox[
           RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
          FormBox[
           RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
          FormBox[
           RotationBox["4", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
          FormBox[
           RotationBox["5", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
          FormBox[
           RotationBox["6", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["7", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["8", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
          FormBox[
           RotationBox["9", BoxRotation -> 0.], TraditionalForm]}}, {{9.5, 
          FormBox["980", TraditionalForm]}, {8.5, 
          FormBox["1135", TraditionalForm]}, {7.5, 
          FormBox["1032", TraditionalForm]}, {6.5, 
          FormBox["1010", TraditionalForm]}, {5.5, 
          FormBox["982", TraditionalForm]}, {4.5, 
          FormBox["892", TraditionalForm]}, {3.5, 
          FormBox["958", TraditionalForm]}, {2.5, 
          FormBox["1028", TraditionalForm]}, {1.5, 
          FormBox["974", TraditionalForm]}, {0.5, 
          FormBox["1009", TraditionalForm]}}}, {{{0.5, 
          FormBox[
           RotationBox["987", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["1138", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["1036", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {3.5, 
          FormBox[
           RotationBox["1018", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {4.5, 
          FormBox[
           RotationBox["979", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {5.5, 
          FormBox[
           RotationBox["887", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {6.5, 
          FormBox[
           RotationBox["945", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {7.5, 
          FormBox[
           RotationBox["1012", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {8.5, 
          FormBox[
           RotationBox["984", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {9.5, 
          FormBox[
           RotationBox["1014", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, {{0.5, 
          FormBox[
           RotationBox["0", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["1", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["2", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {3.5, 
          FormBox[
           RotationBox["3", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {4.5, 
          FormBox[
           RotationBox["4", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {5.5, 
          FormBox[
           RotationBox["5", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {6.5, 
          FormBox[
           RotationBox["6", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {7.5, 
          FormBox[
           RotationBox["7", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {8.5, 
          FormBox[
           RotationBox["8", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {9.5, 
          FormBox[
           RotationBox["9", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->{{All, 30.}, {30., All}},
     ImageSize->300,
     Method->{
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}]},
   {"", 
    ItemBox["\<\"predicted class\"\>",
     DefaultBaseStyle->"LabeledLabel"]}
  },
  BaseStyle->{
   FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
  GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
  GridBoxSpacings->{"Columns" -> {{0.5}}}]], "Output",
 CellChangeTimes->{
  3.809477749023717*^9, {3.809477841392831*^9, 3.809477865249536*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"83180fa3-b6ac-4ece-9163-e8bcc6f23e4b"]
}, Open  ]]
}, Closed]]
},
WindowSize->{681, 676},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3c617569-9307-4693-b4ac-b13c53b59683"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 329, 5, 53, "Subsection",ExpressionUUID->"16e4cec8-d06b-44fb-a8a2-63562cde3ad6"],
Cell[912, 29, 131, 3, 28, "Input",ExpressionUUID->"966ceb9a-a1d3-412a-b75a-6ce6527e32c7"],
Cell[CellGroupData[{
Cell[1068, 36, 2014, 56, 105, "Input",ExpressionUUID->"74d1bcd1-6047-49eb-9cc4-51dc85d6b2b6"],
Cell[3085, 94, 3825, 86, 247, "Output",ExpressionUUID->"f5fe0565-8f67-4be1-a311-5ed7c917620a"]
}, Open  ]],
Cell[6925, 183, 129, 3, 28, "Input",ExpressionUUID->"54d6cf7e-6ede-4772-bcff-b5093c15395a"],
Cell[7057, 188, 2593, 73, 86, "Input",ExpressionUUID->"d96903ee-1280-47b1-ad26-48d4696d03f6"],
Cell[9653, 263, 165, 3, 34, "Text",ExpressionUUID->"eddc053b-8c5c-4ae2-b2f6-208bc847b145"],
Cell[9821, 268, 791, 18, 28, "Input",ExpressionUUID->"a19f7971-9937-4e06-aa81-a96d12f85f81"],
Cell[10615, 288, 298, 5, 34, "Text",ExpressionUUID->"7adfbf94-4597-4309-8752-0bd4bb60c6c2"],
Cell[CellGroupData[{
Cell[10938, 297, 838, 15, 67, "Input",ExpressionUUID->"af8ef2a7-10a5-401e-921d-31fd943e001d"],
Cell[11779, 314, 15151, 329, 397, "Output",ExpressionUUID->"9a8e59eb-dd62-4c9a-8a6b-8a47648c7a54"]
}, Open  ]],
Cell[26945, 646, 322, 5, 34, "Text",ExpressionUUID->"9a7237e8-55df-4ada-b2b9-68ef027d7c41"],
Cell[CellGroupData[{
Cell[27292, 655, 411, 7, 28, "Input",ExpressionUUID->"6f6a63de-9555-4584-a3e2-acba6964930a"],
Cell[27706, 664, 21590, 443, 79, "Output",ExpressionUUID->"7a2e7e7a-2864-4eae-b90b-3956cfbb4562"]
}, Open  ]],
Cell[49311, 1110, 221, 4, 34, "Text",ExpressionUUID->"6e75de00-57d7-4d1f-99e2-dd27c57d1f53"],
Cell[CellGroupData[{
Cell[49557, 1118, 1380, 31, 48, "Input",ExpressionUUID->"8de80b20-5f5e-45b4-ba9e-2bb30c8ccfd4"],
Cell[50940, 1151, 130128, 2159, 378, 96165, 1603, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"bfb6c219-1967-441d-aceb-caadc709a94a"]
}, Open  ]],
Cell[181083, 3313, 131, 3, 28, "Input",ExpressionUUID->"34d29043-0961-4411-bd9a-b72b7346b912"],
Cell[CellGroupData[{
Cell[181239, 3320, 1333, 28, 124, "Input",ExpressionUUID->"a5736f25-bbfd-42b6-adb9-79af8e1db4c5"],
Cell[182575, 3350, 15689, 346, 397, "Output",ExpressionUUID->"8d14f1b5-4e90-4421-a8f2-c34c0c41e159"]
}, Open  ]],
Cell[198279, 3699, 131, 3, 28, "Input",ExpressionUUID->"3270950f-4107-473a-9d55-18e1e863e79b"],
Cell[CellGroupData[{
Cell[198435, 3706, 1186, 31, 67, "Input",ExpressionUUID->"27cc740b-c53d-4b43-8530-5f3d8fa61fad"],
Cell[199624, 3739, 130950, 2173, 378, 87633, 1463, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"08ff51ea-c509-47f6-bce4-5b0409831bf8"]
}, Open  ]],
Cell[330589, 5915, 131, 3, 28, "Input",ExpressionUUID->"b9831023-c607-42c6-ae52-32a5448655fc"],
Cell[CellGroupData[{
Cell[330745, 5922, 570, 11, 28, "Input",ExpressionUUID->"fc9d5261-c48b-4956-9c8b-af97759a823f"],
Cell[331318, 5935, 36985, 656, 276, "Output",ExpressionUUID->"5877af03-e03f-4122-800d-3d38f67a3a56"]
}, Open  ]],
Cell[368318, 6594, 241, 4, 34, "Text",ExpressionUUID->"e0593fad-2fa9-4fe7-aed6-44b7942fa6b1"],
Cell[CellGroupData[{
Cell[368584, 6602, 221, 3, 28, "Input",ExpressionUUID->"90a2e36f-af4f-43bd-ac85-fa756f2e7a37"],
Cell[368808, 6607, 83087, 1736, 209, "Output",ExpressionUUID->"2a45ac0b-5e3f-4f7b-8547-17cf82414f47"]
}, Open  ]],
Cell[451910, 8346, 156, 3, 28, "Input",ExpressionUUID->"999312d0-17bd-4b5e-8f78-4b14cc2da841"],
Cell[CellGroupData[{
Cell[452091, 8353, 216, 3, 28, "Input",ExpressionUUID->"12b96817-1c5d-49ac-b4f2-2cca75462bb7"],
Cell[452310, 8358, 1573, 24, 223, "Output",ExpressionUUID->"2013ada7-ea41-4bc9-bfbb-e04f5915b002"]
}, Open  ]],
Cell[453898, 8385, 156, 3, 28, "Input",ExpressionUUID->"c32a8ac0-6ffe-4858-83ec-56d77f3a1fbc"],
Cell[CellGroupData[{
Cell[454079, 8392, 205, 3, 28, "Input",ExpressionUUID->"feb39492-9e59-4d43-b99f-320427633336"],
Cell[454287, 8397, 740, 13, 98, "Output",ExpressionUUID->"19b9d963-5fce-4895-81fa-0c84b243c229"]
}, Open  ]],
Cell[455042, 8413, 156, 3, 28, "Input",ExpressionUUID->"1bd9a85c-c9a9-454e-8664-29d4f7d51f7c"],
Cell[CellGroupData[{
Cell[455223, 8420, 1899, 37, 200, "Input",ExpressionUUID->"bcd1824c-da22-48fa-9f70-56fa04c8cf3b"],
Cell[457125, 8459, 54849, 1059, 459, "Output",ExpressionUUID->"4c615ee2-928f-4e95-a642-e935feb25fe0"]
}, Open  ]],
Cell[511989, 9521, 418, 7, 34, "Text",ExpressionUUID->"aadaae51-a56b-4380-ac1d-76fe8313ee25"],
Cell[CellGroupData[{
Cell[512432, 9532, 374, 9, 28, "Input",ExpressionUUID->"5df2a580-5b0a-4734-80bf-499f3b0356e9"],
Cell[512809, 9543, 29396, 540, 171, "Output",ExpressionUUID->"e4160bd7-bb70-4046-9862-d59b29f2dc25"]
}, Open  ]],
Cell[542220, 10086, 200, 4, 34, "Text",ExpressionUUID->"38d83def-c0a3-44d7-b1c4-1ff301ec2917"],
Cell[CellGroupData[{
Cell[542445, 10094, 331, 8, 28, "Input",ExpressionUUID->"d77d20a0-74df-45ff-a9fd-9a0d8acf770f"],
Cell[542779, 10104, 68822, 1250, 276, "Output",ExpressionUUID->"40a33d7a-7e03-4cfe-831b-9ac19170b94d"]
}, Open  ]],
Cell[611616, 11357, 247, 4, 34, "Text",ExpressionUUID->"6c3422f0-2f5e-4ed1-893e-9545d53afbc6"],
Cell[CellGroupData[{
Cell[611888, 11365, 473, 11, 48, "Input",ExpressionUUID->"1ac3e3ab-a42c-4b0d-bb7f-47ec0c2190a9"],
Cell[612364, 11378, 398, 8, 32, "Output",ExpressionUUID->"1806c8d6-2290-4c21-84c6-a0d8935efcdd"]
}, Open  ]],
Cell[612777, 11389, 154, 3, 28, "Input",ExpressionUUID->"282fccdb-ae2c-4889-b77e-eba2d22a2dbe"],
Cell[CellGroupData[{
Cell[612956, 11396, 4298, 103, 333, "Input",ExpressionUUID->"f09b0bde-6bad-4935-a6d3-5ff681acd324"],
Cell[617257, 11501, 250104, 4254, 278, "Output",ExpressionUUID->"2e6ec632-08c2-4eb1-8502-43da45541d9e"]
}, Open  ]],
Cell[867376, 15758, 156, 3, 28, "Input",ExpressionUUID->"7ee00ea4-9620-4d6f-ac5e-a3d863e5aae4"],
Cell[CellGroupData[{
Cell[867557, 15765, 536, 8, 28, "Input",ExpressionUUID->"e3cf1025-22f1-4fa8-80e4-94e728e793c3"],
Cell[868096, 15775, 387, 6, 32, "Output",ExpressionUUID->"c4ea9a3e-cd98-4456-ab12-9351e9bb0a43"]
}, Open  ]],
Cell[868498, 15784, 158, 3, 28, "Input",ExpressionUUID->"4374cde8-d0f5-4590-8b79-cfbfb0901882"],
Cell[CellGroupData[{
Cell[868681, 15791, 811, 18, 67, "Input",ExpressionUUID->"e8609365-d732-42e7-bd8a-092b4b3128e8"],
Cell[869495, 15811, 81541, 1558, 335, "Output",ExpressionUUID->"e9285c39-7f8f-4f1a-be1a-e6be76ae32c7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[951085, 17375, 309, 5, 37, "Subsection",ExpressionUUID->"353a51cd-cc30-45ce-8976-926320193db7"],
Cell[951397, 17382, 131, 3, 28, "Input",ExpressionUUID->"8ed99df5-370d-4738-896e-f30cdebe73b9"],
Cell[951531, 17387, 376, 9, 28, "Input",ExpressionUUID->"b5a64978-dedc-45f6-abc9-bcec0032acc6"],
Cell[951910, 17398, 131, 3, 28, "Input",ExpressionUUID->"cfa86d56-cf89-4f12-9f38-c86265f7dadd"],
Cell[CellGroupData[{
Cell[952066, 17405, 790, 18, 48, "Input",ExpressionUUID->"a0f77188-d12e-4862-b063-e6c88db45736"],
Cell[952859, 17425, 90648, 1654, 213, "Output",ExpressionUUID->"dbdc4a93-b9f9-43c2-b082-d6d17c66e388"]
}, Open  ]],
Cell[1043522, 19082, 131, 3, 28, "Input",ExpressionUUID->"945aa3ae-14e0-41db-ad0f-2aa2d5359496"],
Cell[CellGroupData[{
Cell[1043678, 19089, 488, 12, 48, "Input",ExpressionUUID->"7a88d382-bde2-4bea-968b-d0c0aac90f56"],
Cell[1044169, 19103, 17686, 340, 87, "Output",ExpressionUUID->"5566a026-af77-4030-9766-160aec7fa12e"]
}, Open  ]],
Cell[1061870, 19446, 129, 3, 28, "Input",ExpressionUUID->"e6c7843c-d070-492e-acf7-660a987fea25"],
Cell[CellGroupData[{
Cell[1062024, 19453, 670, 16, 48, "Input",ExpressionUUID->"3283fab1-d091-488f-8868-47bf73e3cf52"],
Cell[1062697, 19471, 357728, 6529, 79, "Output",ExpressionUUID->"67038ec9-41c8-4fb5-a045-b43c024057f1"]
}, Open  ]],
Cell[1420440, 26003, 429, 7, 34, "Text",ExpressionUUID->"8908a11a-9d37-4007-befd-4890a075a181"],
Cell[CellGroupData[{
Cell[1420894, 26014, 1332, 28, 124, "Input",ExpressionUUID->"84b7798c-69a9-4361-911d-f2b3453c7273"],
Cell[1422229, 26044, 78663, 1481, 541, "Output",ExpressionUUID->"d0d7a7de-0aab-4330-af81-da07175aee30"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1500941, 27531, 198, 4, 37, "Subsection",ExpressionUUID->"5daec5bf-1f23-46d3-9ae8-60d2984b52ca"],
Cell[CellGroupData[{
Cell[1501164, 27539, 596, 14, 48, "Input",ExpressionUUID->"3d13dbf0-c13e-4286-b4e1-fbf066a316d9"],
Cell[1501763, 27555, 1577, 34, 244, "Output",ExpressionUUID->"af788de4-df00-4b9a-888e-c2a2cf15681e"]
}, Open  ]],
Cell[1503355, 27592, 129, 3, 28, "Input",ExpressionUUID->"aa6f3a63-8d0b-4345-985d-570bae165618"],
Cell[CellGroupData[{
Cell[1503509, 27599, 413, 11, 48, "Input",ExpressionUUID->"ebf424c6-f4ce-4603-8209-8493c17dc8bb"],
Cell[1503925, 27612, 593, 13, 87, "Output",ExpressionUUID->"9ed026ad-634d-49bd-b171-cea2aed30d66"]
}, Open  ]],
Cell[1504533, 27628, 129, 3, 28, "Input",ExpressionUUID->"c31dcb68-a9d8-4f78-ad8c-0854f4e2762c"],
Cell[CellGroupData[{
Cell[1504687, 27635, 1842, 43, 143, "Input",ExpressionUUID->"f84b0999-05b6-447c-83a7-fd3df7146910"],
Cell[1506532, 27680, 6968, 152, 61, "Output",ExpressionUUID->"d0857575-8951-4234-bcbf-22b75c3bd6f4"],
Cell[1513503, 27834, 1701, 33, 32, "Output",ExpressionUUID->"a5f75bd4-5275-41a3-9888-f85d61e7882a"]
}, Open  ]],
Cell[1515219, 27870, 131, 3, 28, "Input",ExpressionUUID->"a31bffdd-1a83-488b-aa20-9dd810e3d9ac"],
Cell[1515353, 27875, 640, 15, 48, "Input",ExpressionUUID->"9a6fb67b-0e5a-4d63-8a43-45869ca3233f"],
Cell[1515996, 27892, 156, 3, 28, "Input",ExpressionUUID->"d9b91ea5-b3d0-43b2-95f3-482b4ad9553c"],
Cell[CellGroupData[{
Cell[1516177, 27899, 964, 19, 67, "Input",ExpressionUUID->"8572dc14-f73e-41cd-a998-9e6af6a6cd40"],
Cell[1517144, 27920, 43312, 879, 79, "Output",ExpressionUUID->"27291433-b71c-4973-8881-f94244b4ae03"]
}, Open  ]],
Cell[1560471, 28802, 154, 3, 28, "Input",ExpressionUUID->"36ab4d8c-8d82-4cef-a8e1-1a3a598dff15"],
Cell[CellGroupData[{
Cell[1560650, 28809, 346, 5, 28, "Input",ExpressionUUID->"04e5991f-ba50-44d1-8f31-e1c43da96a95"],
Cell[1560999, 28816, 122814, 2552, 256, "Output",ExpressionUUID->"6b181eab-1b84-4a44-90d7-97a1f7f40120"]
}, Open  ]],
Cell[1683828, 31371, 156, 3, 28, "Input",ExpressionUUID->"14ce6ee8-1203-4365-bc98-c80e69e4767b"],
Cell[CellGroupData[{
Cell[1684009, 31378, 397, 6, 28, "Input",ExpressionUUID->"b9f42791-a60c-480e-a53b-b96b2229e6b1"],
Cell[1684409, 31386, 214601, 4500, 131, "Output",ExpressionUUID->"c95ecf5c-7ddb-4756-9a7e-40becaba5e7e"]
}, Open  ]],
Cell[1899025, 35889, 154, 3, 28, "Input",ExpressionUUID->"2e5c26ac-52b8-4ab4-93f2-66892a4bda46"],
Cell[1899182, 35894, 858, 18, 48, "Input",ExpressionUUID->"09ba5934-7124-408e-997d-9e0b958fee2e"],
Cell[1900043, 35914, 495, 8, 34, "Text",ExpressionUUID->"23bed33e-ce0f-439a-98fa-875083a2355e"],
Cell[CellGroupData[{
Cell[1900563, 35926, 1009, 24, 48, "Input",ExpressionUUID->"49aa06a8-2596-47a8-a436-24e08b2a8746"],
Cell[1901575, 35952, 201, 3, 32, "Output",ExpressionUUID->"84f026a6-f51b-4902-a99f-46ffbf4477d9"]
}, Open  ]],
Cell[1901791, 35958, 379, 6, 34, "Text",ExpressionUUID->"e413d930-d426-47f2-a50f-49663ccdcfcc"],
Cell[CellGroupData[{
Cell[1902195, 35968, 1616, 41, 105, "Input",ExpressionUUID->"ecc25564-566d-43b4-ade1-a5af44a5e6df"],
Cell[1903814, 36011, 335, 6, 32, "Output",ExpressionUUID->"53ede326-9fc1-4fab-8657-63e33006ff85"]
}, Open  ]],
Cell[1904164, 36020, 507, 8, 34, "Text",ExpressionUUID->"5300aacc-b431-41f7-a4b3-16a038579811"],
Cell[CellGroupData[{
Cell[1904696, 36032, 1461, 34, 143, "Input",ExpressionUUID->"c56a1aa2-e9a8-405f-aa0f-4445db022d6d"],
Cell[1906160, 36068, 91092, 1855, 209, "Output",ExpressionUUID->"b6297fa5-d9f6-4b07-b745-c0ab6043e814"]
}, Open  ]],
Cell[1997267, 37926, 156, 3, 28, "Input",ExpressionUUID->"5f70ded5-86d2-4f01-bd70-9977caf146f2"],
Cell[1997426, 37931, 1422, 37, 86, "Input",ExpressionUUID->"578cb665-7ec8-4dfc-8bdf-16b6649a5c40"],
Cell[1998851, 37970, 158, 3, 28, "Input",ExpressionUUID->"ccb663f9-3ca6-4cfa-bc90-cd3065ab1cdf"],
Cell[CellGroupData[{
Cell[1999034, 37977, 677, 17, 48, "Input",ExpressionUUID->"0d7ba27d-939c-4a46-91d9-b86d3c943530"],
Cell[1999714, 37996, 64702, 1188, 227, "Output",ExpressionUUID->"4278f0a0-0a55-46d9-a56d-7fa689d6c18b"]
}, Open  ]],
Cell[2064431, 39187, 156, 3, 28, "Input",ExpressionUUID->"1c9c0e0b-61f6-4e5e-b1d9-a0160afcec11"],
Cell[CellGroupData[{
Cell[2064612, 39194, 3858, 73, 257, "Input",ExpressionUUID->"7e534d01-1986-4408-bf38-9678c4cbfa8b"],
Cell[2068473, 39269, 76546, 1493, 513, "Output",ExpressionUUID->"1cda08d7-5e4a-435d-8577-1f71d4e803bb"]
}, Open  ]],
Cell[2145034, 40765, 156, 3, 28, "Input",ExpressionUUID->"8655ffa2-1938-421a-959b-eb71bcfc9fb0"],
Cell[CellGroupData[{
Cell[2145215, 40772, 789, 19, 48, "Input",ExpressionUUID->"5cdfdb77-b7bd-42dc-b8a5-356aa5beda73"],
Cell[2146007, 40793, 41161, 832, 79, "Output",ExpressionUUID->"61080672-f157-4790-bd30-208a3543e753"]
}, Open  ]],
Cell[2187183, 41628, 155, 3, 28, "Input",ExpressionUUID->"2a3104c0-74f3-480f-9cee-0a7d2f0b07d3"],
Cell[CellGroupData[{
Cell[2187363, 41635, 1863, 53, 105, "Input",ExpressionUUID->"d94ddbbf-6fed-433c-ab77-e8ba7813d53c"],
Cell[2189229, 41690, 57908, 1243, 350, "Output",ExpressionUUID->"2e631a2f-0d56-46a5-adb0-52692b09ac72"]
}, Open  ]],
Cell[2247152, 42936, 195, 4, 34, "Text",ExpressionUUID->"3b607493-784f-48c9-8c28-d72b5f5e4da3"],
Cell[CellGroupData[{
Cell[2247372, 42944, 1770, 51, 105, "Input",ExpressionUUID->"e2282b51-d1a3-498f-9bc2-da029ef9604f"],
Cell[2249145, 42997, 52476, 1092, 350, "Output",ExpressionUUID->"d495d79d-b0c7-463b-8fd7-08d4d0815e76"]
}, Open  ]],
Cell[2301636, 44092, 394, 6, 34, "Text",ExpressionUUID->"706125e4-0e30-4a41-9f2b-753946400633"],
Cell[CellGroupData[{
Cell[2302055, 44102, 1082, 22, 48, "Input",ExpressionUUID->"78bacb3d-9768-4c9d-971e-de40145b0bcb"],
Cell[2303140, 44126, 3992, 86, 47, "Output",ExpressionUUID->"30cbebec-4dd8-4f5b-9154-7f31d15eb992"]
}, Open  ]],
Cell[2307147, 44215, 197, 4, 34, "Text",ExpressionUUID->"d72dab84-7f92-43c1-9550-455b9e6d009e"],
Cell[CellGroupData[{
Cell[2307369, 44223, 317, 6, 28, "Input",ExpressionUUID->"a3b0b8ab-3a6b-438c-9c91-dcf478621745"],
Cell[2307689, 44231, 722, 18, 52, "Output",ExpressionUUID->"633cea10-f2fc-43c5-8c8a-1bb6551d5f47"]
}, Open  ]],
Cell[2308426, 44252, 158, 3, 28, "Input",ExpressionUUID->"81446501-2709-4376-ba91-23157ede8798"],
Cell[CellGroupData[{
Cell[2308609, 44259, 1084, 29, 105, "Input",ExpressionUUID->"063afffe-5949-41e1-9ced-ec4dce7d291e"],
Cell[2309696, 44290, 5648, 167, 211, "Output",ExpressionUUID->"39b8d33d-d42b-4ab5-817b-25299df50a21"]
}, Open  ]],
Cell[2315359, 44460, 158, 3, 28, "Input",ExpressionUUID->"5078a98f-e584-42a6-84f4-36926ce907ac"],
Cell[CellGroupData[{
Cell[2315542, 44467, 353, 8, 28, "Input",ExpressionUUID->"e1cc136c-cc84-4541-b6a4-480f325a7639"],
Cell[2315898, 44477, 15865, 455, 333, "Output",ExpressionUUID->"83180fa3-b6ac-4ece-9163-e8bcc6f23e4b"]
}, Open  ]]
}, Closed]]
}
]
*)

